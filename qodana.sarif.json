{
  "$schema": "https://raw.githubusercontent.com/schemastore/schemastore/master/src/schemas/json/sarif-2.1.0-rtm.5.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "QDJS",
          "fullName": "Qodana for JS",
          "version": "233.14246.173",
          "rules": [],
          "taxa": [
            {
              "id": "EditorConfig",
              "name": "EditorConfig"
            },
            {
              "id": "JavaScript and TypeScript",
              "name": "JavaScript and TypeScript"
            },
            {
              "id": "JavaScript and TypeScript/Control flow issues",
              "name": "Control flow issues",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Angular",
              "name": "Angular"
            },
            {
              "id": "PostCSS",
              "name": "PostCSS"
            },
            {
              "id": "Sass_SCSS",
              "name": "Sass/SCSS"
            },
            {
              "id": "Shell script",
              "name": "Shell script"
            },
            {
              "id": "JavaScript and TypeScript/Unit testing",
              "name": "Unit testing",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JSON and JSON5",
              "name": "JSON and JSON5"
            },
            {
              "id": "JavaScript and TypeScript/General",
              "name": "General",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/Code style issues",
              "name": "Code style issues",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/Potentially undesirable code constructs",
              "name": "Potentially undesirable code constructs",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/Flow type checker",
              "name": "Flow type checker",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/Probable bugs",
              "name": "Probable bugs",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "HTML",
              "name": "HTML"
            },
            {
              "id": "Cucumber",
              "name": "Cucumber"
            },
            {
              "id": "JavaScript and TypeScript/Unused symbols",
              "name": "Unused symbols",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/Data flow",
              "name": "Data flow",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/Bitwise operation issues",
              "name": "Bitwise operation issues",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/ES2015 migration aids",
              "name": "ES2015 migration aids",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "General",
              "name": "General"
            },
            {
              "id": "HTML/Accessibility",
              "name": "Accessibility",
              "relationships": [
                {
                  "target": {
                    "id": "HTML",
                    "index": 14,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/React",
              "name": "React",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/TypeScript",
              "name": "TypeScript",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/Validity issues",
              "name": "Validity issues",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/Potentially confusing code constructs",
              "name": "Potentially confusing code constructs",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "CSS",
              "name": "CSS"
            },
            {
              "id": "CSS/Invalid elements",
              "name": "Invalid elements",
              "relationships": [
                {
                  "target": {
                    "id": "CSS",
                    "index": 26,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Handlebars_Mustache",
              "name": "Handlebars/Mustache"
            },
            {
              "id": "JavaScript and TypeScript/Try statement issues",
              "name": "Try statement issues",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/Function metrics",
              "name": "Function metrics",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Structural search",
              "name": "Structural search"
            },
            {
              "id": "Dependency analysis",
              "name": "Dependency analysis"
            },
            {
              "id": "YAML",
              "name": "YAML"
            },
            {
              "id": "XML",
              "name": "XML"
            },
            {
              "id": "JavaScript and TypeScript/Assignment issues",
              "name": "Assignment issues",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "CSS/Code style issues",
              "name": "Code style issues",
              "relationships": [
                {
                  "target": {
                    "id": "CSS",
                    "index": 26,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Less",
              "name": "Less"
            },
            {
              "id": "RegExp",
              "name": "RegExp"
            },
            {
              "id": "Vue",
              "name": "Vue"
            },
            {
              "id": "JavaScript and TypeScript/Node.js",
              "name": "Node.js",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/Imports and dependencies",
              "name": "Imports and dependencies",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "RELAX NG",
              "name": "RELAX NG"
            },
            {
              "id": "CSS/Probable bugs",
              "name": "Probable bugs",
              "relationships": [
                {
                  "target": {
                    "id": "CSS",
                    "index": 26,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/Naming conventions",
              "name": "Naming conventions",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/Switch statement issues",
              "name": "Switch statement issues",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/DOM issues",
              "name": "DOM issues",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/Async code and promises",
              "name": "Async code and promises",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript and TypeScript/Code quality tools",
              "name": "Code quality tools",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Code Coverage",
              "name": "Code Coverage"
            },
            {
              "id": "Proofreading",
              "name": "Proofreading"
            },
            {
              "id": "Security",
              "name": "Security"
            },
            {
              "id": "CSS/Code quality tools",
              "name": "Code quality tools",
              "relationships": [
                {
                  "target": {
                    "id": "CSS",
                    "index": 26,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "EJS",
              "name": "EJS"
            },
            {
              "id": "Pug_Jade",
              "name": "Pug/Jade"
            },
            {
              "id": "Qodana",
              "name": "Qodana"
            },
            {
              "id": "JavaScript and TypeScript/Security",
              "name": "Security",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 1,
                    "toolComponent": {
                      "name": "QDJS"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Internationalization",
              "name": "Internationalization"
            },
            {
              "id": "Version control",
              "name": "Version control"
            }
          ],
          "language": "en-US",
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "isComprehensive": false
        },
        "extensions": [
          {
            "name": "org.editorconfig.editorconfigjetbrains",
            "version": "233.14246",
            "rules": [
              {
                "id": "EditorConfigCharClassRedundancy",
                "shortDescription": {
                  "text": "Unnecessary character class"
                },
                "fullDescription": {
                  "text": "Reports character classes that consist of a single character. Such classes can be simplified to a character, for example '[a]'→'a'.",
                  "markdown": "Reports character classes that consist of a single character. Such classes can be simplified to a character, for example `[a]`→`a`."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigCharClassRedundancy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigRootDeclarationUniqueness",
                "shortDescription": {
                  "text": "Extra top-level declaration"
                },
                "fullDescription": {
                  "text": "Reports multiple top-level declarations. There can be only one optional “root=true” top-level declaration in the EditorConfig file. Using multiple top-level declarations is not allowed.",
                  "markdown": "Reports multiple top-level declarations. There can be only one optional \"root=true\" top-level declaration in the EditorConfig file. Using multiple top-level declarations is not allowed."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigRootDeclarationUniqueness",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigNumerousWildcards",
                "shortDescription": {
                  "text": "Too many wildcards"
                },
                "fullDescription": {
                  "text": "Reports sections that contain too many wildcards. Using a lot of wildcards may lead to performance issues.",
                  "markdown": "Reports sections that contain too many wildcards. Using a lot of wildcards may lead to performance issues."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "EditorConfigNumerousWildcards",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigPartialOverride",
                "shortDescription": {
                  "text": "Overlapping sections"
                },
                "fullDescription": {
                  "text": "Reports subsets of files specified in the current section that overlap with other subsets in other sections. For example: '[{foo,bar}]' and '[{foo,bas}]' both contain “foo”.",
                  "markdown": "Reports subsets of files specified in the current section that overlap with other subsets in other sections. For example: `[{foo,bar}]` and `[{foo,bas}]` both contain \"foo\"."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "EditorConfigPartialOverride",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigEmptySection",
                "shortDescription": {
                  "text": "Empty section"
                },
                "fullDescription": {
                  "text": "Reports sections that do not contain any EditorConfig properties.",
                  "markdown": "Reports sections that do not contain any EditorConfig properties."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigEmptySection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigShadowingOption",
                "shortDescription": {
                  "text": "Overriding property"
                },
                "fullDescription": {
                  "text": "Reports properties that override the same properties defined earlier in the file. For example: '[*.java]\nindent_size=4\n[{*.java,*.js}]\nindent_size=2' The second section includes the same files as '[*.java]' but also sets indent_size to value 2. Thus the first declaration 'indent_size=4'will be ignored.",
                  "markdown": "Reports properties that override the same properties defined earlier in the file.\n\nFor example:\n\n\n    [*.java]\n    indent_size=4\n    [{*.java,*.js}]\n    indent_size=2\n\nThe second section includes the same files as `[*.java]` but also sets indent_size to value 2. Thus the first declaration `indent_size=4`will be ignored."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigShadowingOption",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigListAcceptability",
                "shortDescription": {
                  "text": "Unexpected value list"
                },
                "fullDescription": {
                  "text": "Reports lists of values that are used in properties in which lists are not supported. In this case, only a single value can be specified.",
                  "markdown": "Reports lists of values that are used in properties in which lists are not supported. In this case, only a single value can be specified."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigListAcceptability",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigKeyCorrectness",
                "shortDescription": {
                  "text": "Unknown property"
                },
                "fullDescription": {
                  "text": "Reports properties that are not supported by the IDE. Note: some “ij” domain properties may require specific language plugins.",
                  "markdown": "Reports properties that are not supported by the IDE. Note: some \"ij\" domain properties may require specific language plugins."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigKeyCorrectness",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigPatternEnumerationRedundancy",
                "shortDescription": {
                  "text": "Unnecessary braces"
                },
                "fullDescription": {
                  "text": "Reports pattern lists that are either empty '{}' or contain just one pattern, for example '{foo}' in contrast to a list containing multiple patterns, for example '{foo,bar}'. In this case braces are handled as a part of the name. For example, the pattern '*.{a}' will match the file 'my.{a}' but not 'my.a'.",
                  "markdown": "Reports pattern lists that are either empty `{}` or contain just one pattern, for example `{foo}` in contrast to a list containing multiple patterns, for example `{foo,bar}`. In this case braces are handled as a part of the name. For example, the pattern `*.{a}` will match the file `my.{a}` but not `my.a`."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigPatternEnumerationRedundancy",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigEncoding",
                "shortDescription": {
                  "text": "File encoding doesn't match EditorConfig charset"
                },
                "fullDescription": {
                  "text": "Checks that current file encoding matches the encoding defined in \"charset\" property of .editorconfig file.",
                  "markdown": "Checks that current file encoding matches the encoding defined in \"charset\" property of .editorconfig file."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigEncoding",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigRootDeclarationCorrectness",
                "shortDescription": {
                  "text": "Unexpected top-level declaration"
                },
                "fullDescription": {
                  "text": "Reports unexpected top-level declarations. Top-level declarations other than “root=true” are not allowed in the EditorConfig file.",
                  "markdown": "Reports unexpected top-level declarations. Top-level declarations other than \"root=true\" are not allowed in the EditorConfig file."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigRootDeclarationCorrectness",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigReferenceCorrectness",
                "shortDescription": {
                  "text": "Invalid reference"
                },
                "fullDescription": {
                  "text": "Reports identifiers that are either unknown or have a wrong type.",
                  "markdown": "Reports identifiers that are either unknown or have a wrong type."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigReferenceCorrectness",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigPairAcceptability",
                "shortDescription": {
                  "text": "Unexpected key-value pair"
                },
                "fullDescription": {
                  "text": "Reports key-value pairs that are not allowed in the current context.",
                  "markdown": "Reports key-value pairs that are not allowed in the current context."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigPairAcceptability",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigPatternRedundancy",
                "shortDescription": {
                  "text": "Duplicate or redundant pattern"
                },
                "fullDescription": {
                  "text": "Reports file patterns that are redundant as there already are other patterns that define the same scope of files or even a broader one. For example, in '[{*.java,*}]' the first '*.java' pattern defines a narrower scope compared to '*'. That is why it is redundant and can be removed.",
                  "markdown": "Reports file patterns that are redundant as there already are other patterns that define the same scope of files or even a broader one. For example, in `[{*.java,*}]` the first `*.java` pattern defines a narrower scope compared to `*`. That is why it is redundant and can be removed."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigPatternRedundancy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigNoMatchingFiles",
                "shortDescription": {
                  "text": "No matching files"
                },
                "fullDescription": {
                  "text": "Reports sections with wildcard patterns that do not match any files under the directory in which the '.editorconfig' file is located.",
                  "markdown": "Reports sections with wildcard patterns that do not match any files under the directory in which the `.editorconfig` file is located."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigNoMatchingFiles",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigDeprecatedDescriptor",
                "shortDescription": {
                  "text": "Deprecated property"
                },
                "fullDescription": {
                  "text": "Reports EditorConfig properties that are no longer supported.",
                  "markdown": "Reports EditorConfig properties that are no longer supported."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigDeprecatedDescriptor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigWildcardRedundancy",
                "shortDescription": {
                  "text": "Redundant wildcard"
                },
                "fullDescription": {
                  "text": "Reports wildcards that become redundant when the “**” wildcard is used in the same section. The “**” wildcard defines a broader set of files than any other wildcard. That is why, any other wildcard used in the same section has no affect and can be removed.",
                  "markdown": "Reports wildcards that become redundant when the \"\\*\\*\" wildcard is used in the same section.\n\n\nThe \"\\*\\*\" wildcard defines a broader set of files than any other wildcard.\nThat is why, any other wildcard used in the same section has no affect and can be removed."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigWildcardRedundancy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigHeaderUniqueness",
                "shortDescription": {
                  "text": "EditorConfig section is not unique"
                },
                "fullDescription": {
                  "text": "Reports sections that define the same file pattern as other sections.",
                  "markdown": "Reports sections that define the same file pattern as other sections."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigHeaderUniqueness",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigShadowedOption",
                "shortDescription": {
                  "text": "Overridden property"
                },
                "fullDescription": {
                  "text": "Reports properties that are already defined in other sections. For example: '[*.java]\nindent_size=4\n[{*.java,*.js}]\nindent_size=2' The second section includes all '*.java' files too but it also redefines indent_size. As a result the value 2 will be used for files matching '*.java'.",
                  "markdown": "Reports properties that are already defined in other sections.\n\nFor example:\n\n\n    [*.java]\n    indent_size=4\n    [{*.java,*.js}]\n    indent_size=2\n\nThe second section includes all `*.java` files too but it also redefines indent_size. As a result the value 2 will be used for files matching `*.java`."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigShadowedOption",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigEmptyHeader",
                "shortDescription": {
                  "text": "Empty header"
                },
                "fullDescription": {
                  "text": "Reports sections with an empty header. Section header must contain file path globs in the format similar to one supported by 'gitignore'.",
                  "markdown": "Reports sections with an empty header. Section header must contain file path globs in the format similar to one supported by `gitignore`."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigEmptyHeader",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigValueCorrectness",
                "shortDescription": {
                  "text": "Invalid property value"
                },
                "fullDescription": {
                  "text": "Reports property values that do not meet value restrictions. For example, some properties may be only “true” or “false”, others contain only integer numbers etc. If a value has a limited set of variants, use code completion to see all of them.",
                  "markdown": "Reports property values that do not meet value restrictions. For example, some properties may be only \"true\" or \"false\", others contain only integer numbers etc. If a value has a limited set of variants, use code completion to see all of them."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigValueCorrectness",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigVerifyByCore",
                "shortDescription": {
                  "text": "Invalid .editorconfig file"
                },
                "fullDescription": {
                  "text": "Verifies the whole file using the backing EditorConfig core library and reports any failures. Any such failure would prevent EditorConfig properties from being correctly applied.",
                  "markdown": "Verifies the whole file using the backing EditorConfig core library and reports any failures. Any such failure would prevent EditorConfig properties from being correctly applied."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigVerifyByCore",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigValueUniqueness",
                "shortDescription": {
                  "text": "Non-unique list value"
                },
                "fullDescription": {
                  "text": "Reports duplicates in lists of values.",
                  "markdown": "Reports duplicates in lists of values."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigValueUniqueness",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigMissingRequiredDeclaration",
                "shortDescription": {
                  "text": "Required declarations are missing"
                },
                "fullDescription": {
                  "text": "Reports properties that miss the required declarations. Refer to the documentation for more information.",
                  "markdown": "Reports properties that miss the required declarations. Refer to the documentation for more information."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigMissingRequiredDeclaration",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigCharClassLetterRedundancy",
                "shortDescription": {
                  "text": "Duplicate character class letter"
                },
                "fullDescription": {
                  "text": "Reports wildcard patterns in the EditorConfig section that contain a duplicate character in the character class, for example '[aa]'.",
                  "markdown": "Reports wildcard patterns in the EditorConfig section that contain a duplicate character in the character class, for example `[aa]`."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigCharClassLetterRedundancy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigSpaceInHeader",
                "shortDescription": {
                  "text": "Space in file pattern"
                },
                "fullDescription": {
                  "text": "Reports space characters in wildcard patterns that affect pattern matching. If these characters are not intentional, they should be removed.",
                  "markdown": "Reports space characters in wildcard patterns that affect pattern matching. If these characters are not intentional, they should be removed."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "EditorConfigSpaceInHeader",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigOptionRedundancy",
                "shortDescription": {
                  "text": "Redundant property"
                },
                "fullDescription": {
                  "text": "Reports properties that are redundant when another applicable section already contains the same property and value. For example: '[*]\nindent_size=4\n[*.java]\nindent_size=4' are both applicable to '*.java' files and define the same 'indent_size' value.",
                  "markdown": "Reports properties that are redundant when another applicable section already contains the same property and value.\n\n\nFor example:\n\n\n    [*]\n    indent_size=4\n    [*.java]\n    indent_size=4\n\nare both applicable to `*.java` files and define the same `indent_size` value."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigOptionRedundancy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigUnusedDeclaration",
                "shortDescription": {
                  "text": "Unused declaration"
                },
                "fullDescription": {
                  "text": "Reports unused declarations. Such declarations can be removed.",
                  "markdown": "Reports unused declarations. Such declarations can be removed."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigUnusedDeclaration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigUnexpectedComma",
                "shortDescription": {
                  "text": "Unexpected comma"
                },
                "fullDescription": {
                  "text": "Reports commas that cannot be used in the current context. Commas are allowed only as separators for values in lists.",
                  "markdown": "Reports commas that cannot be used in the current context. Commas are allowed only as separators for values in lists."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigUnexpectedComma",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 0,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "JavaScript",
            "version": "233.14246",
            "rules": [
              {
                "id": "ConstantConditionalExpressionJS",
                "shortDescription": {
                  "text": "Constant conditional expression"
                },
                "fullDescription": {
                  "text": "Reports a conditional expression in the format 'true? result1: result2' or 'false? result1: result2. Suggests simplifying the expression.'",
                  "markdown": "Reports a conditional expression in the format `true? result1: result2` or `false? result1: result2``.\nSuggests simplifying the expression.\n`"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantConditionalExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSTestFailedLine",
                "shortDescription": {
                  "text": "Highlight failure line in test code"
                },
                "fullDescription": {
                  "text": "Reports a failed method call or an assertion in a test.",
                  "markdown": "Reports a failed method call or an assertion in a test."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSTestFailedLine",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Unit testing",
                      "index": 7,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSValidateJSDoc",
                "shortDescription": {
                  "text": "Syntax errors and unresolved references in JSDoc"
                },
                "fullDescription": {
                  "text": "Reports a syntax discrepancy in a documentation comment.",
                  "markdown": "Reports a syntax discrepancy in a documentation comment."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSValidateJSDoc",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonBlockStatementBodyJS",
                "shortDescription": {
                  "text": "Statement body without braces"
                },
                "fullDescription": {
                  "text": "Reports a 'if', 'while', 'for', or 'with' statements whose body is not a block statement. Using code block in statement bodies is usually safer for downstream maintenance.",
                  "markdown": "Reports a `if`, `while`, `for`, or `with` statements whose body is not a block statement. Using code block in statement bodies is usually safer for downstream maintenance."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonBlockStatementBodyJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Code style issues",
                      "index": 10,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IfStatementWithTooManyBranchesJS",
                "shortDescription": {
                  "text": "'if' statement with too many branches"
                },
                "fullDescription": {
                  "text": "Reports an 'if' statement with too many branches. Such statements may be confusing, and often indicate inadequate levels of design abstraction. Use the field below to specify the maximum number of branches expected.",
                  "markdown": "Reports an `if` statement with too many branches. Such statements may be confusing, and often indicate inadequate levels of design abstraction.\n\n\nUse the field below to specify the maximum number of branches expected."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IfStatementWithTooManyBranchesJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BreakStatementJS",
                "shortDescription": {
                  "text": "'break' statement"
                },
                "fullDescription": {
                  "text": "Reports a 'break' statements. Ignores 'break' statements that end case blocks.",
                  "markdown": "Reports a `break` statements. Ignores `break` statements that end case blocks."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BreakStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially undesirable code constructs",
                      "index": 11,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FlowJSConfig",
                "shortDescription": {
                  "text": "Missing .flowconfig"
                },
                "fullDescription": {
                  "text": "Reports a JavaScript file with a '@flow' flag that doesn't have an associated '.flowconfig' file in the project.",
                  "markdown": "Reports a JavaScript file with a `@flow` flag that doesn't have an associated `.flowconfig` file in the project."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FlowJSConfig",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Flow type checker",
                      "index": 12,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSPotentiallyInvalidUsageOfClassThis",
                "shortDescription": {
                  "text": "Potentially invalid reference to 'this' of a class from closure"
                },
                "fullDescription": {
                  "text": "Reports an attempt to reference a member of an ECMAScript class via the 'this.' qualifier in a nested function that is not a lambda. 'this' in a nested function that is not a lambda is the function's own 'this' and doesn't relate to the outer class.",
                  "markdown": "Reports an attempt to reference a member of an ECMAScript class via the `this.` qualifier in a nested function that is not a lambda.  \n`this` in a nested function that is not a lambda is the function's own `this` and doesn't relate to the outer class."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSPotentiallyInvalidUsageOfClassThis",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DebuggerStatementJS",
                "shortDescription": {
                  "text": "'debugger' statement"
                },
                "fullDescription": {
                  "text": "Reports a 'debugger' statement used for interaction with the Javascript debuggers. Such statements should not appear in production code.",
                  "markdown": "Reports a `debugger` statement used for interaction with the Javascript debuggers. Such statements should not appear in production code."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DebuggerStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially undesirable code constructs",
                      "index": 11,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnusedAssignment",
                "shortDescription": {
                  "text": "Unused assignment"
                },
                "fullDescription": {
                  "text": "Reports a variable whose value is never used after assignment. Suggests removing the unused variable to shorten the code and to avoid redundant allocations. The following cases are reported: A variable is never read after assignment. The value of a variable is always overwritten with another assignment before the variable is read next time. The initializer of a variable is redundant (for one of the above-mentioned reasons).",
                  "markdown": "Reports a variable whose value is never used after assignment.  \nSuggests removing the unused variable to shorten the code and to avoid redundant allocations.\n\nThe following cases are reported:\n\n* A variable is never read after assignment.\n* The value of a variable is always overwritten with another assignment before the variable is read next time.\n* The initializer of a variable is redundant (for one of the above-mentioned reasons)."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnusedAssignment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Unused symbols",
                      "index": 16,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FlowJSError",
                "shortDescription": {
                  "text": "Flow type checker"
                },
                "fullDescription": {
                  "text": "Reports errors from Flow.",
                  "markdown": "Reports errors from [Flow](https://flowtype.org/)."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "FlowJSError",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Flow type checker",
                      "index": 12,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReuseOfLocalVariableJS",
                "shortDescription": {
                  "text": "Reuse of local variable"
                },
                "fullDescription": {
                  "text": "Reports reusing a local variable and overwriting its value with a new value that is not related to the original variable usage. Reusing a local variable in this way may be confusing because the intended semantics of the local variable may vary with each usage. It may also cause bugs, if code changes result in values that were expected to be overwritten while they are actually live. It is good practices to keep variable lifetimes as short as possible, and not reuse local variables for the sake of brevity.",
                  "markdown": "Reports reusing a local variable and overwriting its value with a new value that is not related to the original variable usage. Reusing a local variable in this way may be confusing because the intended semantics of the local variable may vary with each usage. It may also cause bugs, if code changes result in values that were expected to be overwritten while they are actually live. It is good practices to keep variable lifetimes as short as possible, and not reuse local variables for the sake of brevity."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReuseOfLocalVariableJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Data flow",
                      "index": 17,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ShiftOutOfRangeJS",
                "shortDescription": {
                  "text": "Shift operation by possibly wrong constant"
                },
                "fullDescription": {
                  "text": "Reports a shift operation where the second operand is a constant outside the reasonable range, for example, an integer shift operation outside the range '0..31', shifting by negative or overly large values.",
                  "markdown": "Reports a shift operation where the second operand is a constant outside the reasonable range, for example, an integer shift operation outside the range `0..31`, shifting by negative or overly large values."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ShiftOutOfRangeJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Bitwise operation issues",
                      "index": 18,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSClosureCompilerSyntax",
                "shortDescription": {
                  "text": "Incorrect usage of JSDoc tags"
                },
                "fullDescription": {
                  "text": "Reports warnings implied by Google Closure Compiler annotations including correct use of '@abstract', '@interface', and '@implements' tags.",
                  "markdown": "Reports warnings implied by *Google Closure Compiler* annotations including correct use of `@abstract`, `@interface`, and `@implements` tags."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSClosureCompilerSyntax",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryContinueJS",
                "shortDescription": {
                  "text": "Unnecessary 'continue' statement"
                },
                "fullDescription": {
                  "text": "Reports an unnecessary 'continue' statement at the end of a loop. Suggests removing such statements.",
                  "markdown": "Reports an unnecessary `continue` statement at the end of a loop. Suggests removing such statements."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryContinueJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ConvertLetToConst",
                "shortDescription": {
                  "text": "'let' is used instead of 'const'"
                },
                "fullDescription": {
                  "text": "Reports a 'let' declaration that can be made 'const'.",
                  "markdown": "Reports a `let` declaration that can be made `const`.  "
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6ConvertLetToConst",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/ES2015 migration aids",
                      "index": 19,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSXDomNesting",
                "shortDescription": {
                  "text": "Invalid DOM element nesting"
                },
                "fullDescription": {
                  "text": "Detects HTML elements in JSX files which are not nested properly according to the DOM specification. React reports runtime warnings on incorrectly nested elements.",
                  "markdown": "Detects HTML elements in JSX files which are not nested properly according to the DOM specification. React reports runtime warnings on incorrectly nested elements."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSXDomNesting",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/React",
                      "index": 22,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptValidateTypes",
                "shortDescription": {
                  "text": "Type mismatch"
                },
                "fullDescription": {
                  "text": "Reports a parameter, return value, or assigned expression of incorrect type.",
                  "markdown": "Reports a parameter, return value, or assigned expression of incorrect type."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "TypeScriptValidateTypes",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BadExpressionStatementJS",
                "shortDescription": {
                  "text": "Expression statement which is not assignment or call"
                },
                "fullDescription": {
                  "text": "Reports an expression statement that is neither an assignment nor a call. Such statements usually indicate an error.",
                  "markdown": "Reports an expression statement that is neither an assignment nor a call. Such statements usually indicate an error."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "BadExpressionStatementJS",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Validity issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConfusingFloatingPointLiteralJS",
                "shortDescription": {
                  "text": "Confusing floating point literal"
                },
                "fullDescription": {
                  "text": "Reports any floating point number that does not have a decimal point, or any numbers before the decimal point, or and numbers after the decimal point. Such literals may be confusing, and violate several coding standards.",
                  "markdown": "Reports any floating point number that does not have a decimal point, or any numbers before the decimal point, or and numbers after the decimal point. Such literals may be confusing, and violate several coding standards."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConfusingFloatingPointLiteralJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially confusing code constructs",
                      "index": 25,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BreakStatementWithLabelJS",
                "shortDescription": {
                  "text": "'break' statement with label"
                },
                "fullDescription": {
                  "text": "Reports a labeled 'break' statement.",
                  "markdown": "Reports a labeled `break` statement."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BreakStatementWithLabelJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially undesirable code constructs",
                      "index": 11,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ContinueOrBreakFromFinallyBlockJS",
                "shortDescription": {
                  "text": "'continue' or 'break' inside 'finally' block"
                },
                "fullDescription": {
                  "text": "Reports a 'break' or 'continue' statement inside a 'finally' block. Such statements are very confusing, may hide exceptions, and complicate debugging.",
                  "markdown": "Reports a `break` or `continue` statement inside a `finally` block. Such statements are very confusing, may hide exceptions, and complicate debugging."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ContinueOrBreakFromFinallyBlockJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Try statement issues",
                      "index": 29,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StatementsPerFunctionJS",
                "shortDescription": {
                  "text": "Overly long function"
                },
                "fullDescription": {
                  "text": "Reports an overly long function. Function length is calculated by counting up the number of non-empty statements in the function. Functions that are too long are error-prone and difficult to test. Use the field below to specify the maximum acceptable number of statements in a function.",
                  "markdown": "Reports an overly long function. Function length is calculated by counting up the number of non-empty statements in the function. Functions that are too long are error-prone and difficult to test.\n\n\nUse the field below to specify the maximum acceptable number of statements in a function."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FunctionTooLongJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Function metrics",
                      "index": 30,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryLocalVariableJS",
                "shortDescription": {
                  "text": "Redundant local variable"
                },
                "fullDescription": {
                  "text": "Reports an unnecessary local variable that does not make a function more comprehensible: a local variable that is immediately returned a local variable that is immediately assigned to another variable and is not used anymore a local variable that always has the same value as another local variable or parameter. Use the checkbox below to have this inspection ignore variables that are immediately returned or thrown. Some coding styles suggest using such variables for clarity and ease of debugging.",
                  "markdown": "Reports an unnecessary local variable that does not make a function more comprehensible:\n\n* a local variable that is immediately returned\n* a local variable that is immediately assigned to another variable and is not used anymore\n* a local variable that always has the same value as another local variable or parameter.\n\n\nUse the checkbox below to have this inspection ignore variables that are immediately\nreturned or thrown. Some coding styles suggest using such variables for clarity and\nease of debugging."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryLocalVariableJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Data flow",
                      "index": 17,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSMethodCanBeStatic",
                "shortDescription": {
                  "text": "Method can be made 'static'"
                },
                "fullDescription": {
                  "text": "Reports a class method that can be safely made 'static'. A method can be 'static' if it does not reference any of its class' non-static methods and non-static fields and is not overridden in a subclass. Use the first checkbox below to inspect only 'private' methods.",
                  "markdown": "Reports a class method that can be safely made `static`. A method can be `static` if it does not reference any of its class' non-static methods and non-static fields and is not overridden in a subclass.\n\n\nUse the first checkbox below to inspect only `private` methods."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSMethodCanBeStatic",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSDeclarationsAtScopeStart",
                "shortDescription": {
                  "text": "'var' declared not at the beginning of a function"
                },
                "fullDescription": {
                  "text": "Checks that declarations of local variables declared with var are at the top of a function scope. By default, variable declarations are always moved (\"hoisted\") invisibly to the top of their containing scope when the code is executed. Therefore, declaring them at the top of the scope helps represent this behavior in the code.",
                  "markdown": "Checks that declarations of local variables declared with **var** are at the top of a function scope.   \n\nBy default, variable declarations are always moved (\"hoisted\") invisibly to the top of their containing scope when the code is executed. Therefore, declaring them at the top of the scope helps represent this behavior in the code."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSDeclarationsAtScopeStart",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Code style issues",
                      "index": 10,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ContinueStatementWithLabelJS",
                "shortDescription": {
                  "text": "'continue' statement with label"
                },
                "fullDescription": {
                  "text": "Reports a labeled 'continue' statement.",
                  "markdown": "Reports a labeled `continue` statement."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ContinueStatementWithLabelJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially undesirable code constructs",
                      "index": 11,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptMissingConfigOption",
                "shortDescription": {
                  "text": "Missing tsconfig.json option "
                },
                "fullDescription": {
                  "text": "Reports a usage that requires an explicit option in 'tsconfig.json'. For example, to use JSX in '.tsx' files, 'tsconfig.json' must contain '\"jsx\"' property.",
                  "markdown": "Reports a usage that requires an explicit option in `tsconfig.json`. For example, to use JSX in `.tsx` files, `tsconfig.json` must contain `\"jsx\"` property."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TypeScriptMissingConfigOption",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSObjectNullOrUndefined",
                "shortDescription": {
                  "text": "Object is 'null' or 'undefined'"
                },
                "fullDescription": {
                  "text": "Reports an error caused by invoking a method, accessing a property, or calling a function on an object that is 'undefined' or 'null'.",
                  "markdown": "Reports an error caused by invoking a method, accessing a property, or calling a function on an object that is `undefined` or `null`."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSObjectNullOrUndefined",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSXUnresolvedComponent",
                "shortDescription": {
                  "text": "Unresolved JSX component"
                },
                "fullDescription": {
                  "text": "Reports an unresolved reference to a JSX component. Suggests adding a missing import statement if the referenced component is defined in the project or its dependencies or creating a new component with this name. The template for a new component can be modified in Editor | File and Code Templates.",
                  "markdown": "Reports an unresolved reference to a JSX component. Suggests adding a missing import statement if the referenced component is defined in the project or its dependencies or creating a new component with this name.\n\nThe template for a new component can be modified in Editor \\| File and Code Templates."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSXUnresolvedComponent",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ShorthandObjectProperty",
                "shortDescription": {
                  "text": "Property can be replaced with shorthand"
                },
                "fullDescription": {
                  "text": "Reports an object property that can be converted to ES6 shorthand style and provides a quick-fix to do it. Example: 'var obj = {foo:foo}' After applying the quick-fix the code looks as follows: 'var obj = {foo}'",
                  "markdown": "Reports an object property that can be converted to ES6 shorthand style and provides a quick-fix to do it.\n\nExample:\n\n\n    var obj = {foo:foo}\n\nAfter applying the quick-fix the code looks as follows:\n\n\n    var obj = {foo}\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6ShorthandObjectProperty",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryLabelOnBreakStatementJS",
                "shortDescription": {
                  "text": "Unnecessary label on 'break' statement"
                },
                "fullDescription": {
                  "text": "Reports a labeled 'break' statement whose labels may be removed without changing the flow of control.",
                  "markdown": "Reports a labeled `break` statement whose labels may be removed without changing the flow of control."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryLabelOnBreakStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ContinueStatementJS",
                "shortDescription": {
                  "text": "'continue' statement"
                },
                "fullDescription": {
                  "text": "Reports a 'continue' statement.",
                  "markdown": "Reports a `continue` statement."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ContinueStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially undesirable code constructs",
                      "index": 11,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssignmentToForLoopParameterJS",
                "shortDescription": {
                  "text": "Assignment to 'for' loop parameter"
                },
                "fullDescription": {
                  "text": "Reports an assignment to a variable declared as a 'for' loop parameter. Although occasionally intended, this construct can be extremely confusing, and is often a result of an error.",
                  "markdown": "Reports an assignment to a variable declared as a `for` loop parameter. Although occasionally intended, this construct can be extremely confusing, and is often a result of an error."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentToForLoopParameterJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Assignment issues",
                      "index": 35,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSPotentiallyInvalidConstructorUsage",
                "shortDescription": {
                  "text": "Potentially invalid constructor usage"
                },
                "fullDescription": {
                  "text": "Reports a usage of a potentially invalid constructor function, for example: a function that is not a constructor after 'new', using a constructor's prototype or calling a constructor without 'new'. A constructor function is assumed to have an upper case name (optional) or have an explicit JSDoc '@constructor' tag.",
                  "markdown": "Reports a usage of a potentially invalid constructor function, for example: a function that is not a constructor after `new`, using a constructor's prototype or calling a constructor without `new`. A constructor function is assumed to have an upper case name (optional) or have an explicit JSDoc `@constructor` tag."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSPotentiallyInvalidConstructorUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PointlessArithmeticExpressionJS",
                "shortDescription": {
                  "text": "Pointless arithmetic expression"
                },
                "fullDescription": {
                  "text": "Reports an arithmetic expression that include adding or subtracting zero, multiplying by zero or one, division by one, and shift by zero. Such expressions may result from not fully completed automated refactoring.",
                  "markdown": "Reports an arithmetic expression that include adding or subtracting zero, multiplying by zero or one, division by one, and shift by zero. Such expressions may result from not fully completed automated refactoring."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PointlessArithmeticExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially confusing code constructs",
                      "index": 25,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NodeCoreCodingAssistance",
                "shortDescription": {
                  "text": "Unresolved Node.js APIs"
                },
                "fullDescription": {
                  "text": "Suggests configuring coding assistance for Node.js, for example, 'require' and/or core modules ('path', 'http', 'fs', etc.). See https://nodejs.org/api/ for the complete list.",
                  "markdown": "Suggests configuring coding assistance for Node.js, for example, `require` and/or core modules ('path', 'http', 'fs', etc.).\n\n\nSee <https://nodejs.org/api/> for the complete list."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NodeCoreCodingAssistance",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Node.js",
                      "index": 40,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUndeclaredVariable",
                "shortDescription": {
                  "text": "Implicitly declared global JavaScript variable"
                },
                "fullDescription": {
                  "text": "Reports an implicit declaration of a global variable. Example: 'var aaa = 1; // good\n  bbb = 2; // bad, if bbb is not declared with 'var' somewhere'",
                  "markdown": "Reports an implicit declaration of a global variable.\n\nExample:\n\n\n      var aaa = 1; // good\n      bbb = 2; // bad, if bbb is not declared with 'var' somewhere\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSUndeclaredVariable",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DivideByZeroJS",
                "shortDescription": {
                  "text": "Division by zero"
                },
                "fullDescription": {
                  "text": "Reports division by zero or a remainder by zero.",
                  "markdown": "Reports division by zero or a remainder by zero."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DivideByZeroJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSPrimitiveTypeWrapperUsage",
                "shortDescription": {
                  "text": "Primitive type object wrapper used"
                },
                "fullDescription": {
                  "text": "Reports an improper usage of a wrapper for primitive types or a property of a primitive type being modified, as in the latter case the assigned value will be lost.",
                  "markdown": "Reports an improper usage of a wrapper for primitive types or a property of a primitive type being modified, as in the latter case the assigned value will be lost."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSPrimitiveTypeWrapperUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptSmartCast",
                "shortDescription": {
                  "text": "Narrowed type"
                },
                "fullDescription": {
                  "text": "Reports a usage of a variable where the variable type is narrowed by a type guard. Note that severity level doesn't affect this inspection.",
                  "markdown": "Reports a usage of a variable where the variable type is narrowed by a type guard. Note that severity level doesn't affect this inspection."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TypeScriptSmartCast",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ConvertIndexedForToForOf",
                "shortDescription": {
                  "text": "Indexed 'for' is used instead of 'for..of'"
                },
                "fullDescription": {
                  "text": "Reports an indexed 'for' loop used on an array. Suggests replacing it with a 'for..of' loop. 'for..of' loops are introduced in ECMAScript 6 and iterate over 'iterable' objects.",
                  "markdown": "Reports an indexed [for](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for) loop used on an array. Suggests replacing it with a [for..of](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of) loop.   \n`for..of` loops are introduced in ECMAScript 6 and iterate over `iterable` objects."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6ConvertIndexedForToForOf",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/ES2015 migration aids",
                      "index": 19,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSLastCommaInArrayLiteral",
                "shortDescription": {
                  "text": "Unneeded last comma in array literal"
                },
                "fullDescription": {
                  "text": "Reports a usage of a trailing comma in an array literal. The warning is reported only when the JavaScript language version is set to ECMAScript 5.1. Although trailing commas in arrays are allowed by the specification, some browsers may throw an error when a trailing comma is used. You can configure formatting options for trailing commas in Code Style | JavaScript or TypeScript | Punctuation.",
                  "markdown": "Reports a usage of a trailing comma in an array literal.\n\nThe warning is reported only when the JavaScript language version is set to ECMAScript 5.1.\n\nAlthough trailing commas in arrays are allowed by the specification, some browsers may throw an error when a trailing comma is used.\n\nYou can configure formatting options for trailing commas in **Code Style** \\| **JavaScript** or **TypeScript** \\| **Punctuation**."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSLastCommaInArrayLiteral",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConditionalExpressionJS",
                "shortDescription": {
                  "text": "Conditional expression"
                },
                "fullDescription": {
                  "text": "Reports a ternary conditional expression. Some coding standards prohibit such expressions in favor of explicit 'if' statements.",
                  "markdown": "Reports a ternary conditional expression. Some coding standards prohibit such expressions in favor of explicit `if` statements."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConditionalExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially undesirable code constructs",
                      "index": 11,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ConvertVarToLetConst",
                "shortDescription": {
                  "text": "'var' is used instead of 'let' or 'const'"
                },
                "fullDescription": {
                  "text": "Reports a 'var' declaration that is used instead of 'let' or 'const'. Both 'let' and 'const' are block-scoped and behave more strictly. Suggests replacing all 'var' declarations with 'let' or 'const' declarations, depending on the semantics of a particular value. The declarations may be moved to the top of the function or placed before the first usage of the variable to avoid Reference errors. Select the 'Conservatively convert var with Fix all action' option to prevent any changes in these complex cases when using the 'Fix all' action.",
                  "markdown": "Reports a `var` declaration that is used instead of `let` or `const`.  \nBoth `let` and `const` are block-scoped and behave more strictly.   \n\nSuggests replacing all `var` declarations with `let` or `const` declarations, depending on the semantics of a particular value. The declarations may be moved to the top of the function or placed before the first usage of the variable to avoid Reference errors.   \nSelect the 'Conservatively convert var with Fix all action' option to prevent any changes in these complex cases when using the 'Fix all' action."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6ConvertVarToLetConst",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/ES2015 migration aids",
                      "index": 19,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PointlessBooleanExpressionJS",
                "shortDescription": {
                  "text": "Pointless statement or boolean expression"
                },
                "fullDescription": {
                  "text": "Reports a pointless or pointlessly complicated boolean expression or statement. Example: 'let a = !(false && x);\n  let b = false || x;' After the quick fix is applied the result looks like: 'let a = true;\n  let b = x;'",
                  "markdown": "Reports a pointless or pointlessly complicated boolean expression or statement.\n\nExample:\n\n\n      let a = !(false && x);\n      let b = false || x;\n\nAfter the quick fix is applied the result looks like:\n\n\n      let a = true;\n      let b = x;\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PointlessBooleanExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSReferencingMutableVariableFromClosure",
                "shortDescription": {
                  "text": "Referencing mutable variable from closure"
                },
                "fullDescription": {
                  "text": "Reports access to outer mutable variables from functions. Example: 'for (var i = 1; i <= 3; i++) {\n    setTimeout(function() {\n        console.log(i); // bad\n    }, 0);\n  }'",
                  "markdown": "Reports access to outer mutable variables from functions.\n\nExample:\n\n\n      for (var i = 1; i <= 3; i++) {\n        setTimeout(function() {\n            console.log(i); // bad\n        }, 0);\n      }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSReferencingMutableVariableFromClosure",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DynamicallyGeneratedCodeJS",
                "shortDescription": {
                  "text": "Execution of dynamically generated code"
                },
                "fullDescription": {
                  "text": "Reports a call of the 'eval()', 'setTimeout()', or 'setInterval()' function or an allocation of a 'Function' object. These functions are used to execute arbitrary strings of JavaScript text, which often dynamically generated. This can be very confusing, and may be a security risk. Ignores the cases when a callback function is provided to these methods statically, without code generation.",
                  "markdown": "Reports a call of the `eval()`, `setTimeout()`, or `setInterval()` function or an allocation of a `Function` object. These functions are used to execute arbitrary strings of JavaScript text, which often dynamically generated. This can be very confusing, and may be a security risk.   \n\nIgnores the cases when a callback function is provided to these methods statically, without code generation."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DynamicallyGeneratedCodeJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially confusing code constructs",
                      "index": 25,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NegatedConditionalExpressionJS",
                "shortDescription": {
                  "text": "Negated conditional expression"
                },
                "fullDescription": {
                  "text": "Reports a conditional expression whose condition is negated. Suggests flipping the order of branches in the conditional expression to increase the clarity of the statement. Example: '!condition ? 2 : 1'",
                  "markdown": "Reports a conditional expression whose condition is negated. Suggests flipping the order of branches in the conditional expression to increase the clarity of the statement. Example: `!condition ? 2 : 1`"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NegatedConditionalExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially confusing code constructs",
                      "index": 25,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUrlImportUsage",
                "shortDescription": {
                  "text": "URL import is used"
                },
                "fullDescription": {
                  "text": "Checks used URL imports in the JavaScript language. Suggests downloading the module for the specified remote URL. Such association enables the IDE to provide proper code completion and navigation. URLs in import specifiers are supported only for ECMAScript modules in the JavaScript language.",
                  "markdown": "Checks used URL imports in the JavaScript language. Suggests downloading the module for the specified remote URL. Such association enables the IDE to provide proper code completion and navigation.   \n\nURLs in import specifiers are supported only for ECMAScript modules in the JavaScript language."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSUrlImportUsage",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Imports and dependencies",
                      "index": 41,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryLabelOnContinueStatementJS",
                "shortDescription": {
                  "text": "Unnecessary label on 'continue' statement"
                },
                "fullDescription": {
                  "text": "Reports a labeled 'continue' statement whose labels may be removed without changing the flow of control.",
                  "markdown": "Reports a labeled `continue` statement whose labels may be removed without changing the flow of control."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryLabelOnContinueStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ChainedEqualityJS",
                "shortDescription": {
                  "text": "Chained equality"
                },
                "fullDescription": {
                  "text": "Reports a chained equality comparison (i.e. 'a==b==c'). Such comparisons are confusing.",
                  "markdown": "Reports a chained equality comparison (i.e. `a==b==c`). Such comparisons are confusing."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ChainedEqualityComparisonsJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Code style issues",
                      "index": 10,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SillyAssignmentJS",
                "shortDescription": {
                  "text": "Variable is assigned to itself"
                },
                "fullDescription": {
                  "text": "Reports an assignment in the form 'x = x'.",
                  "markdown": "Reports an assignment in the form `x = x`."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SillyAssignmentJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Assignment issues",
                      "index": 35,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSPotentiallyInvalidTargetOfIndexedPropertyAccess",
                "shortDescription": {
                  "text": "Possibly incorrect target of indexed property access"
                },
                "fullDescription": {
                  "text": "Reports a potentially invalid indexed property access, for example, 'Array[1]'.",
                  "markdown": "Reports a potentially invalid indexed property access, for example, `Array[1]`."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSPotentiallyInvalidTargetOfIndexedPropertyAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSAccessibilityCheck",
                "shortDescription": {
                  "text": "Inaccessible @private and @protected members referenced"
                },
                "fullDescription": {
                  "text": "Reports a reference to a JavaScript member that is marked with a '@private' or '@protected' tag but does not comply with visibility rules that these tags imply.",
                  "markdown": "Reports a reference to a JavaScript member that is marked with a `@private` or `@protected` tag but does not comply with visibility rules that these tags imply."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSAccessibilityCheck",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ConvertRequireIntoImport",
                "shortDescription": {
                  "text": "'require()' is used instead of 'import'"
                },
                "fullDescription": {
                  "text": "Reports a 'require()' statement. Suggests converting it to a 'require()' call with an 'import' statement. Enable 'Convert require() inside inner scopes with Fix all action' to convert all 'require()' calls inside the nested functions and statements when using the 'Fix all' action. Please note that converting 'require()' statements inside inner scopes to 'import' statements may cause changes in the semantics of the code. Import statements are static module dependencies and are hoisted, which means that they are moved to the top of the current module. 'require()' calls load modules dynamically. They can be executed conditionally, and their scope is defined by the expression in which they are used. Clear the 'Convert require() inside inner scopes with Fix all action' checkbox to prevent any changes in these complex cases when using the 'Fix all' action.",
                  "markdown": "Reports a `require()` statement. Suggests converting it to a `require()` call with an `import` statement.   \n\nEnable 'Convert require() inside inner scopes with Fix all action' to convert all `require()` calls inside the nested functions and statements when using the 'Fix all' action.   \n\nPlease note that converting `require()` statements inside inner scopes to `import` statements may cause changes in the semantics of the code. Import statements are static module dependencies and are hoisted, which means that they are moved to the top of the current module. `require()` calls load modules dynamically. They can be executed conditionally, and their scope is defined by the expression in which they are used.   \nClear the 'Convert require() inside inner scopes with Fix all action' checkbox to prevent any changes in these complex cases when using the 'Fix all' action."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6ConvertRequireIntoImport",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/ES2015 migration aids",
                      "index": 19,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FunctionWithMultipleLoopsJS",
                "shortDescription": {
                  "text": "Function with multiple loops"
                },
                "fullDescription": {
                  "text": "Reports a function with multiple loop statements.",
                  "markdown": "Reports a function with multiple loop statements."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FunctionWithMultipleLoopsJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Function metrics",
                      "index": 30,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LabeledStatementJS",
                "shortDescription": {
                  "text": "Labeled statement"
                },
                "fullDescription": {
                  "text": "Reports a labeled statement.",
                  "markdown": "Reports a labeled statement."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LabeledStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially undesirable code constructs",
                      "index": 11,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NpmUsedModulesInstalled",
                "shortDescription": {
                  "text": "Missing module dependency"
                },
                "fullDescription": {
                  "text": "Reports a module from a 'require()' call or an 'import' statement that is not installed or is not listed in package.json dependencies. Suggests installing the module and/or including it into package.json. For 'require()' calls, works only in the files from the scope of Node.js Core JavaScript library.",
                  "markdown": "Reports a module from a `require()` call or an `import` statement that is not installed or is not listed in package.json dependencies.\n\nSuggests installing the module and/or including it into package.json.\n\nFor `require()` calls, works only in the files from the scope of *Node.js Core* JavaScript library."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "NpmUsedModulesInstalled",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Imports and dependencies",
                      "index": 41,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedCatchParameterJS",
                "shortDescription": {
                  "text": "Unused 'catch' parameter"
                },
                "fullDescription": {
                  "text": "Reports a 'catch' parameter that is not used in the corresponding block. The 'catch' parameters named 'ignore' or 'ignored' are ignored. Use the checkbox below to disable this inspection for 'catch' blocks with comments.",
                  "markdown": "Reports a `catch` parameter that is not used in the corresponding block. The `catch` parameters named `ignore` or `ignored` are ignored.\n\n\nUse the checkbox below to disable this inspection for `catch`\nblocks with comments."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedCatchParameterJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Try statement issues",
                      "index": 29,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WithStatementJS",
                "shortDescription": {
                  "text": "'with' statement"
                },
                "fullDescription": {
                  "text": "Reports a 'with' statements. Such statements result in potentially confusing implicit bindings, and may behave strangely in setting new variables.",
                  "markdown": "Reports a `with` statements. Such statements result in potentially confusing implicit bindings, and may behave strangely in setting new variables."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WithStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially undesirable code constructs",
                      "index": 11,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSConstantReassignment",
                "shortDescription": {
                  "text": "Attempt to assign to const or readonly variable"
                },
                "fullDescription": {
                  "text": "Reports reassigning a value to a constant or a readonly variable.",
                  "markdown": "Reports reassigning a value to a constant or a readonly variable."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JSConstantReassignment",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Validity issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptCheckImport",
                "shortDescription": {
                  "text": "Unresolved imported name"
                },
                "fullDescription": {
                  "text": "Reports an unresolved name or binding in an 'import' declaration in TypeScript code.",
                  "markdown": "Reports an unresolved name or binding in an `import` declaration in TypeScript code."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "TypeScriptCheckImport",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MagicNumberJS",
                "shortDescription": {
                  "text": "Magic number"
                },
                "fullDescription": {
                  "text": "Reports a \"magic number\" that is a numeric literal used without being named by a constant declaration. Magic numbers can result in code whose intention is unclear, and may result in errors if a magic number is changed in one code location but remains unchanged in another. The numbers 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 100, 1000, 0.0 and 1.0 are ignored.",
                  "markdown": "Reports a \"magic number\" that is a numeric literal used without being named by a constant declaration. Magic numbers can result in code whose intention is unclear, and may result in errors if a magic number is changed in one code location but remains unchanged in another. The numbers 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 100, 1000, 0.0 and 1.0 are ignored."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MagicNumberJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially confusing code constructs",
                      "index": 25,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FunctionNamingConventionJS",
                "shortDescription": {
                  "text": "Function naming convention"
                },
                "fullDescription": {
                  "text": "Reports a function whose name is too short, too long, or does not follow the specified regular expression pattern. Use the fields provided below to specify minimum length, maximum length, and a regular expression for function names. Use the standard 'java.util.regex' format for regular expressions.",
                  "markdown": "Reports a function whose name is too short, too long, or does not follow the specified regular expression pattern.\n\n\nUse the fields provided below to specify minimum length, maximum length, and a regular expression\nfor function names. Use the standard `java.util.regex` format for regular expressions."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FunctionNamingConventionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Naming conventions",
                      "index": 44,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSXSyntaxUsed",
                "shortDescription": {
                  "text": "JSX syntax used"
                },
                "fullDescription": {
                  "text": "Reports a usage of a JSX tag in JavaScript code.",
                  "markdown": "Reports a usage of a JSX tag in JavaScript code."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JSXSyntaxUsed",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSJoinVariableDeclarationAndAssignment",
                "shortDescription": {
                  "text": "Variable declaration can be merged with the first assignment to the variable"
                },
                "fullDescription": {
                  "text": "Reports a variable that is declared without an initializer and is used much further in the code or in a single nested scope. Suggests moving the variable closer to its usages and joining it with the initializer expression.",
                  "markdown": "Reports a variable that is declared without an initializer and is used much further in the code or in a single nested scope. Suggests moving the variable closer to its usages and joining it with the initializer expression."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSJoinVariableDeclarationAndAssignment",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSRedundantSwitchStatement",
                "shortDescription": {
                  "text": "'switch' statement is redundant and can be replaced"
                },
                "fullDescription": {
                  "text": "Reports a 'switch' statement with an empty body, or with only one 'case' branch, or with a 'default' branch only.",
                  "markdown": "Reports a `switch` statement with an empty body, or with only one `case` branch, or with a `default` branch only."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSRedundantSwitchStatement",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Switch statement issues",
                      "index": 45,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptLibrary",
                "shortDescription": {
                  "text": "Missing global library"
                },
                "fullDescription": {
                  "text": "Reports a TypeScript library file that is required for a symbol but is not listed under the 'lib' compiler option in 'tsconfig.json'.",
                  "markdown": "Reports a TypeScript library file that is required for a symbol but is not listed under the `lib` compiler option in `tsconfig.json`."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "TypeScriptLibrary",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptMissingAugmentationImport",
                "shortDescription": {
                  "text": "Missing augmentation import"
                },
                "fullDescription": {
                  "text": "Reports a usage from augmentation module without an explicit import.",
                  "markdown": "Reports a usage from [augmentation module](https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation) without an explicit import."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TypeScriptMissingAugmentationImport",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnusedGlobalSymbols",
                "shortDescription": {
                  "text": "Unused global symbol"
                },
                "fullDescription": {
                  "text": "Reports an unused globally accessible public function, variable, class, or property.",
                  "markdown": "Reports an unused globally accessible public function, variable, class, or property."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnusedGlobalSymbols",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Unused symbols",
                      "index": 16,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ConvertModuleExportToExport",
                "shortDescription": {
                  "text": "'module.exports' is used instead of 'export'"
                },
                "fullDescription": {
                  "text": "Reports a 'module.export' statement. Suggests replacing it with an 'export' or 'export default' statement. Please note that the quick-fix for converting 'module.export' into 'export' is not available for 'module.export' inside functions or statements because 'export' statements can only be at the top level of a module.",
                  "markdown": "Reports a `module.export` statement. Suggests replacing it with an `export` or `export default` statement.   \n\nPlease note that the quick-fix for converting `module.export` into `export` is not available for `module.export` inside functions or statements because `export` statements can only be at the top level of a module."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6ConvertModuleExportToExport",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/ES2015 migration aids",
                      "index": 19,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DocumentWriteJS",
                "shortDescription": {
                  "text": "Call to 'document.write()'"
                },
                "fullDescription": {
                  "text": "Reports a method call to 'document.write()' or 'document.writeln()'. Most usages of such calls are performed better with explicit DOM calls, such as 'getElementByID()' and 'createElement()'. Additionally, the 'write()' and 'writeln()' calls will not work with XML DOMs, including DOMs for XHTML if viewed as XML. This can result in difficulty to point out bugs.",
                  "markdown": "Reports a method call to `document.write()` or `document.writeln()`. Most usages of such calls are performed better with explicit DOM calls, such as `getElementByID()` and `createElement()`. Additionally, the `write()` and `writeln()` calls will not work with XML DOMs, including DOMs for XHTML if viewed as XML. This can result in difficulty to point out bugs."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DocumentWriteJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/DOM issues",
                      "index": 46,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AnonymousFunctionJS",
                "shortDescription": {
                  "text": "Anonymous function"
                },
                "fullDescription": {
                  "text": "Reports an anonymous function. An explicit name of a function expression may be helpful for debugging. Ignores function expressions without names if they have a 'name' property specified in the ECMAScript 6 standard. For example, 'var bar = function() {};' is not reported.",
                  "markdown": "Reports an anonymous function. An explicit name of a function expression may be helpful for debugging. Ignores function expressions without names if they have a `name` property specified in the ECMAScript 6 standard. For example, `var bar = function() {};` is not reported."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AnonymousFunctionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially undesirable code constructs",
                      "index": 11,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BlockStatementJS",
                "shortDescription": {
                  "text": "Unnecessary block statement"
                },
                "fullDescription": {
                  "text": "Reports a block statement that is not used as the body of 'if', 'for', 'while', 'do', 'with', or 'try' statements, or as the body of a function declaration. Starting from ECMAScript 6, JavaScript blocks introduce new scopes for 'let' and 'const' variables, but still free-standing block statements may be confusing and result in subtle bugs when used with 'var' variables.",
                  "markdown": "Reports a block statement that is not used as the body of `if`, `for`, `while`, `do`, `with`, or `try` statements, or as the body of a function declaration. Starting from ECMAScript 6, JavaScript blocks introduce new scopes for `let` and `const` variables, but still free-standing block statements may be confusing and result in subtle bugs when used with `var` variables."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BlockStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially confusing code constructs",
                      "index": 25,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObjectAllocationIgnoredJS",
                "shortDescription": {
                  "text": "Result of object allocation ignored"
                },
                "fullDescription": {
                  "text": "Reports object allocation where the result of the allocated object is ignored, for example, 'new Error();' as a statement, without any assignment. Such allocation expressions may indicate an odd object initialization strategy.",
                  "markdown": "Reports object allocation where the result of the allocated object is ignored, for example, `new Error();` as a statement, without any assignment. Such allocation expressions may indicate an odd object initialization strategy."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ObjectAllocationIgnored",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InfiniteRecursionJS",
                "shortDescription": {
                  "text": "Infinite recursion"
                },
                "fullDescription": {
                  "text": "Reports a function which must either recurse infinitely or throw an exception. Such functions may not return normally.",
                  "markdown": "Reports a function which must either recurse infinitely or throw an exception. Such functions may not return normally."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InfiniteRecursionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSTypeOfValues",
                "shortDescription": {
                  "text": "'typeof' comparison with non-standard value"
                },
                "fullDescription": {
                  "text": "Reports a comparison of a 'typeof' expression with a literal string which is not one of the standard types: 'undefined', 'object', 'boolean', 'number', 'string', 'function', or 'symbol'. Such comparisons always return 'false'.",
                  "markdown": "Reports a comparison of a `typeof` expression with a literal string which is not one of the standard types: `undefined`, `object`, `boolean`, `number`, `string`, `function`, or `symbol`. Such comparisons always return `false`."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSTypeOfValues",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedConditionalExpressionJS",
                "shortDescription": {
                  "text": "Nested conditional expression"
                },
                "fullDescription": {
                  "text": "Reports a ternary conditional expression within another ternary condition. Such nested conditionals may be extremely confusing, and best replaced by more explicit conditional logic.",
                  "markdown": "Reports a ternary conditional expression within another ternary condition. Such nested conditionals may be extremely confusing, and best replaced by more explicit conditional logic."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedConditionalExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially confusing code constructs",
                      "index": 25,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IncompatibleMaskJS",
                "shortDescription": {
                  "text": "Incompatible bitwise mask operation"
                },
                "fullDescription": {
                  "text": "Reports a bitwise mask expression which for sure evaluates to 'true' or 'false'. Expressions are of the form '(var & constant1) == constant2' or '(var | constant1) == constant2', where 'constant1' and 'constant2' are incompatible bitmask constants. Example: '// Incompatible mask: as the last byte in mask is zero,\n// something like 0x1200 would be possible, but not 0x1234\nif ((mask & 0xFF00) == 0x1234) {...}'",
                  "markdown": "Reports a bitwise mask expression which for sure evaluates to `true` or `false`. Expressions are of the form `(var & constant1) == constant2` or `(var | constant1) == constant2`, where `constant1` and `constant2` are incompatible bitmask constants.\n\nExample:\n\n\n    // Incompatible mask: as the last byte in mask is zero,\n    // something like 0x1200 would be possible, but not 0x1234\n    if ((mask & 0xFF00) == 0x1234) {...}\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IncompatibleBitwiseMaskOperation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Bitwise operation issues",
                      "index": 18,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TextLabelInSwitchStatementJS",
                "shortDescription": {
                  "text": "Text label in 'switch' statement"
                },
                "fullDescription": {
                  "text": "Reports a labeled statement inside a 'switch' statement, which often results from a typo. Example: 'switch(x)\n    {\n        case 1:\n        case2:   //typo!\n        case 3:\n            break;\n    }'",
                  "markdown": "Reports a labeled statement inside a `switch` statement, which often results from a typo.\n\nExample:\n\n\n        switch(x)\n        {\n            case 1:\n            case2:   //typo!\n            case 3:\n                break;\n        }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TextLabelInSwitchStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Switch statement issues",
                      "index": 45,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6PossiblyAsyncFunction",
                "shortDescription": {
                  "text": "'await' in non-async function"
                },
                "fullDescription": {
                  "text": "Reports a usage of 'await' in a function that was possibly intended to be async but is actually missing the 'async' modifier. Although 'await' can be used as an identifier, it is likely that it was intended to be used as an operator, so the containing function should be made 'async'.",
                  "markdown": "Reports a usage of `await` in a function that was possibly intended to be async but is actually missing the `async` modifier. Although `await` can be used as an identifier, it is likely that it was intended to be used as an operator, so the containing function should be made `async`."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6PossiblyAsyncFunction",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Async code and promises",
                      "index": 47,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyCatchBlockJS",
                "shortDescription": {
                  "text": "Empty 'catch' block"
                },
                "fullDescription": {
                  "text": "Reports an empty 'catch' block. This indicates that errors are simply ignored instead of handling them. Any comment in a 'catch' block mutes the inspection.",
                  "markdown": "Reports an empty `catch` block. This indicates that errors are simply ignored instead of handling them.   \n\nAny comment in a `catch` block mutes the inspection."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptyCatchBlockJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Try statement issues",
                      "index": 29,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSHint",
                "shortDescription": {
                  "text": "JSHint"
                },
                "fullDescription": {
                  "text": "Reports a problem detected by the JSHint linter.",
                  "markdown": "Reports a problem detected by the [JSHint](https://jshint.com/) linter."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JSHint",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Code quality tools",
                      "index": 48,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FlowJSFlagCommentPlacement",
                "shortDescription": {
                  "text": "Misplaced @flow flag"
                },
                "fullDescription": {
                  "text": "Reports a '@flow' flag comment that is not located at the top of a file.",
                  "markdown": "Reports a `@flow` flag comment that is not located at the top of a file."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FlowJSFlagCommentPlacement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Flow type checker",
                      "index": 12,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Eslint",
                "shortDescription": {
                  "text": "ESLint"
                },
                "fullDescription": {
                  "text": "Reports a discrepancy detected by the ESLint linter. The highlighting is based on the rule severity specified in the ESLint configuration file for each individual rule. Clear the 'Use rule severity from the configuration file' checkbox to use the severity configured in this inspection for all ESLint rules.",
                  "markdown": "Reports a discrepancy detected by the [ESLint](https://eslint.org) linter.   \n\nThe highlighting is based on the rule severity specified in the [ESLint configuration file](https://eslint.org/docs/user-guide/configuring) for each individual rule.   \n\nClear the 'Use rule severity from the configuration file' checkbox to use the severity configured in this inspection for all ESLint rules."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Eslint",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Code quality tools",
                      "index": 48,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSDuplicatedDeclaration",
                "shortDescription": {
                  "text": "Duplicate declaration"
                },
                "fullDescription": {
                  "text": "Reports multiple declarations in a scope.",
                  "markdown": "Reports multiple declarations in a scope."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSDuplicatedDeclaration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSEqualityComparisonWithCoercion.TS",
                "shortDescription": {
                  "text": "Equality operator may cause type coercion"
                },
                "fullDescription": {
                  "text": "Reports a usage of equality operators may cause unexpected type coercions. Suggests replacing '==' or '!=' equality operators with type-safe '===' or '!==' operators. Depending on the option selected, one of the following cases will be reported: All usages of '==' and '!=' operators. All usages except comparison with null. Some code styles allow using 'x == null' as a replacement for 'x === null || x === undefined'. Only suspicious expressions, such as: '==' or '!=' comparisons with '0', '''', 'null', 'true', 'false', or 'undefined'.",
                  "markdown": "Reports a usage of equality operators may cause unexpected type coercions. Suggests replacing `==` or `!=` equality operators with type-safe `===` or `!==` operators.\n\nDepending on the option selected, one of the following cases will be reported:\n\n* All usages of `==` and `!=` operators.\n* All usages except comparison with null. Some code styles allow using `x == null` as a replacement for `x === null || x === undefined`.\n* Only suspicious expressions, such as: `==` or `!=` comparisons with `0`, `''`, `null`, `true`, `false`, or `undefined`."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EqualityComparisonWithCoercionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSOctalInteger",
                "shortDescription": {
                  "text": "Octal integer"
                },
                "fullDescription": {
                  "text": "Reports a deprecated octal integer literal prefixed with '0' instead of '0o'. Such literals are not allowed in modern ECMAScript code, and using them in the strict mode is an error. To force this inspection for ES5 and ES3 language levels, select the 'Warn about obsolete octal literals in ES5- code' checkbox below.",
                  "markdown": "Reports a deprecated octal integer literal prefixed with `0` instead of `0o`.  \nSuch literals are not allowed in modern ECMAScript code, and using them in the strict mode is an error.  \nTo force this inspection for ES5 and ES3 language levels, select the 'Warn about obsolete octal literals in ES5- code' checkbox below."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JSOctalInteger",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Validity issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExceptionCaughtLocallyJS",
                "shortDescription": {
                  "text": "Exception used for local control-flow"
                },
                "fullDescription": {
                  "text": "Reports a 'throw' statement whose exceptions are always caught by the containing 'try' statement. Using 'throw' statements as a 'goto' to change the local flow of control is confusing.",
                  "markdown": "Reports a `throw` statement whose exceptions are always caught by the containing `try` statement. Using `throw` statements as a `goto` to change the local flow of control is confusing."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExceptionCaughtLocallyJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Try statement issues",
                      "index": 29,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThrowFromFinallyBlockJS",
                "shortDescription": {
                  "text": "'throw' inside 'finally' block"
                },
                "fullDescription": {
                  "text": "Reports s 'throw' statement inside a 'finally' block. Such 'throw' statements may mask exceptions thrown, and complicate debugging.",
                  "markdown": "Reports s `throw` statement inside a `finally` block. Such `throw` statements may mask exceptions thrown, and complicate debugging."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ThrowInsideFinallyBlockJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Try statement issues",
                      "index": 29,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptValidateGenericTypes",
                "shortDescription": {
                  "text": "Incorrect generic type argument"
                },
                "fullDescription": {
                  "text": "Reports an invalid type argument in a function, interface, or class declaration.",
                  "markdown": "Reports an invalid type argument in a function, interface, or class declaration."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "TypeScriptValidateGenericTypes",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CyclomaticComplexityJS",
                "shortDescription": {
                  "text": "Overly complex function"
                },
                "fullDescription": {
                  "text": "Reports a function with too many branching points in a function (too high cyclomatic complexity). Such functions may be confusing and hard to test. Use the field provided below to specify the maximum acceptable cyclomatic complexity for a function.",
                  "markdown": "Reports a function with too many branching points in a function (too high cyclomatic complexity). Such functions may be confusing and hard to test.\n\n\nUse the field provided below to specify the maximum acceptable cyclomatic complexity for a function."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyComplexFunctionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Function metrics",
                      "index": 30,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSMismatchedCollectionQueryUpdate",
                "shortDescription": {
                  "text": "Mismatched query and update of collection"
                },
                "fullDescription": {
                  "text": "Reports a collection of fields or variables whose contents are either queried and not updated or updated and not queried. Such mismatched queries and updates are pointless and may indicate either dead code or a typographical error. Query methods are automatically detected, based on whether they return something, or a callback is passed to them. Use the table below to specify which methods are update methods.",
                  "markdown": "Reports a collection of fields or variables whose contents are either queried and not updated or updated and not queried. Such mismatched queries and updates are pointless and may indicate either dead code or a typographical error.\n\n\nQuery methods are automatically detected, based on whether they return something, or a callback is passed to them.\nUse the table below to specify which methods are update methods."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSMismatchedCollectionQueryUpdate",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PackageJsonMismatchedDependency",
                "shortDescription": {
                  "text": "Mismatched dependencies in package.json"
                },
                "fullDescription": {
                  "text": "Reports a dependency from package.json that is not installed or doesn't match the specified version range.",
                  "markdown": "Reports a dependency from package.json that is not installed or doesn't match the specified [version range](https://docs.npmjs.com/about-semantic-versioning)."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PackageJsonMismatchedDependency",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Imports and dependencies",
                      "index": 41,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSPotentiallyInvalidUsageOfThis",
                "shortDescription": {
                  "text": "Potentially invalid reference to 'this' from closure"
                },
                "fullDescription": {
                  "text": "Reports a 'this' in closure that is used for referencing properties of outer context. Example: 'function Outer() {\n  this.outerProp = 1;\n  function inner() {\n    // bad, because 'outerProp' of Outer\n    // won't be updated here\n    // on calling 'new Outer()' as may be expected\n    this.outerProp = 2;\n  }\n  inner();\n}'",
                  "markdown": "Reports a `this` in closure that is used for referencing properties of outer context.\n\nExample:\n\n\n    function Outer() {\n      this.outerProp = 1;\n      function inner() {\n        // bad, because 'outerProp' of Outer\n        // won't be updated here\n        // on calling 'new Outer()' as may be expected\n        this.outerProp = 2;\n      }\n      inner();\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSPotentiallyInvalidUsageOfThis",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSMissingSwitchDefault",
                "shortDescription": {
                  "text": "'switch' statement has no 'default' branch"
                },
                "fullDescription": {
                  "text": "Reports a 'switch' statement without a 'default' clause when some possible values are not enumerated.",
                  "markdown": "Reports a `switch` statement without a `default` clause when some possible values are not enumerated."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSMissingSwitchDefault",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Switch statement issues",
                      "index": 45,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSXNamespaceValidation",
                "shortDescription": {
                  "text": "Missing JSX namespace"
                },
                "fullDescription": {
                  "text": "Reports a usage of a JSX construction without importing namespace. Having the namespace in the file scope ensures proper code compilation.",
                  "markdown": "Reports a usage of a JSX construction without importing namespace. Having the namespace in the file scope ensures proper code compilation."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSXNamespaceValidation",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Imports and dependencies",
                      "index": 41,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnresolvedLibraryURL",
                "shortDescription": {
                  "text": "Missed locally stored library for HTTP link"
                },
                "fullDescription": {
                  "text": "Reports a URL of an external JavaScript library that is not associated with any locally stored file. Suggests downloading the library. Such association enables the IDE to provide proper code completion and navigation.",
                  "markdown": "Reports a URL of an external JavaScript library that is not associated with any locally stored file. Suggests downloading the library. Such association enables the IDE to provide proper code completion and navigation."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnresolvedLibraryURL",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6PreferShortImport",
                "shortDescription": {
                  "text": "Import can be shortened"
                },
                "fullDescription": {
                  "text": "Reports an ES6 import whose 'from' part can be shortened. Suggests importing the parent directory.",
                  "markdown": "Reports an ES6 import whose `from` part can be shortened. Suggests importing the parent directory."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ES6PreferShortImport",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PointlessBitwiseExpressionJS",
                "shortDescription": {
                  "text": "Bitwise expression can be simplified"
                },
                "fullDescription": {
                  "text": "Reports an expression that includes 'and' with zero, 'or' by zero, or shifting by zero. Such expressions may result from not fully completed automated refactorings.",
                  "markdown": "Reports an expression that includes `and` with zero, `or` by zero, or shifting by zero. Such expressions may result from not fully completed automated refactorings."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PointlessBitwiseExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Bitwise operation issues",
                      "index": 18,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InfiniteLoopJS",
                "shortDescription": {
                  "text": "Infinite loop statement"
                },
                "fullDescription": {
                  "text": "Reports a 'for', 'while', or 'do' statement which can only exit by throwing an exception. Such statements often indicate coding errors.",
                  "markdown": "Reports a `for`, `while`, or `do` statement which can only exit by throwing an exception. Such statements often indicate coding errors."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InfiniteLoopJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSStringConcatenationToES6Template",
                "shortDescription": {
                  "text": "String concatenation is used instead of template literal"
                },
                "fullDescription": {
                  "text": "Reports a string concatenation. Suggests replacing it with a template literal Example '\"result: \" + a + \".\"' After applying the quick-fix the code looks as follows: '`result: ${a}.`'",
                  "markdown": "Reports a string concatenation. Suggests replacing it with a [template literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals)\n\nExample\n\n     \"result: \" + a + \".\" \n\nAfter applying the quick-fix the code looks as follows:\n\n     `result: ${a}.` \n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSStringConcatenationToES6Template",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/ES2015 migration aids",
                      "index": 19,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSArrowFunctionBracesCanBeRemoved",
                "shortDescription": {
                  "text": "Redundant braces around arrow function body"
                },
                "fullDescription": {
                  "text": "Reports an arrow function whose body only consists of braces and exactly one statement. Suggests converting to concise syntax without braces. 'let incrementer = (x) => {return x + 1};' After the quick-fix is applied, the code fragment looks as follows: 'let incrementer = (x) => x + 1;'",
                  "markdown": "Reports an arrow function whose body only consists of braces and exactly one statement. Suggests converting to concise syntax without braces.\n\n\n        let incrementer = (x) => {return x + 1};\n\nAfter the quick-fix is applied, the code fragment looks as follows:\n\n\n        let incrementer = (x) => x + 1;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSArrowFunctionBracesCanBeRemoved",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Code style issues",
                      "index": 10,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceAssignmentWithOperatorAssignmentJS",
                "shortDescription": {
                  "text": "Assignment could be replaced with operator assignment"
                },
                "fullDescription": {
                  "text": "Reports an assignment operation that can be replaced by an operator assignment to make your code shorter and probably clearer. Example: 'x = x + 3;'\n  'x = x / 3;'\n After the quick fix is applied the result looks like:   'x += 3;'\n  'x /= 3;'",
                  "markdown": "Reports an assignment operation that can be replaced by an operator assignment to make your code shorter and probably clearer.\n\n\nExample:\n\n      x = x + 3;\n      x = x / 3;\n\nAfter the quick fix is applied the result looks like:\n\n      x += 3;\n      x /= 3;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentReplaceableWithOperatorAssignmentJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Assignment issues",
                      "index": 35,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSFileReferences",
                "shortDescription": {
                  "text": "Unresolved file reference"
                },
                "fullDescription": {
                  "text": "Reports an unresolved file reference in a JavaScript file, including CommonJS and AMD modules references.",
                  "markdown": "Reports an unresolved file reference in a JavaScript file, including CommonJS and AMD modules references."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSFileReferences",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Stylelint",
                "shortDescription": {
                  "text": "Stylelint"
                },
                "fullDescription": {
                  "text": "Reports a discrepancy detected by the Stylelint linter. The highlighting is based on the rule severity specified in the Stylelint configuration file for each individual rule.",
                  "markdown": "Reports a discrepancy detected by the [Stylelint](http://stylelint.io) linter.   \n\nThe highlighting is based on the rule severity specified in the [Stylelint configuration file](https://stylelint.io/user-guide/configure) for each individual rule."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "Stylelint",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Code quality tools",
                      "index": 52,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FunctionWithInconsistentReturnsJS",
                "shortDescription": {
                  "text": "Function with inconsistent returns"
                },
                "fullDescription": {
                  "text": "Reports a function that returns a value in some cases while in other cases no value is returned. This usually indicates an error. Example: 'function foo() {\n  if (true)\n    return 3;\n  return;\n}'",
                  "markdown": "Reports a function that returns a value in some cases while in other cases no value is returned. This usually indicates an error.\n\nExample:\n\n\n    function foo() {\n      if (true)\n        return 3;\n      return;\n    }\n\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FunctionWithInconsistentReturnsJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Validity issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyTryBlockJS",
                "shortDescription": {
                  "text": "Empty 'try' block"
                },
                "fullDescription": {
                  "text": "Reports an empty 'try' block, which usually indicates an error.",
                  "markdown": "Reports an empty `try` block, which usually indicates an error."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptyTryBlockJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Try statement issues",
                      "index": 29,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ClassMemberInitializationOrder",
                "shortDescription": {
                  "text": "Use of possibly unassigned property in a static initializer"
                },
                "fullDescription": {
                  "text": "Reports a class member initializer which references another non-hoisted class member while the latter may be not initialized yet. Initialization of class members happens consequently for fields, so a field cannot reference another field that is declared later.",
                  "markdown": "Reports a class member initializer which references another non-hoisted class member while the latter may be not initialized yet.   \n\nInitialization of class members happens consequently for fields, so a field cannot reference another field that is declared later."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ES6ClassMemberInitializationOrder",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReservedWordUsedAsNameJS",
                "shortDescription": {
                  "text": "Reserved word used as name"
                },
                "fullDescription": {
                  "text": "Reports a JavaScript reserved word used as a name. The JavaScript specification reserves a number of words which are currently not used as keywords. Using those words as identifiers may result in broken code if later versions of JavaScript start using them as keywords.",
                  "markdown": "Reports a JavaScript reserved word used as a name. The JavaScript specification reserves a number of words which are currently not used as keywords. Using those words as identifiers may result in broken code if later versions of JavaScript start using them as keywords."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReservedWordAsName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Validity issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSClassNamingConvention",
                "shortDescription": {
                  "text": "Class naming convention"
                },
                "fullDescription": {
                  "text": "Reports a class or a function that is annotated with a JSDoc '@constructor' or '@class' tag whose names are too short, too long, or do not follow the specified regular expression pattern. Use the fields provided below to specify minimum length, maximum length, and a regular expression expected for classes names. Use the standard 'java.util.regex' format for regular expressions.",
                  "markdown": "Reports a class or a function that is annotated with a JSDoc `@constructor` or `@class` tag whose names are too short, too long, or do not follow the specified regular expression pattern.\n\n\nUse the fields provided below to specify minimum length, maximum length, and a regular expression\nexpected for classes names. Use the standard `java.util.regex` format for regular expressions."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSClassNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Naming conventions",
                      "index": 44,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptValidateJSTypes",
                "shortDescription": {
                  "text": "Type mismatch in 'any' type"
                },
                "fullDescription": {
                  "text": "Reports a function call with a parameter, return value, or assigned expression or incorrect type, if the context symbol can be implicitly resolved to the 'any' type. declare var test: any;\ntest.hasOwnProperty(true); //reports 'true'",
                  "markdown": "Reports a function call with a parameter, return value, or assigned expression or incorrect type, if the context symbol can be implicitly resolved to the `any` type.\n\n```\ndeclare var test: any;\ntest.hasOwnProperty(true); //reports 'true'\n```"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TypeScriptValidateJSTypes",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedFunctionJS",
                "shortDescription": {
                  "text": "Nested function"
                },
                "fullDescription": {
                  "text": "Reports a function nested inside another function. Although JavaScript allows functions to be nested, such constructs may be confusing. Use the checkbox below to ignore anonymous nested functions.",
                  "markdown": "Reports a function nested inside another function. Although JavaScript allows functions to be nested, such constructs may be confusing.\n\n\nUse the checkbox below to ignore anonymous nested functions."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedFunctionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially confusing code constructs",
                      "index": 25,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XHTMLIncompatabilitiesJS",
                "shortDescription": {
                  "text": "Incompatible XHTML usages"
                },
                "fullDescription": {
                  "text": "Reports common JavaScript DOM patterns which may present problems with XHTML documents. In particular, the patterns detected will behave completely differently depending on whether the document is loaded as XML or HTML. This can result in subtle bugs where script behaviour is dependent on the MIME-type of the document, rather than its content. Patterns detected include document.body, document.images, document.applets, document.links, document.forms, and document.anchors.",
                  "markdown": "Reports common JavaScript DOM patterns which may present problems with XHTML documents. In particular, the patterns detected will behave completely differently depending on whether the document is loaded as XML or HTML. This can result in subtle bugs where script behaviour is dependent on the MIME-type of the document, rather than its content. Patterns detected include **document.body** , **document.images** , **document.applets** , **document.links** , **document.forms** , and **document.anchors**."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "XHTMLIncompatabilitiesJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/DOM issues",
                      "index": 46,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IncrementDecrementResultUsedJS",
                "shortDescription": {
                  "text": "Result of increment or decrement used"
                },
                "fullDescription": {
                  "text": "Reports an increment ('++') or decrement ('--') expression where the result of the assignment is used in a containing expression. Such assignments can result in confusion due to the order of operations, as evaluation of the assignment may affect the outer expression in unexpected ways. Example: 'var a = b++'",
                  "markdown": "Reports an increment (`++`) or decrement (`--`) expression where the result of the assignment is used in a containing expression. Such assignments can result in confusion due to the order of operations, as evaluation of the assignment may affect the outer expression in unexpected ways. Example: `var a = b++`"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IncrementDecrementResultUsedJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially confusing code constructs",
                      "index": 25,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousTypeOfGuard",
                "shortDescription": {
                  "text": "Unsound type guard check"
                },
                "fullDescription": {
                  "text": "Reports a 'typeof' or 'instanceof' unsound type guard check. The 'typeof x' type guard can be unsound in one of the following two cases: 'typeof x' never corresponds to the specified value (for example, 'typeof x === 'number'' when 'x' is of the type 'string | boolean') 'typeof x' always corresponds to the specified value (for example, 'typeof x === 'string'' when 'x' is of the type 'string') The 'x instanceof A' type guard can be unsound in one of the following two cases: The type of 'x' is not related to 'A' The type of 'x' is 'A' or a subtype of 'A'",
                  "markdown": "Reports a `typeof` or `instanceof` unsound type guard check. The `typeof x` type guard can be unsound in one of the following two cases:\n\n* `typeof x` never corresponds to the specified value (for example, `typeof x === 'number'` when `x` is of the type 'string \\| boolean')\n* `typeof x` always corresponds to the specified value (for example, `typeof x === 'string'` when `x` is of the type 'string')\n\nThe `x instanceof A` type guard can be unsound in one of the following two cases:\n\n* The type of `x` is not related to `A`\n* The type of `x` is `A` or a subtype of `A`"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousTypeOfGuard",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptJSXUnresolvedComponent",
                "shortDescription": {
                  "text": "Unresolved JSX component"
                },
                "fullDescription": {
                  "text": "Reports an unresolved reference to a JSX component. Suggests adding an import statement if the referenced component is defined in the project or its dependencies or creating a new component with the specified name. The template for a new component can be modified in Editor | File and Code Templates.",
                  "markdown": "Reports an unresolved reference to a JSX component. Suggests adding an import statement if the referenced component is defined in the project or its dependencies or creating a new component with the specified name.\n\nThe template for a new component can be modified in Editor \\| File and Code Templates."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TypeScriptJSXUnresolvedComponent",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptFieldCanBeMadeReadonly",
                "shortDescription": {
                  "text": "Field can be readonly"
                },
                "fullDescription": {
                  "text": "Reports a private field that can be made readonly (for example, if the field is assigned only in the constructor).",
                  "markdown": "Reports a private field that can be made readonly (for example, if the field is assigned only in the constructor)."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TypeScriptFieldCanBeMadeReadonly",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6DestructuringVariablesMerge",
                "shortDescription": {
                  "text": "Destructuring properties with the same key"
                },
                "fullDescription": {
                  "text": "Reports multiple destructuring properties with identical keys. Suggests merging the properties.",
                  "markdown": "Reports multiple destructuring properties with identical keys. Suggests merging the properties."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6DestructuringVariablesMerge",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LoopStatementThatDoesntLoopJS",
                "shortDescription": {
                  "text": "Loop statement that doesn't loop"
                },
                "fullDescription": {
                  "text": "Reports a 'for', 'while', or 'do' statement whose bodies are guaranteed to execute at most once. Normally, this indicates an error.",
                  "markdown": "Reports a `for`, `while`, or `do` statement whose bodies are guaranteed to execute at most once. Normally, this indicates an error."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LoopStatementThatDoesntLoopJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NegatedIfStatementJS",
                "shortDescription": {
                  "text": "Negated 'if' statement"
                },
                "fullDescription": {
                  "text": "Reports if statements which have an else branch and a negated condition. Flipping the order of the if and else branches will usually increase the clarity of such statements.",
                  "markdown": "Reports **if** statements which have an **else** branch and a negated condition. Flipping the order of the **if** and **else** branches will usually increase the clarity of such statements."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NegatedIfStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially confusing code constructs",
                      "index": 25,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSNonASCIINames",
                "shortDescription": {
                  "text": "Identifiers with non-ASCII symbols"
                },
                "fullDescription": {
                  "text": "Reports a non-ASCII symbol in a name. If the 'Allow only ASCII names' option is selected, reports all names that contain non-ASCII symbols. Otherwise reports all names that contain both ASCII and non-ASCII symbols.",
                  "markdown": "Reports a non-ASCII symbol in a name.  \n\nIf the 'Allow only ASCII names' option is selected, reports all names that contain non-ASCII symbols.  \nOtherwise reports all names that contain both ASCII and non-ASCII symbols."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSNonASCIINames",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Naming conventions",
                      "index": 44,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptRedundantGenericType",
                "shortDescription": {
                  "text": "Redundant type arguments"
                },
                "fullDescription": {
                  "text": "Reports a type argument that is equal to the default one and can be removed. Example: 'type Foo<T=number> = T;\nlet z: Foo<number>;'",
                  "markdown": "Reports a type argument that is equal to the default one and can be removed.\n\n\nExample:\n\n\n    type Foo<T=number> = T;\n    let z: Foo<number>;\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TypeScriptRedundantGenericType",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptUMDGlobal",
                "shortDescription": {
                  "text": "Referenced UMD global variable"
                },
                "fullDescription": {
                  "text": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly.",
                  "markdown": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TypeScriptUMDGlobal",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryReturnJS",
                "shortDescription": {
                  "text": "Unnecessary 'return' statement"
                },
                "fullDescription": {
                  "text": "Reports an unnecessary 'return' statement, that is, a 'return' statement that returns no value and occurs just before the function would have \"fallen through\" the bottom. These statements may be safely removed.",
                  "markdown": "Reports an unnecessary `return` statement, that is, a `return` statement that returns no value and occurs just before the function would have \"fallen through\" the bottom. These statements may be safely removed."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryReturnStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConditionalExpressionWithIdenticalBranchesJS",
                "shortDescription": {
                  "text": "Conditional expression with identical branches"
                },
                "fullDescription": {
                  "text": "Reports a ternary conditional expression with identical 'then' and 'else' branches.",
                  "markdown": "Reports a ternary conditional expression with identical `then` and `else` branches."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConditionalExpressionWithIdenticalBranchesJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSIncompatibleTypesComparison",
                "shortDescription": {
                  "text": "Comparison of expressions having incompatible types"
                },
                "fullDescription": {
                  "text": "Reports a comparison with operands of incompatible types or an operand with a type without possible common values.",
                  "markdown": "Reports a comparison with operands of incompatible types or an operand with a type without possible common values."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSIncompatibleTypesComparison",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSAnnotator",
                "shortDescription": {
                  "text": "ECMAScript specification is not followed"
                },
                "fullDescription": {
                  "text": "Reports basic syntax issues and inconsistencies with language specification, such as invalid usages of keywords, usages of incompatible numeric format, or multiple parameters to getters/setters. Generally, such errors must always be reported and shouldn't be disabled. But in some cases, such as issues due to the dynamic nature of JavaScript, the use of not yet supported language features, or bugs in IDE's checker, it may be handy to disable reporting these very basic errors.",
                  "markdown": "Reports basic syntax issues and inconsistencies with language specification, such as invalid usages of keywords, usages of incompatible numeric format, or multiple parameters to getters/setters.   \nGenerally, such errors must always be reported and shouldn't be disabled. But in some cases, such as issues due to the dynamic nature of JavaScript, the use of not yet supported language features, or bugs in IDE's checker, it may be handy to disable reporting these very basic errors."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JSAnnotator",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnfilteredForInLoop",
                "shortDescription": {
                  "text": "Unfiltered for..in loop"
                },
                "fullDescription": {
                  "text": "Reports unfiltered 'for-in' loops. The use of this construct results in processing not only own properties of an object but properties from its prototype as well. It may be unexpected in some specific cases, for example, in utility methods that copy or modify all properties or when 'Object''s prototype may be incorrectly modified. For example, the following code will print 42 and myMethod: 'Object.prototype.myMethod = function myMethod() {};\nlet a = { foo: 42 };\nfor (let i in a) {\n  console.log(a[i]);\n}' Suggests replacing the whole loop with a 'Object.keys()' method or adding a 'hasOwnProperty()' check. After applying the quick-fix the code looks as follows: 'for (let i in a) {\n  if (a.hasOwnProperty(i)) {\n    console.log(a[i]);\n  }\n}'",
                  "markdown": "Reports unfiltered `for-in` loops.   \n\nThe use of this construct results in processing not only own properties of an object but properties from its prototype as well. It may be unexpected in some specific cases, for example, in utility methods that copy or modify all properties or when `Object`'s prototype may be incorrectly modified. For example, the following code will print **42** and **myMethod** :   \n\n\n    Object.prototype.myMethod = function myMethod() {};\n    let a = { foo: 42 };\n    for (let i in a) {\n      console.log(a[i]);\n    }\n\nSuggests replacing the whole loop with a `Object.keys()` method or adding a `hasOwnProperty()` check. After applying the quick-fix the code looks as follows:\n\n\n    for (let i in a) {\n      if (a.hasOwnProperty(i)) {\n        console.log(a[i]);\n      }\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnfilteredForInLoop",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSLastCommaInObjectLiteral",
                "shortDescription": {
                  "text": "Unneeded last comma in object literal"
                },
                "fullDescription": {
                  "text": "Reports usages of a trailing comma in object literals. The warning is reported only when the JavaScript language version is set to ECMAScript 5.1. Trailing commas in object literals are allowed by the specification, however, some browsers might throw an error when a trailing comma is used. You can configure formatting options for trailing commas in Code Style | JavaScript or TypeScript | Punctuation.",
                  "markdown": "Reports usages of a trailing comma in object literals.\n\nThe warning is reported only when the JavaScript language version is set to ECMAScript 5.1.\n\nTrailing commas in object literals are allowed by the specification, however, some browsers might throw an error when a trailing comma is used.\n\nYou can configure formatting options for trailing commas in **Code Style** \\| **JavaScript** or **TypeScript** \\| **Punctuation**."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSLastCommaInObjectLiteral",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSFunctionExpressionToArrowFunction",
                "shortDescription": {
                  "text": "Function expression is used instead of arrow function"
                },
                "fullDescription": {
                  "text": "Reports a function expression. Suggests converting it to an arrow function. Example: 'arr.map(function(el) {return el + 1})' After applying the quick-fix the code looks as follows: 'arr.map(el => el + 1)'",
                  "markdown": "Reports a [function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/function) expression. Suggests converting it to an [arrow function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions).\n\nExample:\n\n    arr.map(function(el) {return el + 1})\n\nAfter applying the quick-fix the code looks as follows:\n\n    arr.map(el => el + 1)\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSFunctionExpressionToArrowFunction",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/ES2015 migration aids",
                      "index": 19,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6TopLevelAwaitExpression",
                "shortDescription": {
                  "text": "Top-level 'await' expression"
                },
                "fullDescription": {
                  "text": "Reports a usage of a top-level 'await' expression. While the new 'top-level async' proposal is on its way, using 'await' outside async functions is not allowed.",
                  "markdown": "Reports a usage of a top-level `await` expression. While the new 'top-level async' proposal is on its way, using `await` outside async functions is not allowed."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ES6TopLevelAwaitExpression",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Async code and promises",
                      "index": 47,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6MissingAwait",
                "shortDescription": {
                  "text": "Missing await for an async function call"
                },
                "fullDescription": {
                  "text": "Reports an 'async' function call without an expected 'await' prefix inside an 'async' function. Such call returns a 'Promise' and control flow is continued immediately. Example: 'async function bar() { /* ... */ }\nasync function foo() {\n    bar(); // bad\n}' After the quick-fix is applied, the 'await' prefix is added: 'async function bar() { /* ... */ }\nasync function foo() {\n    await bar(); // good\n}' When the 'Report for promises in return statements' checkbox is selected, also suggests adding 'await' in return statements. While this is generally not necessary, it gives two main benefits. You won't forget to add 'await' when surrounding your code with 'try-catch'. An explicit 'await' helps V8 runtime to provide async stack traces.",
                  "markdown": "Reports an `async` function call without an expected `await` prefix inside an `async` function. Such call returns a `Promise` and control flow is continued immediately.\n\nExample:\n\n\n    async function bar() { /* ... */ }\n    async function foo() {\n        bar(); // bad\n    }\n\n\nAfter the quick-fix is applied, the `await` prefix is added:\n\n\n    async function bar() { /* ... */ }\n    async function foo() {\n        await bar(); // good\n    }\n\nWhen the 'Report for promises in return statements' checkbox is selected, also suggests adding `await` in return statements.  \nWhile this is generally not necessary, it gives two main benefits.  \n\n* You won't forget to add `await` when surrounding your code with `try-catch`.\n* An explicit `await` helps V8 runtime to provide [async stack traces](https://bit.ly/v8-zero-cost-async-stack-traces)."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6MissingAwait",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Async code and promises",
                      "index": 47,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TailRecursionJS",
                "shortDescription": {
                  "text": "Tail recursion"
                },
                "fullDescription": {
                  "text": "Reports a tail recursion, that is, when a function calls itself as its last action before returning. A tail recursion can always be replaced by looping, which will be considerably faster. Some JavaScript engines perform this optimization, while others do not. Thus, tail recursive solutions may have considerably different performance characteristics in different environments.",
                  "markdown": "Reports a tail recursion, that is, when a function calls itself as its last action before returning. A tail recursion can always be replaced by looping, which will be considerably faster. Some JavaScript engines perform this optimization, while others do not. Thus, tail recursive solutions may have considerably different performance characteristics in different environments."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TailRecursionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ConvertToForOf",
                "shortDescription": {
                  "text": "'for..in' is used instead of 'for..of'"
                },
                "fullDescription": {
                  "text": "Reports a usage of a 'for..in' loop on an array. Suggests replacing it with a 'for..of' loop. 'for..of' loops, which are introduced in ECMAScript 6, iterate over 'iterable' objects. For arrays, this structure is preferable to 'for..in', because it works only with array values but not with array object's properties.",
                  "markdown": "Reports a usage of a [for..in](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in) loop on an array. Suggests replacing it with a [for..of](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of) loop.   \n`for..of` loops, which are introduced in ECMAScript 6, iterate over `iterable` objects. For arrays, this structure is preferable to `for..in`, because it works only with array values but not with array object's properties."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6ConvertToForOf",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/ES2015 migration aids",
                      "index": 19,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FlowJSCoverage",
                "shortDescription": {
                  "text": "Code is not covered by Flow"
                },
                "fullDescription": {
                  "text": "Reports JavaScript code fragments that are not covered by the Flow type checker. To use this inspection, configure the Flow executable in Settings | Languages & Frameworks | JavaScript.",
                  "markdown": "Reports JavaScript code fragments that are not covered by the Flow type checker. To use this inspection, configure the Flow executable in [Settings \\| Languages \\& Frameworks \\| JavaScript](settings://Settings.JavaScript)."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "FlowJSCoverage",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Flow type checker",
                      "index": 12,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ParameterNamingConventionJS",
                "shortDescription": {
                  "text": "Function parameter naming convention"
                },
                "fullDescription": {
                  "text": "Reports a function parameter whose name is too short, too long, or doesn't follow the specified regular expression pattern. Use the fields provided below to specify minimum length, maximum length and regular expression expected for local variables names. Use the standard 'java.util.regex' format regular expressions.",
                  "markdown": "Reports a function parameter whose name is too short, too long, or doesn't follow the specified regular expression pattern.\n\n\nUse the fields provided below to specify minimum length, maximum length and regular expression\nexpected for local variables names. Use the standard `java.util.regex` format regular expressions."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ParameterNamingConventionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Naming conventions",
                      "index": 44,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUndefinedPropertyAssignment",
                "shortDescription": {
                  "text": "Undefined property assignment"
                },
                "fullDescription": {
                  "text": "Reports an assignment to a property that is not defined in the type of a variable. Example: '/**\n * @type {{ property1: string, property2: number }}\n */\nlet myVariable = create();\n\nmyVariable.newProperty = 3; // bad'",
                  "markdown": "Reports an assignment to a property that is not defined in the type of a variable.\n\nExample:\n\n\n    /**\n     * @type {{ property1: string, property2: number }}\n     */\n    let myVariable = create();\n\n    myVariable.newProperty = 3; // bad\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSUndefinedPropertyAssignment",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Code style issues",
                      "index": 10,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StandardJS",
                "shortDescription": {
                  "text": "Standard code style"
                },
                "fullDescription": {
                  "text": "Reports a discrepancy detected by the JavaScript Standard Style linter. The highlighting severity in the editor is based on the severity level the linter reports.",
                  "markdown": "Reports a discrepancy detected by the [JavaScript Standard Style](https://standardjs.com/) linter.   \n\nThe highlighting severity in the editor is based on the severity level the linter reports."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "StandardJS",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Code quality tools",
                      "index": 48,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ParametersPerFunctionJS",
                "shortDescription": {
                  "text": "Function with too many parameters"
                },
                "fullDescription": {
                  "text": "Reports a function with too many parameters. Such functions often indicate problems with design. Use the field below to specify the maximum acceptable number of parameters for a function.",
                  "markdown": "Reports a function with too many parameters. Such functions often indicate problems with design.\n\n\nUse the field below to specify the maximum acceptable number of parameters for a function."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyComplexFunctionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Function metrics",
                      "index": 30,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThisExpressionReferencesGlobalObjectJS",
                "shortDescription": {
                  "text": "'this' expression which references the global object"
                },
                "fullDescription": {
                  "text": "Reports a 'this' expression outside an object literal or a constructor body. Such 'this' expressions reference the top-level \"global\" JavaScript object, but are mostly useless.",
                  "markdown": "Reports a `this` expression outside an object literal or a constructor body. Such `this` expressions reference the top-level \"global\" JavaScript object, but are mostly useless."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ThisExpressionReferencesGlobalObjectJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Validity issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedAssignmentJS",
                "shortDescription": {
                  "text": "Nested assignment"
                },
                "fullDescription": {
                  "text": "Reports an assignment expression nested inside another expression, for example, 'a = b = 1'. Such expressions may be confusing and violate the general design principle that a given construct should do precisely one thing.",
                  "markdown": "Reports an assignment expression nested inside another expression, for example, `a = b = 1`. Such expressions may be confusing and violate the general design principle that a given construct should do precisely one thing."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedAssignmentJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Assignment issues",
                      "index": 35,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DefaultNotLastCaseInSwitchJS",
                "shortDescription": {
                  "text": "'default' not last case in 'switch'"
                },
                "fullDescription": {
                  "text": "Reports a 'switch' statement where the 'default' case comes before another case instead of being the very last case, which may cause confusion.",
                  "markdown": "Reports a `switch` statement where the `default` case comes before another case instead of being the very last case, which may cause confusion."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DefaultNotLastCaseInSwitchJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Switch statement issues",
                      "index": 45,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConfusingPlusesOrMinusesJS",
                "shortDescription": {
                  "text": "Confusing sequence of '+' or '-'"
                },
                "fullDescription": {
                  "text": "Reports a suspicious combination of '+' or '-' characters in JavaScript code (for example, 'a+++b'. Such sequences are confusing, and their semantics may change through changes in the whitespace.",
                  "markdown": "Reports a suspicious combination of `+` or `-` characters in JavaScript code (for example, `a+++b`. Such sequences are confusing, and their semantics may change through changes in the whitespace."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConfusingPlusesOrMinusesJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially confusing code constructs",
                      "index": 25,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSDeprecatedSymbols",
                "shortDescription": {
                  "text": "Deprecated symbol used"
                },
                "fullDescription": {
                  "text": "Reports a usage of a deprecated function variable.",
                  "markdown": "Reports a usage of a deprecated function variable."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSDeprecatedSymbols",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LocalVariableNamingConventionJS",
                "shortDescription": {
                  "text": "Local variable naming convention"
                },
                "fullDescription": {
                  "text": "Reports a local variable whose name is too short, too long, or doesn't follow the specified regular expression pattern. Use the fields provided below to specify minimum length, maximum length, and a regular expression expected for local variables names. Use the standard 'java.util.regex' format regular expressions.",
                  "markdown": "Reports a local variable whose name is too short, too long, or doesn't follow the specified regular expression pattern.\n\n\nUse the fields provided below to specify minimum length, maximum length, and a regular expression\nexpected for local variables names. Use the standard `java.util.regex` format regular expressions."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LocalVariableNamingConventionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Naming conventions",
                      "index": 44,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyFinallyBlockJS",
                "shortDescription": {
                  "text": "Empty 'finally' block"
                },
                "fullDescription": {
                  "text": "Reports an empty 'finally' block, which usually indicates an error.",
                  "markdown": "Reports an empty `finally` block, which usually indicates an error."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptyFinallyBlockJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Try statement issues",
                      "index": 29,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSCommentMatchesSignature",
                "shortDescription": {
                  "text": "Mismatched JSDoc and function signature"
                },
                "fullDescription": {
                  "text": "Reports mismatch between the names and the number of parameters within a JSDoc comment and the actual parameters of a function. Suggests updating parameters in JSDoc comment. Example: '/**\n * @param height Height in pixels\n */\nfunction sq(height, width) {} // width is not documented' After the quick-fix is applied: '/**\n * @param height Height in pixels\n * @param width\n */\nfunction sq(height, width) {}'",
                  "markdown": "Reports mismatch between the names and the number of parameters within a JSDoc comment and the actual parameters of a function. Suggests updating parameters in JSDoc comment.\n\n**Example:**\n\n\n    /**\n     * @param height Height in pixels\n     */\n    function sq(height, width) {} // width is not documented\n\nAfter the quick-fix is applied:\n\n\n    /**\n     * @param height Height in pixels\n     * @param width\n     */\n    function sq(height, width) {}\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSCommentMatchesSignature",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UpdateDependencyToLatestVersion",
                "shortDescription": {
                  "text": "Update package.json dependencies to latest versions"
                },
                "fullDescription": {
                  "text": "Suggests to upgrade your package.json dependencies to the latest versions, ignoring specified versions.",
                  "markdown": "Suggests to upgrade your package.json dependencies to the latest versions, ignoring specified versions."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UpdateDependencyToLatestVersion",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Imports and dependencies",
                      "index": 41,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptConfig",
                "shortDescription": {
                  "text": "Inconsistent tsconfig.json properties"
                },
                "fullDescription": {
                  "text": "Reports inconsistency of a 'paths', 'checkJs', or 'extends' property in a tsconfig.json file. The 'checkJs' property requires 'allowJs'. The 'extends' property should be a valid file reference.",
                  "markdown": "Reports inconsistency of a `paths`, `checkJs`, or `extends` property in a tsconfig.json file.   \nThe `checkJs` property requires `allowJs`.   \nThe `extends` property should be a valid file reference."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TypeScriptConfig",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSSuspiciousNameCombination",
                "shortDescription": {
                  "text": "Suspicious variable/parameter name combination"
                },
                "fullDescription": {
                  "text": "Reports an assignment or a function call where the name of the target variable or the function parameter does not match the name of the value assigned to it. Example: 'var x = 0;\n  var y = x;' or 'var x = 0, y = 0;\n  var rc = new Rectangle(y, x, 20, 20);' Here the inspection guesses that 'x' and 'y' are mixed up. Specify the names that should not be used together. An error is reported if a parameter name or an assignment target name contains words from one group while the name of the assigned or passed variable contains words from another group.",
                  "markdown": "Reports an assignment or a function call where the name of the target variable or the function parameter does not match the name of the value assigned to it.\n\nExample:\n\n\n      var x = 0;\n      var y = x;\n\nor\n\n\n      var x = 0, y = 0;\n      var rc = new Rectangle(y, x, 20, 20);\n\nHere the inspection guesses that `x` and `y` are mixed up.\n\nSpecify the names that should not be used together. An error is reported\nif a parameter name or an assignment target name contains words from one group while the name of the assigned or passed\nvariable contains words from another group."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSSuspiciousNameCombination",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnresolvedExtXType",
                "shortDescription": {
                  "text": "Unresolved Ext JS xtype"
                },
                "fullDescription": {
                  "text": "Reports an Ext JS 'xtype' reference that doesn't have a corresponding class.",
                  "markdown": "Reports an Ext JS `xtype` reference that doesn't have a corresponding class."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnresolvedExtXType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ForLoopThatDoesntUseLoopVariableJS",
                "shortDescription": {
                  "text": "'for' loop where update or condition does not use loop variable"
                },
                "fullDescription": {
                  "text": "Reports a 'for' loop where the condition or update does not use the 'for' loop variable.",
                  "markdown": "Reports a `for` loop where the condition or update does not use the `for` loop variable."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ForLoopThatDoesntUseLoopVariableJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptAbstractClassConstructorCanBeMadeProtected",
                "shortDescription": {
                  "text": "Abstract class constructor can be made protected"
                },
                "fullDescription": {
                  "text": "Reports a public constructor of an abstract class and suggests making it protected (because it is useless to have it public).",
                  "markdown": "Reports a public constructor of an abstract class and suggests making it protected (because it is useless to have it public)."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TypeScriptAbstractClassConstructorCanBeMadeProtected",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FunctionWithMultipleReturnPointsJS",
                "shortDescription": {
                  "text": "Function with multiple return points"
                },
                "fullDescription": {
                  "text": "Reports a function with multiple return points. Such functions are hard to understand and maintain.",
                  "markdown": "Reports a function with multiple return points. Such functions are hard to understand and maintain."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FunctionWithMultipleReturnPointsJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Function metrics",
                      "index": 30,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSIgnoredPromiseFromCall",
                "shortDescription": {
                  "text": "Result of method call returning a promise is ignored"
                },
                "fullDescription": {
                  "text": "Reports a function call that returns a 'Promise' that is not used later. Such calls are usually unintended and indicate an error.",
                  "markdown": "Reports a function call that returns a `Promise` that is not used later. Such calls are usually unintended and indicate an error."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSIgnoredPromiseFromCall",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Async code and promises",
                      "index": 47,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThreeNegationsPerFunctionJS",
                "shortDescription": {
                  "text": "Function with more than three negations"
                },
                "fullDescription": {
                  "text": "Reports a function with three or more negation operations ('!' or '!='). Such functions may be unnecessarily confusing.",
                  "markdown": "Reports a function with three or more negation operations (`!` or `!=`). Such functions may be unnecessarily confusing."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FunctionWithMoreThanThreeNegationsJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Function metrics",
                      "index": 30,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSRemoveUnnecessaryParentheses",
                "shortDescription": {
                  "text": "Unnecessary parentheses"
                },
                "fullDescription": {
                  "text": "Reports redundant parentheses. In expressions: 'var x = ((1) + 2) + 3' In arrow function argument lists: 'var incrementer = (x) => x + 1' In TypeScript and Flow type declarations: 'type Card = (Suit & Rank) | (Suit & Number)'",
                  "markdown": "Reports redundant parentheses.\n\nIn expressions:\n\n    var x = ((1) + 2) + 3\n\nIn arrow function argument lists:\n\n    var incrementer = (x) => x + 1\n\nIn TypeScript and Flow type declarations:\n\n    type Card = (Suit & Rank) | (Suit & Number)\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSRemoveUnnecessaryParentheses",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Code style issues",
                      "index": 10,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverlyComplexBooleanExpressionJS",
                "shortDescription": {
                  "text": "Overly complex boolean expression"
                },
                "fullDescription": {
                  "text": "Reports a boolean expression with too many terms. Such expressions may be confusing and bug-prone. Use the field below to specify the maximum number of terms allowed in an arithmetic expression.",
                  "markdown": "Reports a boolean expression with too many terms. Such expressions may be confusing and bug-prone.\n\n\nUse the field below to specify the maximum number of terms allowed in an arithmetic expression."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyComplexBooleanExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially confusing code constructs",
                      "index": 25,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverlyComplexArithmeticExpressionJS",
                "shortDescription": {
                  "text": "Overly complex arithmetic expression"
                },
                "fullDescription": {
                  "text": "Reports an arithmetic expression with too many terms. Such expressions may be confusing and bug-prone. Use the field below to specify the maximum number of terms allowed in an arithmetic expression.",
                  "markdown": "Reports an arithmetic expression with too many terms. Such expressions may be confusing and bug-prone.\n\n\nUse the field below to specify the maximum number of terms allowed in an arithmetic expression."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyComplexArithmeticExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially confusing code constructs",
                      "index": 25,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6RedundantNestingInTemplateLiteral",
                "shortDescription": {
                  "text": "Redundant nesting in template literal"
                },
                "fullDescription": {
                  "text": "Reports nested instances of a string or a template literal. Suggests inlining the nested instances into the containing template string. Example: 'let a = `Hello, ${`Brave ${\"New\"}`} ${\"World\"}!`' After applying the quick-fix the code looks as follows: 'let a = `Hello, Brave New World!`'",
                  "markdown": "Reports nested instances of a string or a template literal. Suggests inlining the nested instances into the containing template string.\n\nExample:\n\n\n    let a = `Hello, ${`Brave ${\"New\"}`} ${\"World\"}!`\n\nAfter applying the quick-fix the code looks as follows:\n\n\n    let a = `Hello, Brave New World!`\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6RedundantNestingInTemplateLiteral",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringLiteralBreaksHTMLJS",
                "shortDescription": {
                  "text": "String literal which breaks HTML parsing"
                },
                "fullDescription": {
                  "text": "Reports a string literal that contains a '</' sequence. Such strings may result in incorrect parsing of any HTML in which the JavaScript code is embedded.",
                  "markdown": "Reports a string literal that contains a `</` sequence. Such strings may result in incorrect parsing of any HTML in which the JavaScript code is embedded."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringLiteralBreaksHTMLJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Validity issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestingDepthJS",
                "shortDescription": {
                  "text": "Overly nested function"
                },
                "fullDescription": {
                  "text": "Reports a function whose body contains statements that are too deeply nested within other statements. Such functions may be confusing and indicate that refactoring may be necessary. Use the field provided below to specify the maximum acceptable nesting depth allowed in a function.",
                  "markdown": "Reports a function whose body contains statements that are too deeply nested within other statements. Such functions may be confusing and indicate that refactoring may be necessary.\n\n\nUse the field provided below to specify the maximum acceptable nesting depth allowed in a function."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyNestedFunctionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Function metrics",
                      "index": 30,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptSuspiciousConstructorParameterAssignment",
                "shortDescription": {
                  "text": "Assigned constructor field parameter"
                },
                "fullDescription": {
                  "text": "Reports a common mistake in TypeScript code, when a class field is declared as a constructor parameter, and then this parameter is assigned. In this case, the corresponding field won't be assigned, only the local parameter value is modified. 'class Foo {\n  constructor(private p: number) {\n    p = 1; //must be this.p = 1;\n  }\n}'",
                  "markdown": "Reports a common mistake in TypeScript code, when a class field is declared as a constructor parameter, and then this parameter is assigned.  \nIn this case, the corresponding field *won't* be assigned, only the local parameter value is modified.\n\n\n    class Foo {\n      constructor(private p: number) {\n        p = 1; //must be this.p = 1;\n      }\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TypeScriptSuspiciousConstructorParameterAssignment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ChainedFunctionCallJS",
                "shortDescription": {
                  "text": "Chained function call"
                },
                "fullDescription": {
                  "text": "Reports a function call whose target is another function call, for example, 'foo().bar()'",
                  "markdown": "Reports a function call whose target is another function call, for example, `foo().bar()`"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ChainedFunctionCallJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Code style issues",
                      "index": 10,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DuplicateConditionJS",
                "shortDescription": {
                  "text": "Duplicate condition in 'if' statement"
                },
                "fullDescription": {
                  "text": "Reports duplicate conditions in different branches of an 'if' statement. Duplicate conditions usually represent programmer oversight. Example: 'if (a) {\n    ...\n  } else if (a) {\n    ...\n  }'",
                  "markdown": "Reports duplicate conditions in different branches of an `if` statement. Duplicate conditions usually represent programmer oversight.\n\nExample:\n\n\n      if (a) {\n        ...\n      } else if (a) {\n        ...\n      }\n\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DuplicateConditionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedFunctionCallJS",
                "shortDescription": {
                  "text": "Nested function call"
                },
                "fullDescription": {
                  "text": "Reports a function call that is used as an argument in another function call, for example, 'foo(bar())'",
                  "markdown": "Reports a function call that is used as an argument in another function call, for example, `foo(bar())`"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedFunctionCallJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Code style issues",
                      "index": 10,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TrivialIfJS",
                "shortDescription": {
                  "text": "Redundant 'if' statement"
                },
                "fullDescription": {
                  "text": "Reports an 'if' statement that can be simplified to a single assignment or a 'return' statement. Example: 'if(foo())\n {\n  return true;\n }\n else\n {\n   return false;\n }' After applying the quick-fix the code looks as follows:  'return foo();'",
                  "markdown": "Reports an `if` statement that can be simplified to a single assignment or a `return` statement.\n\nExample:\n\n\n    if(foo())\n     {\n      return true;\n     }\n     else\n     {\n       return false;\n     }\n\nAfter applying the quick-fix the code looks as follows:\n\n     return foo();\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantIfStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSEqualityComparisonWithCoercion",
                "shortDescription": {
                  "text": "Equality operator may cause type coercion"
                },
                "fullDescription": {
                  "text": "Reports a usage of an equality operator that may cause unexpected type coercions. Suggests replacing '==' and '!=' with type-safe equality operators '===' and '!=='. Depending on the option selected, one of the following cases will be reported: All usages of '==' and '!=' operators. All usages except comparison with null. Some code styles allow using 'x == null' as a replacement for 'x === null || x === undefined'. Only suspicious expressions, such as: '==' or '!=' comparisons with '0', '''', 'null', 'true', 'false', or 'undefined'.",
                  "markdown": "Reports a usage of an equality operator that may cause unexpected type coercions. Suggests replacing `==` and `!=` with type-safe equality operators `===` and `!==`.\n\nDepending on the option selected, one of the following cases will be reported:\n\n* All usages of `==` and `!=` operators.\n* All usages except comparison with null. Some code styles allow using `x == null` as a replacement for `x === null || x === undefined`.\n* Only suspicious expressions, such as: `==` or `!=` comparisons with `0`, `''`, `null`, `true`, `false`, or `undefined`."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EqualityComparisonWithCoercionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CommaExpressionJS",
                "shortDescription": {
                  "text": "Comma expression"
                },
                "fullDescription": {
                  "text": "Reports a comma expression. Such expressions are often a sign of overly clever code, and may lead to subtle bugs. Comma expressions in the initializer or in the update section of 'for' loops are ignored.",
                  "markdown": "Reports a comma expression. Such expressions are often a sign of overly clever code, and may lead to subtle bugs. Comma expressions in the initializer or in the update section of `for` loops are ignored."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CommaExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially undesirable code constructs",
                      "index": 11,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstantOnLHSOfComparisonJS",
                "shortDescription": {
                  "text": "Constant on left side of comparison"
                },
                "fullDescription": {
                  "text": "Reports a comparison operation with a constant value in the left-hand side. According to coding conventions, constants should be in the right-hand side of comparisons.",
                  "markdown": "Reports a comparison operation with a constant value in the left-hand side. According to coding conventions, constants should be in the right-hand side of comparisons."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantOnLefSideOfComparisonJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Code style issues",
                      "index": 10,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSCheckFunctionSignatures",
                "shortDescription": {
                  "text": "Signature mismatch"
                },
                "fullDescription": {
                  "text": "Reports a JavaScript call expression where the arguments do not match the signature of the referenced function, including the types of arguments and their number. Also, reports if the overloading function doesn't match the overloaded one in terms of parameters and return types. TypeScript code is ignored.",
                  "markdown": "Reports a JavaScript call expression where the arguments do not match the signature of the referenced function, including the types of arguments and their number. Also, reports if the overloading function doesn't match the overloaded one in terms of parameters and return types.\n\nTypeScript code is ignored."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSCheckFunctionSignatures",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssignmentResultUsedJS",
                "shortDescription": {
                  "text": "Result of assignment used"
                },
                "fullDescription": {
                  "text": "Reports an assignment expression where the result of the assignment is used in the containing expression. Such assignments often indicate coding errors, for example, '=' instead of '=='. Moreover, they can result in confusion due to the order of operations, as evaluation of the assignment may affect the outer expression in unexpected ways. Expressions in parentheses are ignored.",
                  "markdown": "Reports an assignment expression where the result of the assignment is used in the containing expression. Such assignments often indicate coding errors, for example, `=` instead of `==`. Moreover, they can result in confusion due to the order of operations, as evaluation of the assignment may affect the outer expression in unexpected ways.\n\nExpressions in parentheses are ignored."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentResultUsedJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Assignment issues",
                      "index": 35,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6BindWithArrowFunction",
                "shortDescription": {
                  "text": "Suspicious usage of 'bind' with arrow function"
                },
                "fullDescription": {
                  "text": "Reports 'bind' used together with an arrow function. Because arrow functions use lexical 'this', a 'bind' call will have no effect on them. See here for details.",
                  "markdown": "Reports `bind` used together with an arrow function.  \nBecause arrow functions use lexical `this`, a `bind` call will have no effect on them.  \nSee [here](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions#Lexical_this) for details."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ES6BindWithArrowFunction",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstantOnRHSOfComparisonJS",
                "shortDescription": {
                  "text": "Constant on right side of comparison"
                },
                "fullDescription": {
                  "text": "Reports a comparison operation with a constant in the right-hand side. According to coding conventions, constants should only be in the left-hand side of comparisons.",
                  "markdown": "Reports a comparison operation with a constant in the right-hand side. According to coding conventions, constants should only be in the left-hand side of comparisons."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantOnRightSideOfComparisonJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Code style issues",
                      "index": 10,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSComparisonWithNaN",
                "shortDescription": {
                  "text": "Comparison with NaN"
                },
                "fullDescription": {
                  "text": "Reports a comparison with NaN. Comparisons like 'expr == NaN' or 'expr === NaN' are always evaluated to 'false'.",
                  "markdown": "Reports a comparison with NaN. Comparisons like `expr == NaN` or `expr === NaN` are always evaluated to `false`."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSComparisonWithNaN",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnnecessarySemicolon",
                "shortDescription": {
                  "text": "Unnecessary semicolon"
                },
                "fullDescription": {
                  "text": "Reports an unneeded semicolon.",
                  "markdown": "Reports an unneeded semicolon."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnnecessarySemicolon",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryLabelJS",
                "shortDescription": {
                  "text": "Unnecessary label"
                },
                "fullDescription": {
                  "text": "Reports an unused label.",
                  "markdown": "Reports an unused label."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryLabelJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSBitwiseOperatorUsage",
                "shortDescription": {
                  "text": "Bitwise operator usage"
                },
                "fullDescription": {
                  "text": "Reports a suspicious usage of a bitwise AND (\"'&'\") or OR (\"'|'\") operator. Usually it is a typo and the result of applying boolean operations AND (\"'&&'\") and OR (\"'||'\") is expected.",
                  "markdown": "Reports a suspicious usage of a bitwise AND (\"`&`\") or OR (\"`|`\") operator. Usually it is a typo and the result of applying boolean operations AND (\"`&&`\") and OR (\"`||`\") is expected."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSBitwiseOperatorUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Bitwise operation issues",
                      "index": 18,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptUnresolvedReference",
                "shortDescription": {
                  "text": "Unresolved TypeScript reference"
                },
                "fullDescription": {
                  "text": "Reports an unresolved reference in TypeScript code.",
                  "markdown": "Reports an unresolved reference in TypeScript code."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "TypeScriptUnresolvedReference",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnresolvedReference",
                "shortDescription": {
                  "text": "Unresolved reference"
                },
                "fullDescription": {
                  "text": "Reports an unresolved reference in JavaScript code. In TypeScript code, a problem is reported if the part of the reference before the dot is of the type 'any'.",
                  "markdown": "Reports an unresolved reference in JavaScript code. In TypeScript code, a problem is reported if the part of the reference before the dot is of the type `any`."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSUnresolvedReference",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSNonStrictModeUsed",
                "shortDescription": {
                  "text": "Non-strict mode used"
                },
                "fullDescription": {
                  "text": "Reports a JavaScript file that is not in the 'strict' mode.",
                  "markdown": "Reports a JavaScript file that is not in the `strict` mode."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSNonStrictModeUsed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6RedundantAwait",
                "shortDescription": {
                  "text": "Redundant 'await' expression"
                },
                "fullDescription": {
                  "text": "Reports a redundant usage of 'await', such as 'await await', or awaiting a non-promise result. When the 'Report for promises' option is selected, suggests removing 'await' before promises when applicable (in 'return' statements, and with 'Promise.resolve/reject'). Removing 'await' in such contexts causes two problems. Surrounding your code with 'try-catch' and forgetting to add 'await' will change code semantics while you may fail to notice that. Having an explicit 'await' may prevent the V8 runtime from providing async stack traces.",
                  "markdown": "Reports a redundant usage of `await`, such as `await await`, or awaiting a non-promise result.\n\n\nWhen the 'Report for promises' option is selected, suggests removing `await` before promises when applicable\n(in `return` statements, and with `Promise.resolve/reject`).\n\nRemoving `await` in such contexts causes two problems.\n\n* Surrounding your code with `try-catch` and forgetting to add `await` will change code semantics while you may fail to notice that.\n* Having an explicit `await` may prevent the V8 runtime from providing [async stack traces](http://bit.ly/v8-zero-cost-async-stack-traces)."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6RedundantAwait",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Async code and promises",
                      "index": 47,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedSwitchStatementJS",
                "shortDescription": {
                  "text": "Nested 'switch' statement"
                },
                "fullDescription": {
                  "text": "Reports a 'switch' statement that is nested in another 'switch' statement. Nested 'switch' statements may be very confusing, particularly if indenting is inconsistent.",
                  "markdown": "Reports a `switch` statement that is nested in another `switch` statement. Nested `switch` statements may be very confusing, particularly if indenting is inconsistent."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedSwitchStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Switch statement issues",
                      "index": 45,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnterminatedStatementJS",
                "shortDescription": {
                  "text": "Unterminated statement"
                },
                "fullDescription": {
                  "text": "Reports a statement without a semicolon or a newline at the end. Select the 'Terminate statements with semicolons' option in Editor | Code Style | JavaScript or TypeScript - Punctuation to report any statement that doesn't end with a semicolon, even if a newline is used. According to some coding styles, semicolons are preferred to line-breaks for consistency with the other languages.",
                  "markdown": "Reports a statement without a semicolon or a newline at the end.\n\nSelect the 'Terminate statements with semicolons' option in *Editor \\| Code Style \\| JavaScript or TypeScript - Punctuation* to report any statement that doesn't end with a semicolon, even if a newline is used.\nAccording to some coding styles, semicolons are preferred to line-breaks for consistency with the other languages."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnterminatedStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Code style issues",
                      "index": 10,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IfStatementWithIdenticalBranchesJS",
                "shortDescription": {
                  "text": "'if' statement with identical branches"
                },
                "fullDescription": {
                  "text": "Reports an 'if' statement with identical 'then' and 'else' branches. Such statements are almost certainly an error.",
                  "markdown": "Reports an `if` statement with identical `then` and `else` branches. Such statements are almost certainly an error."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IfStatementWithIdenticalBranchesJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PlatformDetectionJS",
                "shortDescription": {
                  "text": "Inaccurate platform detection"
                },
                "fullDescription": {
                  "text": "Reports a common JavaScript pattern for detecting the browser or operating system in which the script is run. In addition to pointing out non-portable constructs, these platform detection patterns are often incomplete and easily fooled. For most cases, detection of individual environment features is preferable to attempting to detect the entire platform. Patterns detected include: 'document.all' 'document.layers' 'navigator.userAgent' 'navigator.oscpu' 'navigator.appName' 'navigator.appCodeName' 'navigator.platform'",
                  "markdown": "Reports a common JavaScript pattern for detecting the browser or operating system in which the script is run. In addition to pointing out non-portable constructs, these platform detection patterns are often incomplete and easily fooled. For most cases, detection of individual environment features is preferable to attempting to detect the entire platform.\n\nPatterns detected include:\n\n* `document.all`\n* `document.layers`\n* `navigator.userAgent`\n* `navigator.oscpu`\n* `navigator.appName`\n* `navigator.appCodeName`\n* `navigator.platform`"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PlatformDetectionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/DOM issues",
                      "index": 46,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssignmentToFunctionParameterJS",
                "shortDescription": {
                  "text": "Assignment to function parameter"
                },
                "fullDescription": {
                  "text": "Reports an assignment to a function parameter, including increment and decrement operations. Although occasionally intended, this construct can be extremely confusing, and is often a result of an error.",
                  "markdown": "Reports an assignment to a function parameter, including increment and decrement operations. Although occasionally intended, this construct can be extremely confusing, and is often a result of an error."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentToFunctionParameterJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Assignment issues",
                      "index": 35,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSConsecutiveCommasInArrayLiteral",
                "shortDescription": {
                  "text": "Consecutive commas in array literal"
                },
                "fullDescription": {
                  "text": "Reports a consecutive comma in an array literal. The skipped element accepts the 'undefined' value, but it could be done unintentionally, for example, when commas are at the end of one line and at the beginning of the next one.",
                  "markdown": "Reports a consecutive comma in an array literal. The skipped element accepts the `undefined` value, but it could be done unintentionally, for example, when commas are at the end of one line and at the beginning of the next one."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSConsecutiveCommasInArrayLiteral",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FallThroughInSwitchStatementJS",
                "shortDescription": {
                  "text": "Fallthrough in 'switch' statement"
                },
                "fullDescription": {
                  "text": "Reports a 'switch' statement where control can proceed from a branch to the next one. Such \"fall-through\" often indicates an error, for example, a missing 'break' or 'return'.",
                  "markdown": "Reports a `switch` statement where control can proceed from a branch to the next one. Such \"fall-through\" often indicates an error, for example, a missing `break` or `return`."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FallThroughInSwitchStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Switch statement issues",
                      "index": 45,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CallerJS",
                "shortDescription": {
                  "text": "Use of 'caller' property"
                },
                "fullDescription": {
                  "text": "Reports a usage of the 'caller' property in a JavaScript function. Using this property to access the stack frame of the calling method can be extremely confusing and result in subtle bugs.",
                  "markdown": "Reports a usage of the `caller` property in a JavaScript function. Using this property to access the stack frame of the calling method can be extremely confusing and result in subtle bugs."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallerJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially confusing code constructs",
                      "index": 25,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptExplicitMemberType",
                "shortDescription": {
                  "text": "Explicit types"
                },
                "fullDescription": {
                  "text": "Reports a type annotation that doesn't match the current code style for explicit types. Type declarations are not necessary when the type that is inferred from the context exactly matches the type annotation, for example: 'var pi: number = 3.14' In some cases it is preferable to always have explicit types - this prevents accidental type changes and makes code more explicit.",
                  "markdown": "Reports a type annotation that doesn't match the current code style for explicit types.\n\n\nType declarations are not necessary when the type that is inferred from the context exactly matches the type annotation, for example:\n\n\n        var pi: number = 3.14\n\nIn some cases it is preferable to always have explicit types - this prevents accidental type changes and makes code more explicit."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TypeScriptExplicitMemberType",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSDuplicateCaseLabel",
                "shortDescription": {
                  "text": "Duplicate 'case' label"
                },
                "fullDescription": {
                  "text": "Reports a duplicated 'case' label on a 'switch' statement, which normally indicates an error.",
                  "markdown": "Reports a duplicated `case` label on a `switch` statement, which normally indicates an error."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSDuplicateCaseLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Switch statement issues",
                      "index": 45,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnreachableSwitchBranches",
                "shortDescription": {
                  "text": "Unreachable 'case' branch of a 'switch' statement"
                },
                "fullDescription": {
                  "text": "Reports an unreachable 'case' branch of a 'switch' statement. Example: '/**\n * @param {('foo' | 'bar')} p\n */\nfunction foo(p) {\n    switch (p) {\n        case 'foo': break;\n        case 'bar': break;\n        case 'baz': break; // unreachable\n    }\n}'",
                  "markdown": "Reports an unreachable `case` branch of a `switch` statement.\n\nExample:\n\n\n    /**\n     * @param {('foo' | 'bar')} p\n     */\n    function foo(p) {\n        switch (p) {\n            case 'foo': break;\n            case 'bar': break;\n            case 'baz': break; // unreachable\n        }\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnreachableSwitchBranches",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Switch statement issues",
                      "index": 45,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptDuplicateUnionOrIntersectionType",
                "shortDescription": {
                  "text": "Duplicate union or intersection type component"
                },
                "fullDescription": {
                  "text": "Reports a duplicate type inside a union or intersection.",
                  "markdown": "Reports a duplicate type inside a union or intersection."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TypeScriptDuplicateUnionOrIntersectionType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/TypeScript",
                      "index": 23,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TrivialConditionalJS",
                "shortDescription": {
                  "text": "Redundant conditional expression"
                },
                "fullDescription": {
                  "text": "Reports a conditional expression of the form 'condition ? true : false\ncondition ? false : true' These expressions may be safely converted to 'condition\n!condition'",
                  "markdown": "Reports a conditional expression of the form\n\n\n    condition ? true : false\n    condition ? false : true\n\n\nThese expressions may be safely converted to\n\n\n    condition\n    !condition\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantConditionalExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6UnusedImports",
                "shortDescription": {
                  "text": "Unused import"
                },
                "fullDescription": {
                  "text": "Reports a redundant 'import' statement. This is usually the case if the imported symbols are not used in the source file. To avoid side-effects, consider using bare import 'import 'packageName'' instead of the regular one.",
                  "markdown": "Reports a redundant `import` statement. This is usually the case if the imported symbols are not used in the source file. To avoid side-effects, consider using bare import `import 'packageName'` instead of the regular one."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ES6UnusedImports",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Imports and dependencies",
                      "index": 41,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InnerHTMLJS",
                "shortDescription": {
                  "text": "Use of 'innerHTML' property"
                },
                "fullDescription": {
                  "text": "Reports a JavaScript access to DOM nodes as text using the 'innerHTML' property. Most usages of 'innerHTML' are performed better with explicit DOM calls, such as 'getElementByID()' and 'createElement()'. Additionally, 'innerHTML' will not work with XML DOMs, including DOMs for XHTML if viewed as XML. This can lead to difficulties in diagnosing bugs.",
                  "markdown": "Reports a JavaScript access to DOM nodes as text using the `innerHTML` property. Most usages of `innerHTML` are performed better with explicit DOM calls, such as `getElementByID()` and `createElement()`. Additionally, `innerHTML` will not work with XML DOMs, including DOMs for XHTML if viewed as XML. This can lead to difficulties in diagnosing bugs."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InnerHTMLJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/DOM issues",
                      "index": 46,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSMissingSwitchBranches",
                "shortDescription": {
                  "text": "'switch' statement has missing branches"
                },
                "fullDescription": {
                  "text": "Reports a 'switch' statement on a variable of the type 'enum' or 'union' when the statement doesn't cover some value options from the type.",
                  "markdown": "Reports a `switch` statement on a variable of the type `enum` or `union` when the statement doesn't cover some value options from the type."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSMissingSwitchBranches",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Switch statement issues",
                      "index": 45,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSSwitchVariableDeclarationIssue",
                "shortDescription": {
                  "text": "Variable is declared and being used in different 'case' clauses"
                },
                "fullDescription": {
                  "text": "Reports a variable that is declared in one 'case' clause of a 'switch' statement but is used in another 'case' clause of the same statement. For block-scoped variables, this results in throwing a 'ReferenceError'. For 'var' variables, it indicates a potential error. Disable the inspection for 'var' variables if this pattern is used intentionally.",
                  "markdown": "Reports a variable that is declared in one `case` clause of a `switch` statement but is used in another `case` clause of the same statement. For block-scoped variables, this results in throwing a `ReferenceError`. For `var` variables, it indicates a potential error.\n\nDisable the inspection for `var` variables if this pattern is used intentionally."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSSwitchVariableDeclarationIssue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Switch statement issues",
                      "index": 45,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VoidExpressionJS",
                "shortDescription": {
                  "text": "'void' expression"
                },
                "fullDescription": {
                  "text": "Reports a 'void' expression.",
                  "markdown": "Reports a `void` expression."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VoidExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially undesirable code constructs",
                      "index": 11,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSJQueryEfficiency",
                "shortDescription": {
                  "text": "JQuery selector can be optimized"
                },
                "fullDescription": {
                  "text": "Reports a duplicated jQuery selector that can be cached or a usage of an attribute or a pseudo-selector (optional).",
                  "markdown": "Reports a duplicated jQuery selector that can be cached or a usage of an attribute or a pseudo-selector (optional)."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSJQueryEfficiency",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSAssignmentUsedAsCondition",
                "shortDescription": {
                  "text": "Assignment used as condition"
                },
                "fullDescription": {
                  "text": "Reports an assignment that is used as the condition of an 'if', 'while', 'for', or 'do' statement. Although occasionally intended, this usage is confusing, and often indicates a typo (for example, '=' instead of '==').",
                  "markdown": "Reports an assignment that is used as the condition of an `if`, `while`, `for`, or `do` statement. Although occasionally intended, this usage is confusing, and often indicates a typo (for example, `=` instead of `==`)."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSAssignmentUsedAsCondition",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Assignment issues",
                      "index": 35,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnreachableCodeJS",
                "shortDescription": {
                  "text": "Unreachable code"
                },
                "fullDescription": {
                  "text": "Reports code that can never be executed, which almost certainly indicates an error",
                  "markdown": "Reports code that can never be executed, which almost certainly indicates an error"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnreachableCodeJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ForLoopReplaceableByWhileJS",
                "shortDescription": {
                  "text": "'for' loop may be replaced by 'while' loop"
                },
                "fullDescription": {
                  "text": "Reports a 'for' loop that contains neither initialization nor an update component. Suggests replacing the loop with a simpler 'while' statement. Example: 'for(; exitCondition(); ) {\n    process();\n  }' After the quick-fix is applied the result looks like: 'while(exitCondition()) {\n    process();\n  }' Use the checkbox below if you wish this inspection to ignore for loops with trivial or non-existent conditions.",
                  "markdown": "Reports a `for` loop that contains neither initialization nor an update component. Suggests replacing the loop with a simpler `while` statement.\n\nExample:\n\n\n      for(; exitCondition(); ) {\n        process();\n      }\n\nAfter the quick-fix is applied the result looks like:\n\n\n      while(exitCondition()) {\n        process();\n      }\n\nUse the checkbox below if you wish this inspection to ignore **for** loops with trivial or non-existent conditions."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ForLoopReplaceableByWhile",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Control flow issues",
                      "index": 2,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSSuspiciousEqPlus",
                "shortDescription": {
                  "text": "Suspicious '=+' assignment"
                },
                "fullDescription": {
                  "text": "Reports an assignment in the form 'a =+ b'. Suggests replacing with 'a += b'.",
                  "markdown": "Reports an assignment in the form `a =+ b`. Suggests replacing with `a += b`."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSSuspiciousEqPlus",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyStatementBodyJS",
                "shortDescription": {
                  "text": "Statement with empty body"
                },
                "fullDescription": {
                  "text": "Reports an 'if', 'while', 'for', or 'with' statement with an empty body. Such statements often result from typos, and may cause confusion. Use the checkbox below to specify whether the statements with empty block statements as bodies should be reported.",
                  "markdown": "Reports an `if`, `while`, `for`, or `with` statement with an empty body. Such statements often result from typos, and may cause confusion.\n\n\nUse the checkbox below to specify whether the statements with empty block statements as bodies\nshould be reported."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StatementWithEmptyBodyJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Potentially confusing code constructs",
                      "index": 25,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSVoidFunctionReturnValueUsed",
                "shortDescription": {
                  "text": "Void function return value used"
                },
                "fullDescription": {
                  "text": "Reports a return value of a function that doesn't return anything. Calling of such functions always produces an 'undefined' value and such assignment may indicate an error. Example: 'let a = console.log('foo');' The following usages are ignored: Inside a return statement In some binary operations For overridden non-void functions",
                  "markdown": "Reports a return value of a function that doesn't return anything. Calling of such functions always produces an `undefined` value and such assignment may indicate an error.\n\nExample:\n\n\n    let a = console.log('foo');\n\nThe following usages are ignored:\n\n* Inside a return statement\n* In some binary operations\n* For overridden non-void functions"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSVoidFunctionReturnValueUsed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Probable bugs",
                      "index": 13,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReturnFromFinallyBlockJS",
                "shortDescription": {
                  "text": "'return' inside 'finally' block"
                },
                "fullDescription": {
                  "text": "Reports a 'return' statement inside a 'finally' block. Such 'return' statements may mask exceptions thrown, and complicate debugging.",
                  "markdown": "Reports a `return` statement inside a `finally` block. Such `return` statements may mask exceptions thrown, and complicate debugging."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReturnInsideFinallyBlockJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Try statement issues",
                      "index": 29,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnusedLocalSymbols",
                "shortDescription": {
                  "text": "Unused local symbol"
                },
                "fullDescription": {
                  "text": "Reports an unused locally accessible parameter, local variable, function, class, or private member declaration.",
                  "markdown": "Reports an unused locally accessible parameter, local variable, function, class, or private member declaration."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnusedLocalSymbols",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Unused symbols",
                      "index": 16,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSValidateTypes",
                "shortDescription": {
                  "text": "Type mismatch"
                },
                "fullDescription": {
                  "text": "Reports incorrect type of: a parameter in a function call a return value an assigned expression TypeScript code is ignored.",
                  "markdown": "Reports incorrect type of:\n\n* a parameter in a function call\n* a return value\n* an assigned expression\n\nTypeScript code is ignored."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSValidateTypes",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "AngularJS",
            "version": "233.14246",
            "rules": [
              {
                "id": "AngularNgOptimizedImage",
                "shortDescription": {
                  "text": "Issues with ngSrc usage in img tags"
                },
                "fullDescription": {
                  "text": "Reports issues related to usage of 'ngSrc' (NgOptimizedDirective) on 'img' tags. Following issues are reported: 'img' tags, which use 'src' instead of 'ngSrc' lack of 'width' and 'height', or 'fill' attributes when 'ngSrc' is used 'width' or 'height', and 'fill' attributes being present on the same element when 'ngSrc' is used",
                  "markdown": "Reports issues related to usage of `ngSrc` ([NgOptimizedDirective](https://angular.io/guide/image-directive)) on `img` tags.\n\n\nFollowing issues are reported:\n\n* `img` tags, which use `src` instead of `ngSrc`\n* lack of `width` and `height`, or `fill` attributes when `ngSrc` is used\n* `width` or `height`, and `fill` attributes being present on the same element when `ngSrc` is used"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "AngularNgOptimizedImage",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularIncorrectBlockUsage",
                "shortDescription": {
                  "text": "Incorrect usage of Angular block"
                },
                "fullDescription": {
                  "text": "Reports problems with Angular blocks.",
                  "markdown": "Reports problems with Angular blocks."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularIncorrectBlockUsage",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularInvalidTemplateReferenceVariable",
                "shortDescription": {
                  "text": "Unbound or ambiguous template reference variable"
                },
                "fullDescription": {
                  "text": "Reports a template reference variable that is not assigned to a directive when using 'exportAs' or is assigned to multiple directives.",
                  "markdown": "Reports a template reference variable that is not assigned to a directive when using `exportAs` or is assigned to multiple directives."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularInvalidTemplateReferenceVariable",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularMultipleStructuralDirectives",
                "shortDescription": {
                  "text": "Multiple structural directives on one element"
                },
                "fullDescription": {
                  "text": "Reports multiple structural directives ('*ngIf', '*ngFor', etc.) on one element.",
                  "markdown": "Reports multiple structural directives (`*ngIf`, `*ngFor`, etc.) on one element."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularMultipleStructuralDirectives",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularCliAddDependency",
                "shortDescription": {
                  "text": "Angular CLI add dependency"
                },
                "fullDescription": {
                  "text": "Suggests using the 'ng add' command to install the dependency. 'ng add' will use the package manager to download it and invoke a schematic which can update your project with configuration changes, add additional dependencies (e.g. polyfills), or scaffold package-specific initialization code.",
                  "markdown": "Suggests using the `ng add` command to install the dependency.\n\n`ng add` will use the package manager to download it and invoke a schematic\nwhich can update your project with configuration changes, add additional dependencies (e.g. polyfills),\nor scaffold package-specific initialization code."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AngularCliAddDependency",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularDeferBlockOnTrigger",
                "shortDescription": {
                  "text": "Problems with @defer `on` triggers"
                },
                "fullDescription": {
                  "text": "Reports issues with triggers in `on` parameters in `@defer` block.",
                  "markdown": "Reports issues with triggers in \\`on\\` parameters in \\`@defer\\` block."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularDeferBlockOnTrigger",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularInaccessibleSymbol",
                "shortDescription": {
                  "text": "Inaccessible component member or directive input"
                },
                "fullDescription": {
                  "text": "Reports access to invisible (private or protected) component member or directive input from an Angular template.",
                  "markdown": "Reports access to invisible (private or protected) component member or directive input from an Angular template."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularInaccessibleSymbol",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularMissingEventHandler",
                "shortDescription": {
                  "text": "Missing event handler"
                },
                "fullDescription": {
                  "text": "Reports a missing event handler statement for an event binding.",
                  "markdown": "Reports a missing event handler statement for an event binding."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularMissingEventHandler",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularUndefinedTag",
                "shortDescription": {
                  "text": "Undefined tag"
                },
                "fullDescription": {
                  "text": "Reports a tag defined by a component or directive out of the current scope.",
                  "markdown": "Reports a tag defined by a component or directive out of the current scope."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularUndefinedTag",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularUndefinedBinding",
                "shortDescription": {
                  "text": "Undefined binding"
                },
                "fullDescription": {
                  "text": "Reports an undefined property, event, or structural directive bindings on elements.",
                  "markdown": "Reports an undefined property, event, or structural directive bindings on elements."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularUndefinedBinding",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularInvalidImportedOrDeclaredSymbol",
                "shortDescription": {
                  "text": "Invalid imported or declared symbol"
                },
                "fullDescription": {
                  "text": "Reports any symbol that is declared, imported or exported by an Angular module or standalone component that is not a module, component, directive, or pipe or can’t be used in the context of the property.",
                  "markdown": "Reports any symbol that is declared, imported or exported by an Angular module or standalone component that is not a module, component, directive, or pipe or can't be used in the context of the property."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularInvalidImportedOrDeclaredSymbol",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularAmbiguousComponentTag",
                "shortDescription": {
                  "text": "Ambiguous component tag"
                },
                "fullDescription": {
                  "text": "Reports a component that is matched on an embedded template element '<ng-template>' or multiple components matched on any other element.",
                  "markdown": "Reports a component that is matched on an embedded template element `<ng-template>` or multiple components matched on any other element."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularAmbiguousComponentTag",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularUndefinedModuleExport",
                "shortDescription": {
                  "text": "Undefined export from Angular module"
                },
                "fullDescription": {
                  "text": "Reports an export of an undeclared or unimported component, directive, or pipes from an Angular module.",
                  "markdown": "Reports an export of an undeclared or unimported component, directive, or pipes from an Angular module."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularUndefinedModuleExport",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularInvalidI18nAttribute",
                "shortDescription": {
                  "text": "Invalid i18n attribute"
                },
                "fullDescription": {
                  "text": "Reports a problem with a 'i18n-*' attribute.",
                  "markdown": "Reports a problem with a `i18n-*` attribute."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AngularInvalidI18nAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularForBlockNonIterableVar",
                "shortDescription": {
                  "text": "Non-iterable type in @for block"
                },
                "fullDescription": {
                  "text": "Reports that the type of variable to iterate over does not have '[Symbol.iterator]()' method, which returns an iterator.",
                  "markdown": "Reports that the type of variable to iterate over does not have `[Symbol.iterator]()` method, which returns an iterator."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularForBlockNonIterableVar",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularIncorrectTemplateDefinition",
                "shortDescription": {
                  "text": "Incorrect component template definition"
                },
                "fullDescription": {
                  "text": "Reports a component that doesn’t have an associated template or uses both 'template' and 'templateUrl' properties.",
                  "markdown": "Reports a component that doesn't have an associated template or uses both `template` and `templateUrl` properties."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularIncorrectTemplateDefinition",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularNonStandaloneComponentImports",
                "shortDescription": {
                  "text": "Invalid usage of imports in non-standalone components"
                },
                "fullDescription": {
                  "text": "Reports usages of imports property in non-standalone component decorators. Imports can be used only in standalone components.",
                  "markdown": "Reports usages of imports property in non-standalone component decorators. Imports can be used only in standalone components."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularNonStandaloneComponentImports",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularMissingOrInvalidDeclarationInModule",
                "shortDescription": {
                  "text": "Missing or invalid component, directive or pipe declaration in a module"
                },
                "fullDescription": {
                  "text": "Reports a non-standalone Angular component, directive, or pipe that is not declared in any module or is declared in multiple modules.",
                  "markdown": "Reports a non-standalone Angular component, directive, or pipe that is not declared in any module or is declared in multiple modules."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularMissingOrInvalidDeclarationInModule",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularInvalidAnimationTriggerAssignment",
                "shortDescription": {
                  "text": "Invalid animation trigger assignment"
                },
                "fullDescription": {
                  "text": "Reports an invalid assignment of an animation trigger. To attach an animation to an element, use '[@triggerName]=\"expression\"' or an attribute without a value '@triggerName'.",
                  "markdown": "Reports an invalid assignment of an animation trigger. To attach an animation to an element, use `[@triggerName]=\"expression\"` or an attribute without a value `@triggerName`."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularInvalidAnimationTriggerAssignment",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularInvalidEntryComponent",
                "shortDescription": {
                  "text": "Invalid entry component"
                },
                "fullDescription": {
                  "text": "Reports an invalid Angular component specified in the module’s 'bootstrap' or 'entryComponents' property.",
                  "markdown": "Reports an invalid Angular component specified in the module's `bootstrap` or `entryComponents` property."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularInvalidEntryComponent",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularRecursiveModuleImportExport",
                "shortDescription": {
                  "text": "Recursive import or export of an Angular module or a standalone component"
                },
                "fullDescription": {
                  "text": "Reports a cyclic dependency between Angular modules or standalone components.",
                  "markdown": "Reports a cyclic dependency between Angular modules or standalone components."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularRecursiveModuleImportExport",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularInvalidSelector",
                "shortDescription": {
                  "text": "Missing or invalid selector"
                },
                "fullDescription": {
                  "text": "Reports an invalid 'selector' property of a component or directive.",
                  "markdown": "Reports an invalid `selector` property of a component or directive."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularInvalidSelector",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularBindingTypeMismatch",
                "shortDescription": {
                  "text": "Invalid binding type"
                },
                "fullDescription": {
                  "text": "Reports a mismatch between actual and expected directive binding type.",
                  "markdown": "Reports a mismatch between actual and expected directive binding type."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularBindingTypeMismatch",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularNonEmptyNgContent",
                "shortDescription": {
                  "text": "Content inside <ng-content> tag"
                },
                "fullDescription": {
                  "text": "Reports a text or tag occurrence inside a '<ng-content>' tag used for content projection.",
                  "markdown": "Reports a text or tag occurrence inside a `<ng-content>` tag used for content projection."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularNonEmptyNgContent",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularMissingRequiredDirectiveInputBinding",
                "shortDescription": {
                  "text": "Missing required directive input"
                },
                "fullDescription": {
                  "text": "Reports a missing binding for a required directive input.",
                  "markdown": "Reports a missing binding for a required directive input."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AngularMissingRequiredDirectiveInputBinding",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AngularInsecureBindingToEvent",
                "shortDescription": {
                  "text": "Insecure binding to event"
                },
                "fullDescription": {
                  "text": "Reports a binding to an event property or attribute, for example, '[onclick]' or '[attr.onclick]' instead of '(click)'.",
                  "markdown": "Reports a binding to an event property or attribute, for example, `[onclick]` or `[attr.onclick]` instead of `(click)`."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AngularInsecureBindingToEvent",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Angular",
                      "index": 3,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.intellij.plugins.postcss",
            "version": "233.14246",
            "rules": [
              {
                "id": "PostCssCustomSelector",
                "shortDescription": {
                  "text": "Invalid custom selector"
                },
                "fullDescription": {
                  "text": "Reports a syntax error in PostCSS Custom Selector. Example: '@custom-selector :--heading h1, h2, h3;'",
                  "markdown": "Reports a syntax error in [PostCSS Custom Selector](https://github.com/postcss/postcss-custom-selectors).\n\nExample:\n\n\n    @custom-selector :--heading h1, h2, h3;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "PostCssCustomSelector",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "PostCSS",
                      "index": 4,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PostCssUnresolvedModuleValueReference",
                "shortDescription": {
                  "text": "Unresolved CSS module value"
                },
                "fullDescription": {
                  "text": "Reports an unresolved reference to a CSS Module Value ('@value' declaration). Example: '@value foo from unknown;'",
                  "markdown": "Reports an unresolved reference to a [CSS Module Value](https://github.com/css-modules/postcss-modules-values) (`@value` declaration).\n\nExample:\n\n\n    @value foo from unknown;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "PostCssUnresolvedModuleValueReference",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "PostCSS",
                      "index": 4,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PostCssNesting",
                "shortDescription": {
                  "text": "Invalid nested rule"
                },
                "fullDescription": {
                  "text": "Reports a nested style rule whose syntax doesn't comply with the PostCSS Nested or the PostCSS Nesting specification. Example: '.phone {\n  &_title {}\n}'",
                  "markdown": "Reports a nested style rule whose syntax doesn't comply with the [PostCSS Nested](https://github.com/postcss/postcss-nested) or the [PostCSS Nesting](https://github.com/csstools/postcss-nesting) specification.\n\nExample:\n\n\n    .phone {\n      &_title {}\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PostCssNesting",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "PostCSS",
                      "index": 4,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PostCssCustomMedia",
                "shortDescription": {
                  "text": "Invalid custom media"
                },
                "fullDescription": {
                  "text": "Reports a syntax error in a PostCSS Custom Media query. Example: '@custom-media --small-viewport (max-width: 30em);'",
                  "markdown": "Reports a syntax error in a [PostCSS Custom Media](https://github.com/postcss/postcss-custom-media) query.\n\nExample:\n\n\n    @custom-media --small-viewport (max-width: 30em);\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "PostCssCustomMedia",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "PostCSS",
                      "index": 4,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PostCssMediaRange",
                "shortDescription": {
                  "text": "Invalid media query range"
                },
                "fullDescription": {
                  "text": "Checks range context syntax, which may alternatively be used for media features with a 'range' type. Example: '@media screen and (500px <= width <= 1200px) {}'",
                  "markdown": "Checks [range context](https://github.com/postcss/postcss-media-minmax) syntax, which may alternatively be used for media features with a 'range' type.\n\nExample:\n\n\n    @media screen and (500px <= width <= 1200px) {}\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "PostCssMediaRange",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "PostCSS",
                      "index": 4,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.plugins.sass",
            "version": "233.14246",
            "rules": [
              {
                "id": "SassScssUnresolvedMixin",
                "shortDescription": {
                  "text": "Unresolved mixin"
                },
                "fullDescription": {
                  "text": "Reports an unresolved Sass/SCSS mixin reference. Example: '* {\n  @include unknown-mixin;\n}'",
                  "markdown": "Reports an unresolved [Sass/SCSS mixin](https://sass-lang.com/documentation/at-rules/mixin) reference.\n\n**Example:**\n\n\n    * {\n      @include unknown-mixin;\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SassScssUnresolvedMixin",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Sass_SCSS",
                      "index": 5,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SassScssResolvedByNameOnly",
                "shortDescription": {
                  "text": "Missing import"
                },
                "fullDescription": {
                  "text": "Reports a reference to a variable, mixin, or function that is declared in another file but this file isn't explicitly imported in the current file. Example: '* {\n  margin: $var-in-other-file;\n}'",
                  "markdown": "Reports a reference to a variable, mixin, or function that is declared in another file but this file isn't explicitly [imported](https://sass-lang.com/documentation/at-rules/import) in the current file.\n\n**Example:**\n\n\n    * {\n      margin: $var-in-other-file;\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SassScssResolvedByNameOnly",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Sass_SCSS",
                      "index": 5,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SassScssUnresolvedPlaceholderSelector",
                "shortDescription": {
                  "text": "Unresolved placeholder selector"
                },
                "fullDescription": {
                  "text": "Reports an unresolved Sass/SCSS placeholder selector reference. Example: '* {\n  @extend %unknown-placeholder-selector;\n}'",
                  "markdown": "Reports an unresolved [Sass/SCSS placeholder selector](https://sass-lang.com/documentation/variables) reference.\n\n**Example:**\n\n\n    * {\n      @extend %unknown-placeholder-selector;\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SassScssUnresolvedPlaceholderSelector",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Sass_SCSS",
                      "index": 5,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SassScssUnresolvedVariable",
                "shortDescription": {
                  "text": "Unresolved variable"
                },
                "fullDescription": {
                  "text": "Reports an unresolved Sass/SCSS variable reference. Example: '* {\n  margin: $unknown-var;\n}'",
                  "markdown": "Reports an unresolved [Sass/SCSS variable](https://sass-lang.com/documentation/variables) reference.\n\n**Example:**\n\n\n    * {\n      margin: $unknown-var;\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SassScssUnresolvedVariable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Sass_SCSS",
                      "index": 5,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.jetbrains.sh",
            "version": "233.14246",
            "rules": [
              {
                "id": "ShellCheck",
                "shortDescription": {
                  "text": "ShellCheck"
                },
                "fullDescription": {
                  "text": "Reports shell script bugs detected by the integrated ShellCheck static analysis tool.",
                  "markdown": "Reports shell script bugs detected by the integrated [ShellCheck](https://github.com/koalaman/shellcheck) static analysis tool."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ShellCheck",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Shell script",
                      "index": 6,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "Karma",
            "version": "233.14246",
            "rules": [
              {
                "id": "KarmaConfigFile",
                "shortDescription": {
                  "text": "Invalid Karma configuration file"
                },
                "fullDescription": {
                  "text": "Reports a potential error in a file path ('basePath', 'files') for a Karma configuration file, for example, 'karma.conf.js'.",
                  "markdown": "Reports a potential error in a file path ('basePath', 'files') for a Karma configuration file, for example, `karma.conf.js`."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "KarmaConfigFile",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Unit testing",
                      "index": 7,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.intellij",
            "version": "233.14246.173",
            "rules": [
              {
                "id": "JsonSchemaDeprecation",
                "shortDescription": {
                  "text": "Deprecated JSON property"
                },
                "fullDescription": {
                  "text": "Reports a deprecated property in a JSON file. Note that deprecation mechanism is not defined in the JSON Schema specification yet, and this inspection uses a non-standard extension 'deprecationMessage'.",
                  "markdown": "Reports a deprecated property in a JSON file.  \nNote that deprecation mechanism is not defined in the JSON Schema specification yet, and this inspection uses a non-standard extension 'deprecationMessage'."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JsonSchemaDeprecation",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON and JSON5",
                      "index": 8,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JsonSchemaRefReference",
                "shortDescription": {
                  "text": "Unresolved '$ref' and '$schema' references"
                },
                "fullDescription": {
                  "text": "Reports an unresolved '$ref' or '$schema' path in a JSON schema.",
                  "markdown": "Reports an unresolved `$ref` or `$schema` path in a JSON schema.  "
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JsonSchemaRefReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON and JSON5",
                      "index": 8,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlUnknownBooleanAttribute",
                "shortDescription": {
                  "text": "Incorrect boolean attribute"
                },
                "fullDescription": {
                  "text": "Reports an HTML non-boolean attribute without a value. Suggests configuring attributes that should not be reported.",
                  "markdown": "Reports an HTML non-boolean attribute without a value. Suggests configuring attributes that should not be reported."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlUnknownBooleanAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DuplicatedCode",
                "shortDescription": {
                  "text": "Duplicated code fragment"
                },
                "fullDescription": {
                  "text": "Reports duplicated blocks of code from the selected scope: the same file or the entire project. The inspection features quick-fixes that help you to set the size of detected duplicates, navigate to repetitive code fragments, and compare them in a tool window. The inspection options allow you to select the scope of the reported duplicated fragments and set the initial size for the duplicated language constructs.",
                  "markdown": "Reports duplicated blocks of code from the selected scope: the same file or the entire project.\n\nThe inspection features quick-fixes that help you to set the size of detected duplicates, navigate to repetitive code fragments, and compare them in a tool window.\n\nThe inspection options allow you to select the scope of the reported duplicated fragments and set the initial size for the duplicated language constructs."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "DuplicatedCode",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 20,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InconsistentLineSeparators",
                "shortDescription": {
                  "text": "Inconsistent line separators"
                },
                "fullDescription": {
                  "text": "Reports files with line separators different from the ones that are specified in the project's settings. For example, the inspection will be triggered if you set the line separator to '\\n' in Settings | Editor | Code Style | Line separator, while the file you are editing uses '\\r\\n' as a line separator. The inspection also warns you about mixed line separators within a file.",
                  "markdown": "Reports files with line separators different from the ones that are specified in the project's settings.\n\nFor example, the inspection will be triggered if you set the line separator to `\\n` in\n[Settings \\| Editor \\| Code Style \\| Line separator](settings://preferences.sourceCode?Line%20separator),\nwhile the file you are editing uses `\\r\\n` as a line separator.\n\nThe inspection also warns you about mixed line separators within a file."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InconsistentLineSeparators",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 20,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantSuppression",
                "shortDescription": {
                  "text": "Redundant suppression"
                },
                "fullDescription": {
                  "text": "Reports usages of the following elements that can be safely removed because the inspection they affect is no longer applicable in this context: '@SuppressWarning' annotation, or '// noinspection' line comment, or '/** noinspection */' JavaDoc comment Example: 'public class C {\n // symbol is already private,\n // but annotation is still around\n  @SuppressWarnings({\"WeakerAccess\"})\n  private boolean CONST = true;\n  void f() {\n    CONST = false;\n  }\n}'",
                  "markdown": "Reports usages of the following elements that can be safely removed because the inspection they affect is no longer applicable in this context:\n\n* `@SuppressWarning` annotation, or\n* `// noinspection` line comment, or\n* `/** noinspection */` JavaDoc comment\n\nExample:\n\n\n    public class C {\n     // symbol is already private,\n     // but annotation is still around\n      @SuppressWarnings({\"WeakerAccess\"})\n      private boolean CONST = true;\n      void f() {\n        CONST = false;\n      }\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantSuppression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 20,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ProblematicWhitespace",
                "shortDescription": {
                  "text": "Problematic whitespace"
                },
                "fullDescription": {
                  "text": "Reports the following problems: Tabs used for indentation when the code style is configured to use only spaces. Spaces used for indentation when the code style is configured to use only tabs. Spaces used for indentation and tabs used for alignment when the code style is configured to use smart tabs.",
                  "markdown": "Reports the following problems:\n\n* Tabs used for indentation when the code style is configured to use only spaces.\n* Spaces used for indentation when the code style is configured to use only tabs.\n* Spaces used for indentation and tabs used for alignment when the code style is configured to use smart tabs."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ProblematicWhitespace",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 20,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlUnknownTarget",
                "shortDescription": {
                  "text": "Unresolved file in a link"
                },
                "fullDescription": {
                  "text": "Reports an unresolved file in a link.",
                  "markdown": "Reports an unresolved file in a link."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlUnknownTarget",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SSBasedInspection",
                "shortDescription": {
                  "text": "Structural search inspection"
                },
                "fullDescription": {
                  "text": "Allows configuring Structural Search/Structural Replace templates that you can apply to the file you are editing. All matches will be highlighted and marked with the template name that you have configured. If you configure the Structural Replace pattern as well, the corresponding replace option will be available as a quick-fix.",
                  "markdown": "Allows configuring **Structural Search/Structural Replace** templates that you can apply to the file you are editing.\n\nAll matches will be highlighted and marked with the template name that you have configured.\nIf you configure the **Structural Replace** pattern as well, the corresponding replace option will be available as a quick-fix."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SSBasedInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Structural search",
                      "index": 31,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LongLine",
                "shortDescription": {
                  "text": "Line is longer than allowed by code style"
                },
                "fullDescription": {
                  "text": "Reports lines that are longer than the Hard wrap at parameter specified in Settings | Editor | Code Style | General.",
                  "markdown": "Reports lines that are longer than the **Hard wrap at** parameter specified in [Settings \\| Editor \\| Code Style \\| General](settings://preferences.sourceCode?Hard%20wrap%20at)."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LongLine",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 20,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlWrongRootElement",
                "shortDescription": {
                  "text": "Wrong root element"
                },
                "fullDescription": {
                  "text": "Reports a root tag name different from the name specified in the '<doctype>' tag.",
                  "markdown": "Reports a root tag name different from the name specified in the `<doctype>` tag."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlWrongRootElement",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 34,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckValidXmlInScriptTagBody",
                "shortDescription": {
                  "text": "Malformed content of 'script' tag"
                },
                "fullDescription": {
                  "text": "Reports contents of 'script' tags that are invalid XML. Example: '<script type=\"text/javascript\">\n    console.log('<');\n  </script>' After the quick-fix is applied: '<script type=\"text/javascript\">\n    console.log('&lt;');\n  </script>'",
                  "markdown": "Reports contents of `script` tags that are invalid XML.  \n\n**Example:**\n\n\n      <script type=\"text/javascript\">\n        console.log('<');\n      </script>\n\nAfter the quick-fix is applied:\n\n\n      <script type=\"text/javascript\">\n        console.log('&lt;');\n      </script>\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CheckValidXmlInScriptTagBody",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpSuspiciousBackref",
                "shortDescription": {
                  "text": "Suspicious back reference"
                },
                "fullDescription": {
                  "text": "Reports back references that will not be resolvable at runtime. This means that the back reference can never match anything. A back reference will not be resolvable when the group is defined after the back reference, or if the group is defined in a different branch of an alternation. Example of a group defined after its back reference: '\\1(abc)' Example of a group and a back reference in different branches: 'a(b)c|(xy)\\1z' New in 2022.1",
                  "markdown": "Reports back references that will not be resolvable at runtime. This means that the back reference can never match anything. A back reference will not be resolvable when the group is defined after the back reference, or if the group is defined in a different branch of an alternation.\n\n**Example of a group defined after its back reference:**\n\n\n      \\1(abc)\n\n**Example of a group and a back reference in different branches:**\n\n\n      a(b)c|(xy)\\1z\n\nNew in 2022.1"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpSuspiciousBackref",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpSingleCharAlternation",
                "shortDescription": {
                  "text": "Single character alternation"
                },
                "fullDescription": {
                  "text": "Reports single char alternation in a RegExp. It is simpler to use a character class instead. This may also provide better matching performance. Example: 'a|b|c|d' After the quick-fix is applied: '[abcd]' New in 2017.1",
                  "markdown": "Reports single char alternation in a RegExp. It is simpler to use a character class instead. This may also provide better matching performance.\n\n**Example:**\n\n\n      a|b|c|d\n\nAfter the quick-fix is applied:\n\n\n      [abcd]\n\n\nNew in 2017.1"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpSingleCharAlternation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlUnknownAttribute",
                "shortDescription": {
                  "text": "Unknown attribute"
                },
                "fullDescription": {
                  "text": "Reports an unknown HTML attribute. Suggests configuring attributes that should not be reported.",
                  "markdown": "Reports an unknown HTML attribute. Suggests configuring attributes that should not be reported."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlUnknownAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckTagEmptyBody",
                "shortDescription": {
                  "text": "Empty element content"
                },
                "fullDescription": {
                  "text": "Reports XML elements without contents. Example: '<user>\n    <name></name>\n  </user>' After the quick-fix is applied: '<user>\n    <name/>\n  </user>'",
                  "markdown": "Reports XML elements without contents.\n\n**Example:**\n\n\n      <user>\n        <name></name>\n      </user>\n\nAfter the quick-fix is applied:\n\n\n      <user>\n        <name/>\n      </user>\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CheckTagEmptyBody",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 34,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpRedundantEscape",
                "shortDescription": {
                  "text": "Redundant character escape"
                },
                "fullDescription": {
                  "text": "Reports redundant character escape sequences that can be replaced with unescaped characters preserving the meaning. Many escape sequences that are necessary outside of a character class are redundant inside square brackets '[]' of a character class. Although unescaped opening curly braces '{' outside of character classes are allowed in some dialects (JavaScript, Python, and so on), it can cause confusion and make the pattern less portable, because there are dialects that require escaping curly braces as characters. For this reason the inspection does not report escaped opening curly braces. Example: '\\-\\;[\\.]' After the quick-fix is applied: '-;[.]' The Ignore escaped closing brackets '}' and ']' option specifies whether to report '\\}' and '\\]' outside of a character class when they are allowed to be unescaped by the RegExp dialect. New in 2017.3",
                  "markdown": "Reports redundant character escape sequences that can be replaced with unescaped characters preserving the meaning. Many escape sequences that are necessary outside of a character class are redundant inside square brackets `[]` of a character class.\n\n\nAlthough unescaped opening curly braces `{` outside of character classes are allowed in some dialects (JavaScript, Python, and so on),\nit can cause confusion and make the pattern less portable, because there are dialects that require escaping curly braces as characters.\nFor this reason the inspection does not report escaped opening curly braces.\n\n**Example:**\n\n\n      \\-\\;[\\.]\n\nAfter the quick-fix is applied:\n\n\n      -;[.]\n\n\nThe **Ignore escaped closing brackets '}' and '\\]'** option specifies whether to report `\\}` and `\\]` outside of a character class\nwhen they are allowed to be unescaped by the RegExp dialect.\n\nNew in 2017.3"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpRedundantEscape",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnresolvedReference",
                "shortDescription": {
                  "text": "Unresolved reference"
                },
                "fullDescription": {
                  "text": "Reports an unresolved reference to a named pattern ('define') in RELAX-NG files that use XML syntax. Suggests creating the referenced 'define' element.",
                  "markdown": "Reports an unresolved reference to a named pattern (`define`) in RELAX-NG files that use XML syntax. Suggests creating the referenced `define` element."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "UnresolvedReference",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RELAX NG",
                      "index": 42,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlMissingClosingTag",
                "shortDescription": {
                  "text": "Missing closing tag"
                },
                "fullDescription": {
                  "text": "Reports an HTML element without a closing tag. Some coding styles require that HTML elements have closing tags even where this is optional. Example: '<html>\n    <body>\n      <p>Behold!\n    </body>\n  </html>' After the quick-fix is applied: '<html>\n    <body>\n      <p>Behold!</p>\n    </body>\n  </html>'",
                  "markdown": "Reports an HTML element without a closing tag. Some coding styles require that HTML elements have closing tags even where this is optional.\n\n**Example:**\n\n\n      <html>\n        <body>\n          <p>Behold!\n        </body>\n      </html>\n\nAfter the quick-fix is applied:\n\n\n      <html>\n        <body>\n          <p>Behold!</p>\n        </body>\n      </html>\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HtmlMissingClosingTag",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CustomRegExpInspection",
                "shortDescription": {
                  "text": "Custom RegExp inspection"
                },
                "fullDescription": {
                  "text": "Custom Regex Inspection",
                  "markdown": "Custom Regex Inspection"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CustomRegExpInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IncorrectFormatting",
                "shortDescription": {
                  "text": "Incorrect formatting"
                },
                "fullDescription": {
                  "text": "Reports formatting issues that appear if your code doesn't follow your project's code style settings. This inspection is not compatible with languages that require third-party formatters for code formatting, for example, Go or C with CLangFormat enabled.",
                  "markdown": "Reports formatting issues that appear if your code doesn't\nfollow your project's code style settings.\n\n\nThis inspection is not compatible with languages that require\nthird-party formatters for code formatting, for example, Go or\nC with CLangFormat enabled."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "IncorrectFormatting",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 20,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlExtraClosingTag",
                "shortDescription": {
                  "text": "Redundant closing tag"
                },
                "fullDescription": {
                  "text": "Reports redundant closing tags on empty elements, for example, 'img' or 'br'. Example: '<html>\n    <body>\n      <br></br>\n    </body>\n  </html>' After the quick-fix is applied: '<html>\n    <body>\n      <br>\n    </body>\n  </html>'",
                  "markdown": "Reports redundant closing tags on empty elements, for example, `img` or `br`.\n\n**Example:**\n\n\n      <html>\n        <body>\n          <br></br>\n        </body>\n      </html>\n\nAfter the quick-fix is applied:\n\n\n      <html>\n        <body>\n          <br>\n        </body>\n      </html>\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlExtraClosingTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlUnknownAnchorTarget",
                "shortDescription": {
                  "text": "Unresolved fragment in a link"
                },
                "fullDescription": {
                  "text": "Reports an unresolved last part of an URL after the '#' sign.",
                  "markdown": "Reports an unresolved last part of an URL after the `#` sign."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlUnknownAnchorTarget",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpUnexpectedAnchor",
                "shortDescription": {
                  "text": "Begin or end anchor in unexpected position"
                },
                "fullDescription": {
                  "text": "Reports '^' or '\\A' anchors not at the beginning of the pattern and '$', '\\Z' or '\\z' anchors not at the end of the pattern. In the wrong position these RegExp anchors prevent the pattern from matching anything. In case of the '^' and '$' anchors, most likely the literal character was meant and the escape forgotten. Example: '(Price $10)' New in 2018.1",
                  "markdown": "Reports `^` or `\\A` anchors not at the beginning of the pattern and `$`, `\\Z` or `\\z` anchors not at the end of the pattern. In the wrong position these RegExp anchors prevent the pattern from matching anything. In case of the `^` and `$` anchors, most likely the literal character was meant and the escape forgotten.\n\n**Example:**\n\n\n      (Price $10)\n\n\nNew in 2018.1"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpUnexpectedAnchor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SpellCheckingInspection",
                "shortDescription": {
                  "text": "Typo"
                },
                "fullDescription": {
                  "text": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
                  "markdown": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SpellCheckingInspection",
                    "ideaSeverity": "TYPO",
                    "qodanaSeverity": "Low"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Proofreading",
                      "index": 50,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckXmlFileWithXercesValidator",
                "shortDescription": {
                  "text": "Failed external validation"
                },
                "fullDescription": {
                  "text": "Reports a discrepancy in an XML file with the specified DTD or schema detected by the Xerces validator.",
                  "markdown": "Reports a discrepancy in an XML file with the specified DTD or schema detected by the Xerces validator."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CheckXmlFileWithXercesValidator",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 34,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlUnknownTag",
                "shortDescription": {
                  "text": "Unknown tag"
                },
                "fullDescription": {
                  "text": "Reports an unknown HTML tag. Suggests configuring tags that should not be reported.",
                  "markdown": "Reports an unknown HTML tag. Suggests configuring tags that should not be reported."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlUnknownTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpEscapedMetaCharacter",
                "shortDescription": {
                  "text": "Escaped meta character"
                },
                "fullDescription": {
                  "text": "Reports escaped meta characters. Some RegExp coding styles specify that meta characters should be placed inside a character class, to make the regular expression easier to understand. This inspection does not warn about the meta character '[', ']' and '^', because those would need additional escaping inside a character class. Example: '\\d+\\.\\d+' After the quick-fix is applied: '\\d+[.]\\d+' New in 2017.1",
                  "markdown": "Reports escaped meta characters. Some RegExp coding styles specify that meta characters should be placed inside a character class, to make the regular expression easier to understand. This inspection does not warn about the meta character `[`, `]` and `^`, because those would need additional escaping inside a character class.\n\n**Example:**\n\n\n      \\d+\\.\\d+\n\nAfter the quick-fix is applied:\n\n\n      \\d+[.]\\d+\n\nNew in 2017.1"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RegExpEscapedMetaCharacter",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlHighlighting",
                "shortDescription": {
                  "text": "XML highlighting"
                },
                "fullDescription": {
                  "text": "Reports XML validation problems in the results of a batch code inspection.",
                  "markdown": "Reports XML validation problems in the results of a batch code inspection."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlHighlighting",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 34,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlDuplicatedId",
                "shortDescription": {
                  "text": "Duplicate 'id' attribute"
                },
                "fullDescription": {
                  "text": "Reports a duplicate 'id' attribute in XML.",
                  "markdown": "Reports a duplicate `id` attribute in XML."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlDuplicatedId",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 34,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpDuplicateCharacterInClass",
                "shortDescription": {
                  "text": "Duplicate character in character class"
                },
                "fullDescription": {
                  "text": "Reports duplicate characters inside a RegExp character class. Duplicate characters are unnecessary and can be removed without changing the semantics of the regex. Example: '[aabc]' After the quick-fix is applied: '[abc]'",
                  "markdown": "Reports duplicate characters inside a RegExp character class. Duplicate characters are unnecessary and can be removed without changing the semantics of the regex.\n\n**Example:**\n\n\n      [aabc]\n\nAfter the quick-fix is applied:\n\n\n      [abc]\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpDuplicateCharacterInClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlInvalidId",
                "shortDescription": {
                  "text": "Unresolved 'id' reference"
                },
                "fullDescription": {
                  "text": "Reports an unresolved 'id' reference in XML.",
                  "markdown": "Reports an unresolved `id` reference in XML."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlInvalidId",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 34,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlUnboundNsPrefix",
                "shortDescription": {
                  "text": "Unbound namespace prefix"
                },
                "fullDescription": {
                  "text": "Reports an unbound namespace prefix in XML.",
                  "markdown": "Reports an unbound namespace prefix in XML."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "XmlUnboundNsPrefix",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 34,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RequiredAttributes",
                "shortDescription": {
                  "text": "Missing required attribute"
                },
                "fullDescription": {
                  "text": "Reports a missing mandatory attribute in an XML/HTML tag. Suggests configuring attributes that should not be reported.",
                  "markdown": "Reports a missing mandatory attribute in an XML/HTML tag. Suggests configuring attributes that should not be reported."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RequiredAttributes",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReassignedToPlainText",
                "shortDescription": {
                  "text": "Reassigned to plain text"
                },
                "fullDescription": {
                  "text": "Reports files that were explicitly re-assigned to Plain Text File Type. This association is unnecessary because the platform auto-detects text files by content automatically. You can dismiss this warning by removing the file type association in Settings | Editor | File Types | Text.",
                  "markdown": "Reports files that were explicitly re-assigned to Plain Text File Type. This association is unnecessary because the platform auto-detects text files by content automatically.\n\nYou can dismiss this warning by removing the file type association\nin **Settings \\| Editor \\| File Types \\| Text**."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReassignedToPlainText",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 20,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlUnusedNamespaceDeclaration",
                "shortDescription": {
                  "text": "Unused schema declaration"
                },
                "fullDescription": {
                  "text": "Reports an unused namespace declaration or location hint in XML.",
                  "markdown": "Reports an unused namespace declaration or location hint in XML."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "XmlUnusedNamespaceDeclaration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 34,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpRedundantClassElement",
                "shortDescription": {
                  "text": "Redundant '\\d', '[:digit:]', or '\\D' class elements"
                },
                "fullDescription": {
                  "text": "Reports redundant '\\d' or '[:digit:]' that are used in one class with '\\w' or '[:word:]' ('\\D' with '\\W') and can be removed. Example: '[\\w\\d]' After the quick-fix is applied: '[\\w]' New in 2022.2",
                  "markdown": "Reports redundant `\\d` or `[:digit:]` that are used in one class with `\\w` or `[:word:]` (`\\D` with `\\W`) and can be removed.\n\n**Example:**\n\n\n      [\\w\\d]\n\nAfter the quick-fix is applied:\n\n\n      [\\w]\n\nNew in 2022.2"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RegExpRedundantClassElement",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpSimplifiable",
                "shortDescription": {
                  "text": "Regular expression can be simplified"
                },
                "fullDescription": {
                  "text": "Reports regular expressions that can be simplified. Example: '[a] xx* [ah-hz]' After the quick-fix is applied: 'a x+ [ahz]' New in 2022.1",
                  "markdown": "Reports regular expressions that can be simplified.\n\n**Example:**\n\n\n      [a] xx* [ah-hz]\n\nAfter the quick-fix is applied:\n\n\n      a x+ [ahz]\n\nNew in 2022.1"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RegExpSimplifiable",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpEmptyAlternationBranch",
                "shortDescription": {
                  "text": "Empty branch in alternation"
                },
                "fullDescription": {
                  "text": "Reports empty branches in a RegExp alternation. An empty branch will only match the empty string, and in most cases that is not what is desired. This inspection will not report a single empty branch at the start or the end of an alternation. Example: '(alpha||bravo)' After the quick-fix is applied: '(alpha|bravo)' New in 2017.2",
                  "markdown": "Reports empty branches in a RegExp alternation. An empty branch will only match the empty string, and in most cases that is not what is desired. This inspection will not report a single empty branch at the start or the end of an alternation.\n\n**Example:**\n\n\n      (alpha||bravo)\n\nAfter the quick-fix is applied:\n\n\n      (alpha|bravo)\n\nNew in 2017.2"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpEmptyAlternationBranch",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Annotator",
                "shortDescription": {
                  "text": "Annotator"
                },
                "fullDescription": {
                  "text": "Reports issues essential to this file (e.g., syntax errors) in the result of a batch code inspection run. These issues are usually always highlighted in the editor and can't be configured, unlike inspections. These options control the scope of checks performed by this inspection: Option \"Report syntax errors\": report parser-related issues. Option \"Report issues from language-specific annotators\": report issues found by annotators configured for the relevant language. See Custom Language Support: Annotators for details. Option \"Report other highlighting problems\": report issues specific to the language of the current file (e.g., type mismatches or unreported exceptions). See Custom Language Support: Highlighting for details.",
                  "markdown": "Reports issues essential to this file (e.g., syntax errors) in the result of a batch code inspection run. These issues are usually always highlighted in the editor and can't be configured, unlike inspections. These options control the scope of checks performed by this inspection:\n\n* Option \"**Report syntax errors**\": report parser-related issues.\n* Option \"**Report issues from language-specific annotators** \": report issues found by annotators configured for the relevant language. See [Custom Language Support: Annotators](https://plugins.jetbrains.com/docs/intellij/annotator.html) for details.\n* Option \"**Report other highlighting problems** \": report issues specific to the language of the current file (e.g., type mismatches or unreported exceptions). See [Custom Language Support: Highlighting](https://plugins.jetbrains.com/docs/intellij/syntax-highlighting-and-error-highlighting.html#semantic-highlighting) for details."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "Annotator",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 20,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlPathReference",
                "shortDescription": {
                  "text": "Unresolved file reference"
                },
                "fullDescription": {
                  "text": "Reports an unresolved file reference in XML.",
                  "markdown": "Reports an unresolved file reference in XML."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlPathReference",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 34,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpUnnecessaryNonCapturingGroup",
                "shortDescription": {
                  "text": "Unnecessary non-capturing group"
                },
                "fullDescription": {
                  "text": "Reports unnecessary non-capturing groups, which have no influence on the match result. Example: 'Everybody be cool, (?:this) is a robbery!' After the quick-fix is applied: 'Everybody be cool, this is a robbery!' New in 2021.1",
                  "markdown": "Reports unnecessary non-capturing groups, which have no influence on the match result.\n\n**Example:**\n\n\n      Everybody be cool, (?:this) is a robbery!\n\nAfter the quick-fix is applied:\n\n\n      Everybody be cool, this is a robbery!\n\nNew in 2021.1"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpUnnecessaryNonCapturingGroup",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TodoComment",
                "shortDescription": {
                  "text": "TODO comment"
                },
                "fullDescription": {
                  "text": "Reports TODO comments in your code. You can configure the format for TODO comments in Settings | Editor | TODO. Enable the Only warn on TODO comments without any details option to only warn on empty TODO comments, that don't provide any description on the task that should be done. Disable to report all TODO comments.",
                  "markdown": "Reports **TODO** comments in your code.\n\nYou can configure the format for **TODO** comments in [Settings \\| Editor \\| TODO](settings://preferences.toDoOptions).\n\nEnable the **Only warn on TODO comments without any details** option to only warn on empty TODO comments, that\ndon't provide any description on the task that should be done. Disable to report all TODO comments."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TodoComment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 20,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Json5StandardCompliance",
                "shortDescription": {
                  "text": "Compliance with JSON5 standard"
                },
                "fullDescription": {
                  "text": "Reports inconsistency with the language specification in a JSON5 file.",
                  "markdown": "Reports inconsistency with [the language specification](http://json5.org) in a JSON5 file."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "Json5StandardCompliance",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON and JSON5",
                      "index": 8,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JsonDuplicatePropertyKeys",
                "shortDescription": {
                  "text": "Duplicate keys in object literals"
                },
                "fullDescription": {
                  "text": "Reports a duplicate key in an object literal.",
                  "markdown": "Reports a duplicate key in an object literal."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JsonDuplicatePropertyKeys",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON and JSON5",
                      "index": 8,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlDeprecatedElement",
                "shortDescription": {
                  "text": "Deprecated symbol"
                },
                "fullDescription": {
                  "text": "Reports a deprecated XML element or attribute. Symbols can be marked by XML comment or documentation tag with text 'deprecated'.",
                  "markdown": "Reports a deprecated XML element or attribute.\n\nSymbols can be marked by XML comment or documentation tag with text 'deprecated'."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "XmlDeprecatedElement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 34,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpRedundantNestedCharacterClass",
                "shortDescription": {
                  "text": "Redundant nested character class"
                },
                "fullDescription": {
                  "text": "Reports unnecessary nested character classes. Example: '[a-c[x-z]]' After the quick-fix is applied: '[a-cx-z]' New in 2020.2",
                  "markdown": "Reports unnecessary nested character classes.\n\n**Example:**\n\n\n      [a-c[x-z]]\n\nAfter the quick-fix is applied:\n\n\n      [a-cx-z]\n\nNew in 2020.2"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpRedundantNestedCharacterClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlWrongAttributeValue",
                "shortDescription": {
                  "text": "Wrong attribute value"
                },
                "fullDescription": {
                  "text": "Reports an incorrect HTML attribute value.",
                  "markdown": "Reports an incorrect HTML attribute value."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlWrongAttributeValue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlDefaultAttributeValue",
                "shortDescription": {
                  "text": "Redundant attribute with default value"
                },
                "fullDescription": {
                  "text": "Reports a redundant assignment of the default value to an XML attribute.",
                  "markdown": "Reports a redundant assignment of the default value to an XML attribute."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "XmlDefaultAttributeValue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 34,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpOctalEscape",
                "shortDescription": {
                  "text": "Octal escape"
                },
                "fullDescription": {
                  "text": "Reports octal escapes, which are easily confused with back references. Use hexadecimal escapes to avoid confusion. Example: '\\07' After the quick-fix is applied: '\\x07' New in 2017.1",
                  "markdown": "Reports octal escapes, which are easily confused with back references. Use hexadecimal escapes to avoid confusion.\n\n**Example:**\n\n\n      \\07\n\nAfter the quick-fix is applied:\n\n\n      \\x07\n\nNew in 2017.1"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RegExpOctalEscape",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedDefine",
                "shortDescription": {
                  "text": "Unused define"
                },
                "fullDescription": {
                  "text": "Reports an unused named pattern ('define') in a RELAX-NG file (XML or Compact Syntax). 'define' elements that are used through an include in another file are ignored.",
                  "markdown": "Reports an unused named pattern (`define`) in a RELAX-NG file (XML or Compact Syntax). `define` elements that are used through an include in another file are ignored."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedDefine",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RELAX NG",
                      "index": 42,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JsonSchemaCompliance",
                "shortDescription": {
                  "text": "Compliance with JSON schema"
                },
                "fullDescription": {
                  "text": "Reports inconsistence between a JSON file and the JSON schema that is assigned to it.",
                  "markdown": "Reports inconsistence between a JSON file and the [JSON schema](https://json-schema.org) that is assigned to it.  "
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JsonSchemaCompliance",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON and JSON5",
                      "index": 8,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyDirectory",
                "shortDescription": {
                  "text": "Empty directory"
                },
                "fullDescription": {
                  "text": "Reports empty directories. Available only from Code | Inspect Code or Code | Analyze Code | Run Inspection by Name and isn't reported in the editor. Use the Only report empty directories located under a source folder option to have only directories under source roots reported.",
                  "markdown": "Reports empty directories.\n\nAvailable only from **Code \\| Inspect Code** or\n**Code \\| Analyze Code \\| Run Inspection by Name** and isn't reported in the editor.\n\nUse the **Only report empty directories located under a source folder** option to have only directories under source\nroots reported."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptyDirectory",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 20,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpAnonymousGroup",
                "shortDescription": {
                  "text": "Anonymous capturing group or numeric back reference"
                },
                "fullDescription": {
                  "text": "Reports anonymous capturing groups and numeric back references in a RegExp. These are only reported when the RegExp dialect supports named group and named group references. Named groups and named back references improve code readability and are recommended to use instead. When a capture is not needed, matching can be more performant and use less memory by using a non-capturing group, i.e. '(?:xxx)' instead of '(xxx)'. Example: '(\\d\\d\\d\\d)\\1' A better regex pattern could look like this: '(?<quad>\\d\\d\\d\\d)\\k<quad>' New in 2017.2",
                  "markdown": "Reports anonymous capturing groups and numeric back references in a RegExp. These are only reported when the RegExp dialect supports named group and named group references. Named groups and named back references improve code readability and are recommended to use instead. When a capture is not needed, matching can be more performant and use less memory by using a non-capturing group, i.e. `(?:xxx)` instead of `(xxx)`.\n\n**Example:**\n\n\n      (\\d\\d\\d\\d)\\1\n\nA better regex pattern could look like this:\n\n\n      (?<quad>\\d\\d\\d\\d)\\k<quad>\n\nNew in 2017.2"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpAnonymousGroup",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckDtdRefs",
                "shortDescription": {
                  "text": "Unresolved DTD reference"
                },
                "fullDescription": {
                  "text": "Reports inconsistency in a DTD-specific reference, for example, in a reference to an XML entity or to a DTD element declaration. Works in DTD an XML files.",
                  "markdown": "Reports inconsistency in a DTD-specific reference, for example, in a reference to an XML entity or to a DTD element declaration. Works in DTD an XML files."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CheckDtdRefs",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 34,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonAsciiCharacters",
                "shortDescription": {
                  "text": "Non-ASCII characters"
                },
                "fullDescription": {
                  "text": "Reports code elements that use non-ASCII symbols in an unusual context. Example: Non-ASCII characters used in identifiers, strings, or comments. Identifiers written in different languages, such as 'myСollection' with the letter 'C' written in Cyrillic. Comments or strings containing Unicode symbols, such as long dashes and arrows.",
                  "markdown": "Reports code elements that use non-ASCII symbols in an unusual context.\n\nExample:\n\n* Non-ASCII characters used in identifiers, strings, or comments.\n* Identifiers written in different languages, such as `my`**С**`ollection` with the letter **C** written in Cyrillic.\n* Comments or strings containing Unicode symbols, such as long dashes and arrows."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonAsciiCharacters",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Internationalization",
                      "index": 57,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LossyEncoding",
                "shortDescription": {
                  "text": "Lossy encoding"
                },
                "fullDescription": {
                  "text": "Reports characters that cannot be displayed because of the current document encoding. Examples: If you type international characters in a document with the US-ASCII charset, some characters will be lost on save. If you load a UTF-8-encoded file using the ISO-8859-1 one-byte charset, some characters will be displayed incorrectly. You can fix this by changing the file encoding either by specifying the encoding directly in the file, e.g. by editing 'encoding=' attribute in the XML prolog of XML file, or by changing the corresponding options in Settings | Editor | File Encodings.",
                  "markdown": "Reports characters that cannot be displayed because of the current document encoding.\n\nExamples:\n\n* If you type international characters in a document with the **US-ASCII** charset, some characters will be lost on save.\n* If you load a **UTF-8** -encoded file using the **ISO-8859-1** one-byte charset, some characters will be displayed incorrectly.\n\nYou can fix this by changing the file encoding\neither by specifying the encoding directly in the file, e.g. by editing `encoding=` attribute in the XML prolog of XML file,\nor by changing the corresponding options in **Settings \\| Editor \\| File Encodings**."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LossyEncoding",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Internationalization",
                      "index": 57,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpDuplicateAlternationBranch",
                "shortDescription": {
                  "text": "Duplicate branch in alternation"
                },
                "fullDescription": {
                  "text": "Reports duplicate branches in a RegExp alternation. Duplicate branches slow down matching and obscure the intent of the expression. Example: '(alpha|bravo|charlie|alpha)' After the quick-fix is applied: '(alpha|bravo|charlie)' New in 2017.1",
                  "markdown": "Reports duplicate branches in a RegExp alternation. Duplicate branches slow down matching and obscure the intent of the expression.\n\n**Example:**\n\n\n      (alpha|bravo|charlie|alpha)\n\nAfter the quick-fix is applied:\n\n\n      (alpha|bravo|charlie)\n\nNew in 2017.1"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpDuplicateAlternationBranch",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpRepeatedSpace",
                "shortDescription": {
                  "text": "Consecutive spaces"
                },
                "fullDescription": {
                  "text": "Reports multiple consecutive spaces in a RegExp. Because spaces are not visible by default, it can be hard to see how many spaces are required. The RegExp can be made more clear by replacing the consecutive spaces with a single space and a counted quantifier. Example: '(     )' After the quick-fix is applied: '( {5})' New in 2017.1",
                  "markdown": "Reports multiple consecutive spaces in a RegExp. Because spaces are not visible by default, it can be hard to see how many spaces are required. The RegExp can be made more clear by replacing the consecutive spaces with a single space and a counted quantifier.\n\n**Example:**\n\n\n      (     )\n\nAfter the quick-fix is applied:\n\n\n      ( {5})\n\n\nNew in 2017.1"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpRepeatedSpace",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 38,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IgnoreFileDuplicateEntry",
                "shortDescription": {
                  "text": "Ignore file duplicates"
                },
                "fullDescription": {
                  "text": "Reports duplicate entries (patterns) in the ignore file (e.g. .gitignore, .hgignore). Duplicate entries in these files are redundant and can be removed. Example: '# Output directories\n    /out/\n    /target/\n    /out/'",
                  "markdown": "Reports duplicate entries (patterns) in the ignore file (e.g. .gitignore, .hgignore). Duplicate entries in these files are redundant and can be removed.\n\nExample:\n\n\n        # Output directories\n        /out/\n        /target/\n        /out/\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IgnoreFileDuplicateEntry",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Version control",
                      "index": 58,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JsonStandardCompliance",
                "shortDescription": {
                  "text": "Compliance with JSON standard"
                },
                "fullDescription": {
                  "text": "Reports the following discrepancies of a JSON file with the language specification: A line or block comment (configurable). Multiple top-level values (expect for JSON Lines files, configurable for others). A trailing comma in an object or array (configurable). A single quoted string. A property key is a not a double quoted strings. A NaN or Infinity/-Infinity numeric value as a floating point literal (configurable).",
                  "markdown": "Reports the following discrepancies of a JSON file with [the language specification](https://tools.ietf.org/html/rfc7159):\n\n* A line or block comment (configurable).\n* Multiple top-level values (expect for JSON Lines files, configurable for others).\n* A trailing comma in an object or array (configurable).\n* A single quoted string.\n* A property key is a not a double quoted strings.\n* A NaN or Infinity/-Infinity numeric value as a floating point literal (configurable)."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JsonStandardCompliance",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON and JSON5",
                      "index": 8,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckEmptyScriptTag",
                "shortDescription": {
                  "text": "Empty tag"
                },
                "fullDescription": {
                  "text": "Reports empty tags that do not work in some browsers. Example: '<html>\n    <script/>\n  </html>' After the quick-fix is applied: '<html>\n    <script></script>\n  </html>'",
                  "markdown": "Reports empty tags that do not work in some browsers.\n\n**Example:**\n\n\n      <html>\n        <script/>\n      </html>\n\nAfter the quick-fix is applied:\n\n\n      <html>\n        <script></script>\n      </html>\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CheckEmptyScriptTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "gherkin",
            "version": "233.14246",
            "rules": [
              {
                "id": "GherkinScenarioToScenarioOutline",
                "shortDescription": {
                  "text": "Scenario with Examples section"
                },
                "fullDescription": {
                  "text": "Reports Gherkin scenarios that contain an 'Examples' section. Use the quick-fix to convert 'Scenario' to 'Scenario Outline'.",
                  "markdown": "Reports Gherkin scenarios that contain an `Examples` section.\n\nUse the quick-fix to convert `Scenario` to `Scenario Outline`."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "GherkinScenarioToScenarioOutline",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Cucumber",
                      "index": 15,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GherkinMisplacedBackground",
                "shortDescription": {
                  "text": "Misplaced background section"
                },
                "fullDescription": {
                  "text": "Reports 'Background' sections that are located incorrectly. The 'Background' section must be located before the 'Scenario' section.",
                  "markdown": "Reports `Background` sections that are located incorrectly. The `Background` section must be located before the `Scenario` section."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "GherkinMisplacedBackground",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Cucumber",
                      "index": 15,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CucumberMissedExamples",
                "shortDescription": {
                  "text": "Missing examples section"
                },
                "fullDescription": {
                  "text": "Reports scenario outlines in Cucumber .feature files that do not have the 'Examples' section. Use the quick-fix to automatically create the 'Examples' section with a pre-filled table header.",
                  "markdown": "Reports scenario outlines in Cucumber .feature files that do not have the `Examples` section.\n\nUse the quick-fix to automatically create the `Examples` section with a pre-filled table header."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CucumberMissedExamples",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Cucumber",
                      "index": 15,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CucumberTableInspection",
                "shortDescription": {
                  "text": "Unused or missing columns in Cucumber tables"
                },
                "fullDescription": {
                  "text": "Reports tables in 'Examples' sections in Cucumber .feature files with unused or missing columns.",
                  "markdown": "Reports tables in `Examples` sections in Cucumber .feature files with unused or missing columns."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CucumberTableInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Cucumber",
                      "index": 15,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CucumberUndefinedStep",
                "shortDescription": {
                  "text": "Undefined step"
                },
                "fullDescription": {
                  "text": "Reports steps in Cucumber (or some other Gherkin) .feature files that do not have matching step definitions. Use the quick-fix to automatically create a new step definition.",
                  "markdown": "Reports steps in Cucumber (or some other Gherkin) .feature files that do not have matching step definitions.\n\nUse the quick-fix to automatically create a new step definition."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CucumberUndefinedStep",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Cucumber",
                      "index": 15,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GherkinBrokenTableInspection",
                "shortDescription": {
                  "text": "Gherkin table is broken"
                },
                "fullDescription": {
                  "text": "Reports a table if there is at least one row with the number of cells different from the number of cells in the table header.",
                  "markdown": "Reports a table if there is at least one row with the number of cells different from the number of cells in the table header."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "GherkinBrokenTableInspection",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Cucumber",
                      "index": 15,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CucumberExamplesColon",
                "shortDescription": {
                  "text": "Missing ':' after examples keyword"
                },
                "fullDescription": {
                  "text": "Reports 'Examples' sections in Cucumber .feature files if they do not have ':' after the 'Examples' keyword.",
                  "markdown": "Reports `Examples` sections in Cucumber .feature files if they do not have ':' after the `Examples` keyword."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CucumberExamplesColon",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Cucumber",
                      "index": 15,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "HtmlTools",
            "version": "233.14246",
            "rules": [
              {
                "id": "HtmlRequiredAltAttribute",
                "shortDescription": {
                  "text": "Missing required 'alt' attribute"
                },
                "fullDescription": {
                  "text": "Reports a missing 'alt' attribute in a 'img' or 'applet' tag or in a 'area' element of an image map. Suggests adding a required attribute with a text alternative for the contents of the tag. Based on WCAG 2.0: H24, H35, H36, H37.",
                  "markdown": "Reports a missing `alt` attribute in a `img` or `applet` tag or in a `area` element of an image map. Suggests adding a required attribute with a text alternative for the contents of the tag. Based on WCAG 2.0: [H24](https://www.w3.org/TR/WCAG20-TECHS/H24.html), [H35](https://www.w3.org/TR/WCAG20-TECHS/H35.html), [H36](https://www.w3.org/TR/WCAG20-TECHS/H36.html), [H37](https://www.w3.org/TR/WCAG20-TECHS/H37.html)."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlRequiredAltAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/Accessibility",
                      "index": 21,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlFormInputWithoutLabel",
                "shortDescription": {
                  "text": "Missing associated label"
                },
                "fullDescription": {
                  "text": "Reports a form element ('input', 'textarea', or 'select') without an associated label. Suggests creating a new label. Based on WCAG 2.0: H44.",
                  "markdown": "Reports a form element (`input`, `textarea`, or `select`) without an associated label. Suggests creating a new label. Based on WCAG 2.0: [H44](https://www.w3.org/TR/WCAG20-TECHS/H44.html).  "
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlFormInputWithoutLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/Accessibility",
                      "index": 21,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlRequiredTitleAttribute",
                "shortDescription": {
                  "text": "Missing required 'title' attribute"
                },
                "fullDescription": {
                  "text": "Reports a missing title attribute 'frame', 'iframe', 'dl', and 'a' tags. Suggests adding a title attribute. Based on WCAG 2.0: H33, H40, and H64.",
                  "markdown": "Reports a missing title attribute `frame`, `iframe`, `dl`, and `a` tags. Suggests adding a title attribute. Based on WCAG 2.0: [H33](https://www.w3.org/TR/WCAG20-TECHS/H33.html), [H40](https://www.w3.org/TR/WCAG20-TECHS/H40.html), and [H64](https://www.w3.org/TR/WCAG20-TECHS/H64.html)."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HtmlRequiredTitleAttribute",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/Accessibility",
                      "index": 21,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlDeprecatedTag",
                "shortDescription": {
                  "text": "Obsolete tag"
                },
                "fullDescription": {
                  "text": "Reports an obsolete HTML5 tag. Suggests replacing the obsolete tag with a CSS or another tag.",
                  "markdown": "Reports an obsolete HTML5 tag. Suggests replacing the obsolete tag with a CSS or another tag."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlDeprecatedTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckImageSize",
                "shortDescription": {
                  "text": "Mismatched image size"
                },
                "fullDescription": {
                  "text": "Reports a 'width' and 'height' attribute value of a 'img' tag that is different from the actual width and height of the referenced image.",
                  "markdown": "Reports a `width` and `height` attribute value of a `img` tag that is different from the actual width and height of the referenced image."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CheckImageSize",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlRequiredSummaryAttribute",
                "shortDescription": {
                  "text": "Missing required 'summary' attribute"
                },
                "fullDescription": {
                  "text": "Reports a missing 'summary' attribute in a 'table' tag. Suggests adding a'summary' attribute. Based on WCAG 2.0: H73.",
                  "markdown": "Reports a missing `summary` attribute in a `table` tag. Suggests adding a`summary` attribute. Based on WCAG 2.0: [H73](https://www.w3.org/TR/WCAG20-TECHS/H73.html)."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HtmlRequiredSummaryAttribute",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/Accessibility",
                      "index": 21,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlRequiredLangAttribute",
                "shortDescription": {
                  "text": "Missing required 'lang' attribute"
                },
                "fullDescription": {
                  "text": "Reports a missing 'lang' (or 'xml:lang') attribute in a 'html' tag. Suggests adding a required attribute to state the default language of the document. Based on WCAG 2.0: H57.",
                  "markdown": "Reports a missing `lang` (or `xml:lang`) attribute in a `html` tag. Suggests adding a required attribute to state the default language of the document. Based on WCAG 2.0: [H57](https://www.w3.org/TR/WCAG20-TECHS/H57.html)."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlRequiredLangAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/Accessibility",
                      "index": 21,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlNonExistentInternetResource",
                "shortDescription": {
                  "text": "Unresolved web link"
                },
                "fullDescription": {
                  "text": "Reports an unresolved web link. Works by making network requests in the background.",
                  "markdown": "Reports an unresolved web link. Works by making network requests in the background."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlNonExistentInternetResource",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlRequiredTitleElement",
                "shortDescription": {
                  "text": "Missing required 'title' element"
                },
                "fullDescription": {
                  "text": "Reports a missing 'title' element inside a 'head' section. Suggests adding a 'title' element. The title should describe the document. Based on WCAG 2.0: H25.",
                  "markdown": "Reports a missing `title` element inside a `head` section. Suggests adding a `title` element. The title should describe the document. Based on WCAG 2.0: [H25](https://www.w3.org/TR/WCAG20-TECHS/H25.html)."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlRequiredTitleElement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/Accessibility",
                      "index": 21,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlDeprecatedAttribute",
                "shortDescription": {
                  "text": "Obsolete attribute"
                },
                "fullDescription": {
                  "text": "Reports an obsolete HTML5 attribute.",
                  "markdown": "Reports an obsolete HTML5 attribute."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlDeprecatedAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlPresentationalElement",
                "shortDescription": {
                  "text": "Presentational tag"
                },
                "fullDescription": {
                  "text": "Reports a presentational HTML tag. Suggests replacing the presentational tag with a CSS or another tag.",
                  "markdown": "Reports a presentational HTML tag. Suggests replacing the presentational tag with a CSS or another tag."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HtmlPresentationalElement",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 14,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.intellij.css",
            "version": "233.14246",
            "rules": [
              {
                "id": "CssInvalidHtmlTagReference",
                "shortDescription": {
                  "text": "Invalid type selector"
                },
                "fullDescription": {
                  "text": "Reports a CSS type selector that matches an unknown HTML element.",
                  "markdown": "Reports a CSS [type selector](https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors) that matches an unknown HTML element."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssInvalidHtmlTagReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidCustomPropertyAtRuleDeclaration",
                "shortDescription": {
                  "text": "Invalid @property declaration"
                },
                "fullDescription": {
                  "text": "Reports a missing required syntax, inherits, or initial-value property in a declaration of a custom property.",
                  "markdown": "Reports a missing required [syntax](https://developer.mozilla.org/en-US/docs/web/css/@property/syntax), [inherits](https://developer.mozilla.org/en-US/docs/web/css/@property/inherits), or [initial-value](https://developer.mozilla.org/en-US/docs/web/css/@property/initial-value) property in a declaration of a custom property."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssInvalidCustomPropertyAtRuleDeclaration",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidFunction",
                "shortDescription": {
                  "text": "Invalid function"
                },
                "fullDescription": {
                  "text": "Reports an unknown CSS function or an incorrect function parameter.",
                  "markdown": "Reports an unknown [CSS function](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Functions) or an incorrect function parameter."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssInvalidFunction",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssMissingSemicolon",
                "shortDescription": {
                  "text": "Missing semicolon"
                },
                "fullDescription": {
                  "text": "Reports a missing semicolon at the end of a declaration.",
                  "markdown": "Reports a missing semicolon at the end of a declaration."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssMissingSemicolon",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Code style issues",
                      "index": 36,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssRedundantUnit",
                "shortDescription": {
                  "text": "Redundant measure unit"
                },
                "fullDescription": {
                  "text": "Reports a measure unit of a zero value where units are not required by the specification. Example: 'width: 0px'",
                  "markdown": "Reports a measure unit of a zero value where units are not required by the specification.\n\n**Example:**\n\n    width: 0px\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssRedundantUnit",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Code style issues",
                      "index": 36,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssMissingComma",
                "shortDescription": {
                  "text": "Missing comma in selector list"
                },
                "fullDescription": {
                  "text": "Reports a multi-line selector. Most likely this means that several single-line selectors are actually intended but a comma is missing at the end of one or several lines. Example: 'input /* comma has probably been forgotten */\n.button {\n  margin: 1px;\n}'",
                  "markdown": "Reports a multi-line selector. Most likely this means that several single-line selectors are actually intended but a comma is missing at the end of one or several lines.\n\n**Example:**\n\n\n    input /* comma has probably been forgotten */\n    .button {\n      margin: 1px;\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssMissingComma",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Probable bugs",
                      "index": 43,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidPropertyValue",
                "shortDescription": {
                  "text": "Invalid property value"
                },
                "fullDescription": {
                  "text": "Reports an incorrect CSS property value.",
                  "markdown": "Reports an incorrect CSS property value."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssInvalidPropertyValue",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssBrowserCompatibilityForProperties",
                "shortDescription": {
                  "text": "Property is incompatible with selected browsers"
                },
                "fullDescription": {
                  "text": "Reports a CSS property that is not supported by the specified browsers. Based on the MDN Compatibility Data.",
                  "markdown": "Reports a CSS property that is not supported by the specified browsers. Based on the [MDN Compatibility Data](https://github.com/mdn/browser-compat-data)."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssBrowserCompatibilityForProperties",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 26,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidCustomPropertyAtRuleName",
                "shortDescription": {
                  "text": "Invalid @property name"
                },
                "fullDescription": {
                  "text": "Reports an invalid custom property name. Custom property name should be prefixed with two dashes. Example: '@property invalid-property-name {\n  ...\n}\n\n@property --valid-property-name {\n  ...\n}'",
                  "markdown": "Reports an invalid custom property name. Custom property name should be prefixed with two dashes.\n\n**Example:**\n\n\n    @property invalid-property-name {\n      ...\n    }\n\n    @property --valid-property-name {\n      ...\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssInvalidCustomPropertyAtRuleName",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssConvertColorToHexInspection",
                "shortDescription": {
                  "text": "Color could be replaced with #-hex"
                },
                "fullDescription": {
                  "text": "Reports an 'rgb()', 'hsl()', or other color function. Suggests replacing a color function with an equivalent hexadecimal notation. Example: 'rgb(12, 15, 255)' After the quick-fix is applied: '#0c0fff'.",
                  "markdown": "Reports an `rgb()`, `hsl()`, or other color function.\n\nSuggests replacing a color function with an equivalent hexadecimal notation.\n\n**Example:**\n\n    rgb(12, 15, 255)\n\nAfter the quick-fix is applied:\n\n    #0c0fff.\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssConvertColorToHexInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 26,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssReplaceWithShorthandUnsafely",
                "shortDescription": {
                  "text": "Properties may probably be replaced with a shorthand"
                },
                "fullDescription": {
                  "text": "Reports a set of longhand CSS properties and suggests replacing an incomplete set of longhand CSS properties with a shorthand form, which is however not 100% equivalent in this case. For example, 2 properties: 'outline-color' and 'outline-style' may be replaced with a single 'outline'. Such replacement is not 100% equivalent because shorthands reset all omitted sub-values to their initial states. In this example, switching to the 'outline' shorthand means that 'outline-width' is also set to its initial value, which is 'medium'. This inspection doesn't handle full sets of longhand properties (when switching to shorthand is 100% safe). For such cases see the 'Properties may be safely replaced with a shorthand' inspection instead.",
                  "markdown": "Reports a set of longhand CSS properties and suggests replacing an incomplete set of longhand CSS properties with a shorthand form, which is however not 100% equivalent in this case.\n\n\nFor example, 2 properties: `outline-color` and `outline-style` may be replaced with a single `outline`.\nSuch replacement is not 100% equivalent because shorthands reset all omitted sub-values to their initial states.\nIn this example, switching to the `outline` shorthand means that `outline-width` is also set to its initial value,\nwhich is `medium`.\n\n\nThis inspection doesn't handle full sets of longhand properties (when switching to shorthand is 100% safe).\nFor such cases see the 'Properties may be safely replaced with a shorthand' inspection instead."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "CssReplaceWithShorthandUnsafely",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 26,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssUnknownUnit",
                "shortDescription": {
                  "text": "Unknown unit"
                },
                "fullDescription": {
                  "text": "Reports an unknown unit.",
                  "markdown": "Reports an unknown unit."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssUnknownUnit",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidMediaFeature",
                "shortDescription": {
                  "text": "Invalid media feature"
                },
                "fullDescription": {
                  "text": "Reports an unknown CSS media feature or an incorrect media feature value.",
                  "markdown": "Reports an unknown [CSS media feature](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries) or an incorrect media feature value."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssInvalidMediaFeature",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssConvertColorToRgbInspection",
                "shortDescription": {
                  "text": "Color could be replaced with rgb()"
                },
                "fullDescription": {
                  "text": "Reports an 'hsl()' or 'hwb()' color function or a hexadecimal color notation. Suggests replacing such color value with an equivalent 'rgb()' or 'rgba()' color function. Example: '#0c0fff' After the quick-fix is applied: 'rgb(12, 15, 255)'.",
                  "markdown": "Reports an `hsl()` or `hwb()` color function or a hexadecimal color notation.\n\nSuggests replacing such color value with an equivalent `rgb()` or `rgba()` color function.\n\n**Example:**\n\n    #0c0fff\n\nAfter the quick-fix is applied:\n\n    rgb(12, 15, 255).\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssConvertColorToRgbInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 26,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssUnusedSymbol",
                "shortDescription": {
                  "text": "Unused selector"
                },
                "fullDescription": {
                  "text": "Reports a CSS class or an element IDs that appears in selectors but is not used in HTML. Note that complete inspection results are available only when running it via Code | Inspect Code or Code | Analyze Code | Run Inspection by Name. Due to performance reasons, style sheet files are not inspected on the fly.",
                  "markdown": "Reports a CSS class or an element IDs that appears in selectors but is not used in HTML.\n\n\nNote that complete inspection results are available only when running it via **Code \\| Inspect Code** or\n**Code \\| Analyze Code \\| Run Inspection by Name**.\nDue to performance reasons, style sheet files are not inspected on the fly."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssUnusedSymbol",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 26,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssDeprecatedValue",
                "shortDescription": {
                  "text": "Deprecated value"
                },
                "fullDescription": {
                  "text": "Reports a deprecated CSS value. Suggests replacing the deprecated value with its valid equivalent.",
                  "markdown": "Reports a deprecated CSS value. Suggests replacing the deprecated value with its valid equivalent."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssDeprecatedValue",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 26,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssNonIntegerLengthInPixels",
                "shortDescription": {
                  "text": "Non-integer length in pixels"
                },
                "fullDescription": {
                  "text": "Reports a non-integer length in pixels. Example: 'width: 3.14px'",
                  "markdown": "Reports a non-integer length in pixels.\n\n**Example:**\n\n     width: 3.14px\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "CssNonIntegerLengthInPixels",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Probable bugs",
                      "index": 43,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidImport",
                "shortDescription": {
                  "text": "Misplaced @import"
                },
                "fullDescription": {
                  "text": "Reports a misplaced '@import' statement. According to the specification, '@import' rules must precede all other types of rules, except '@charset' rules.",
                  "markdown": "Reports a misplaced `@import` statement.\n\n\nAccording to the [specification](https://developer.mozilla.org/en-US/docs/Web/CSS/@import),\n`@import` rules must precede all other types of rules, except `@charset` rules."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssInvalidImport",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidAtRule",
                "shortDescription": {
                  "text": "Unknown at-rule"
                },
                "fullDescription": {
                  "text": "Reports an unknown CSS at-rule.",
                  "markdown": "Reports an unknown [CSS at-rule](https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule)."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssInvalidAtRule",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssUnresolvedCustomProperty",
                "shortDescription": {
                  "text": "Unresolved custom property"
                },
                "fullDescription": {
                  "text": "Reports an unresolved reference to a custom property among the arguments of the 'var()' function.",
                  "markdown": "Reports an unresolved reference to a [custom property](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) among the arguments of the `var()` function."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssUnresolvedCustomProperty",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssOverwrittenProperties",
                "shortDescription": {
                  "text": "Overwritten property"
                },
                "fullDescription": {
                  "text": "Reports a duplicated CSS property within a ruleset. Respects shorthand properties. Example: '.foo {\n  margin-bottom: 1px;\n  margin-bottom: 1px; /* duplicates margin-bottom */\n  margin: 0; /* overrides margin-bottom */\n}'",
                  "markdown": "Reports a duplicated CSS property within a ruleset. Respects shorthand properties.\n\n**Example:**\n\n\n    .foo {\n      margin-bottom: 1px;\n      margin-bottom: 1px; /* duplicates margin-bottom */\n      margin: 0; /* overrides margin-bottom */\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssOverwrittenProperties",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 26,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssUnknownTarget",
                "shortDescription": {
                  "text": "Unresolved file reference"
                },
                "fullDescription": {
                  "text": "Reports an unresolved file reference, for example, an incorrect path in an '@import' statement.",
                  "markdown": "Reports an unresolved file reference, for example, an incorrect path in an `@import` statement."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssUnknownTarget",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssNegativeValue",
                "shortDescription": {
                  "text": "Negative property value"
                },
                "fullDescription": {
                  "text": "Reports a negative value of a CSS property that is not expected to be less than zero, for example, object width or height.",
                  "markdown": "Reports a negative value of a CSS property that is not expected to be less than zero, for example, object width or height."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssNegativeValue",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssNoGenericFontName",
                "shortDescription": {
                  "text": "Missing generic font family name"
                },
                "fullDescription": {
                  "text": "Verifies that the 'font-family' property contains a generic font family name as a fallback alternative. Generic font family names are: 'serif', 'sans-serif', 'cursive', 'fantasy', and 'monospace'.",
                  "markdown": "Verifies that the [font-family](https://developer.mozilla.org/en-US/docs/Web/CSS/font-family) property contains a generic font family name as a fallback alternative.\n\n\nGeneric font family names are: `serif`, `sans-serif`, `cursive`, `fantasy`,\nand `monospace`."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssNoGenericFontName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Probable bugs",
                      "index": 43,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssUnresolvedClassInComposesRule",
                "shortDescription": {
                  "text": "Unresolved class in 'composes' rule"
                },
                "fullDescription": {
                  "text": "Reports a CSS class reference in the 'composes' rule that cannot be resolved to any valid target. Example: '.className {/* ... */}\n\n  .otherClassName {\n    composes: className;\n  }'",
                  "markdown": "Reports a CSS class reference in the ['composes'](https://github.com/css-modules/css-modules#composition) rule that cannot be resolved to any valid target.\n\n**Example:**\n\n\n      .className {/* ... */}\n\n      .otherClassName {\n        composes: className;\n      }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssUnresolvedClassInComposesRule",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidCharsetRule",
                "shortDescription": {
                  "text": "Misplaced or incorrect @charset"
                },
                "fullDescription": {
                  "text": "Reports a misplaced '@charset' at-rule or an incorrect charset value.",
                  "markdown": "Reports a misplaced `@charset` at-rule or an incorrect charset value."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssInvalidCharsetRule",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssReplaceWithShorthandSafely",
                "shortDescription": {
                  "text": "Properties may be safely replaced with a shorthand"
                },
                "fullDescription": {
                  "text": "Reports a set of longhand properties. Suggests replacing a complete set of longhand CSS properties with an equivalent shorthand form. For example, 4 properties: 'padding-top', 'padding-right', 'padding-bottom', and 'padding-left' can be safely replaced with a single 'padding' property. Note that this inspection doesn't show up if the set of longhand properties is incomplete (e.g. only 3 'padding-xxx' properties in a ruleset) because switching to a shorthand may change the result. For such cases consider the 'Properties may probably be replaced with a shorthand' inspection.",
                  "markdown": "Reports a set of longhand properties. Suggests replacing a complete set of longhand CSS properties with an equivalent shorthand form.\n\n\nFor example, 4 properties: `padding-top`, `padding-right`, `padding-bottom`, and\n`padding-left`\ncan be safely replaced with a single `padding` property.\n\n\nNote that this inspection doesn't show up if the set of longhand properties is incomplete\n(e.g. only 3 `padding-xxx` properties in a ruleset)\nbecause switching to a shorthand may change the result.\nFor such cases consider the 'Properties may probably be replaced with a shorthand'\ninspection."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "CssReplaceWithShorthandSafely",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 26,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssUnknownProperty",
                "shortDescription": {
                  "text": "Unknown property"
                },
                "fullDescription": {
                  "text": "Reports an unknown CSS property or a property used in a wrong context. Add the unknown property to the 'Custom CSS properties' list to skip validation.",
                  "markdown": "Reports an unknown CSS property or a property used in a wrong context.\n\nAdd the unknown property to the 'Custom CSS properties' list to skip validation."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssUnknownProperty",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidPseudoSelector",
                "shortDescription": {
                  "text": "Invalid pseudo-selector"
                },
                "fullDescription": {
                  "text": "Reports an incorrect CSS pseudo-class pseudo-element.",
                  "markdown": "Reports an incorrect CSS [pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes) [pseudo-element](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements)."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssInvalidPseudoSelector",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidNestedSelector",
                "shortDescription": {
                  "text": "Invalid nested selector"
                },
                "fullDescription": {
                  "text": "Reports a nested selector starting with an identifier or a functional notation.",
                  "markdown": "Reports a nested selector starting with an identifier or a functional notation."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssInvalidNestedSelector",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/Invalid elements",
                      "index": 27,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.dmarcotte.handlebars",
            "version": "233.14246",
            "rules": [
              {
                "id": "HbEmptyBlock",
                "shortDescription": {
                  "text": "Missing block helper argument"
                },
                "fullDescription": {
                  "text": "Reports an 'if', 'each', or 'with' block helper without an argument.",
                  "markdown": "Reports an `if`, `each`, or `with` block helper without an argument."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HbEmptyBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Handlebars_Mustache",
                      "index": 28,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.intellij.plugins.dependencyAnalysis",
            "version": "233.14246",
            "rules": [
              {
                "id": "CheckThirdPartySoftwareList",
                "shortDescription": {
                  "text": "Check third party software list"
                },
                "fullDescription": {
                  "text": "Check project for possible problems: user's third party software list does not match the collected project metadata",
                  "markdown": "Check project for possible problems: user's third party software list does not match the collected project metadata"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CheckThirdPartySoftwareList",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Dependency analysis",
                      "index": 32,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckDependencyLicenses",
                "shortDescription": {
                  "text": "Check dependency licenses"
                },
                "fullDescription": {
                  "text": "Check dependencies licenses for possible problems: missing or prohibited licenses, or other compliance issues",
                  "markdown": "Check dependencies licenses for possible problems: missing or prohibited licenses, or other compliance issues"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CheckDependencyLicenses",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Dependency analysis",
                      "index": 32,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckModuleLicenses",
                "shortDescription": {
                  "text": "Check module licenses"
                },
                "fullDescription": {
                  "text": "Check module licenses for possible problems: missing licenses or other compliance issues",
                  "markdown": "Check module licenses for possible problems: missing licenses or other compliance issues"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CheckModuleLicenses",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Dependency analysis",
                      "index": 32,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.plugins.yaml",
            "version": "233.14246",
            "rules": [
              {
                "id": "YAMLSchemaValidation",
                "shortDescription": {
                  "text": "Validation by JSON Schema"
                },
                "fullDescription": {
                  "text": "Reports inconsistencies between a YAML file and a JSON Schema if the schema is specified. Scheme example: '{\n    \"properties\": {\n      \"SomeNumberProperty\": {\n        \"type\": \"number\"\n      }\n    }\n  }' The following is an example with the corresponding warning: 'SomeNumberProperty: hello world'",
                  "markdown": "Reports inconsistencies between a YAML file and a JSON Schema if the schema is specified.\n\n**Scheme example:**\n\n\n      {\n        \"properties\": {\n          \"SomeNumberProperty\": {\n            \"type\": \"number\"\n          }\n        }\n      }\n\n**The following is an example with the corresponding warning:**\n\n\n      SomeNumberProperty: hello world\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "YAMLSchemaValidation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 33,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLIncompatibleTypes",
                "shortDescription": {
                  "text": "Suspicious type mismatch"
                },
                "fullDescription": {
                  "text": "Reports a mismatch between a scalar value type in YAML file and types of the values in the similar positions. Example: 'myElements:\n  - value1\n  - value2\n  - false # <- reported, because it is a boolean value, while other values are strings'",
                  "markdown": "Reports a mismatch between a scalar value type in YAML file and types of the values in the similar positions.\n\n**Example:**\n\n\n    myElements:\n      - value1\n      - value2\n      - false # <- reported, because it is a boolean value, while other values are strings\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "YAMLIncompatibleTypes",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 33,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLUnresolvedAlias",
                "shortDescription": {
                  "text": "Unresolved alias"
                },
                "fullDescription": {
                  "text": "Reports unresolved aliases in YAML files. Example: 'some_key: *unknown_alias'",
                  "markdown": "Reports unresolved aliases in YAML files.\n\n**Example:**\n\n\n      some_key: *unknown_alias\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "YAMLUnresolvedAlias",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 33,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLSchemaDeprecation",
                "shortDescription": {
                  "text": "Deprecated YAML key"
                },
                "fullDescription": {
                  "text": "Reports deprecated keys in YAML files. Deprecation is checked only if there exists a JSON schema associated with the corresponding YAML file. Note that the deprecation mechanism is not defined in the JSON Schema specification yet, and this inspection uses a non-standard 'deprecationMessage' extension. Scheme deprecation example: '{\n    \"properties\": {\n      \"SomeDeprecatedProperty\": {\n        \"deprecationMessage\": \"Baz\",\n        \"description\": \"Foo bar\"\n      }\n    }\n  }' The following is an example with the corresponding warning: 'SomeDeprecatedProperty: some value'",
                  "markdown": "Reports deprecated keys in YAML files.\n\nDeprecation is checked only if there exists a JSON schema associated with the corresponding YAML file.\n\nNote that the deprecation mechanism is not defined in the JSON Schema specification yet,\nand this inspection uses a non-standard `deprecationMessage` extension.\n\n**Scheme deprecation example:**\n\n\n      {\n        \"properties\": {\n          \"SomeDeprecatedProperty\": {\n            \"deprecationMessage\": \"Baz\",\n            \"description\": \"Foo bar\"\n          }\n        }\n      }\n\n**The following is an example with the corresponding warning:**\n\n\n      SomeDeprecatedProperty: some value\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "YAMLSchemaDeprecation",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 33,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLRecursiveAlias",
                "shortDescription": {
                  "text": "Recursive alias"
                },
                "fullDescription": {
                  "text": "Reports recursion in YAML aliases. Alias can't be recursive and be used inside the data referenced by a corresponding anchor. Example: 'some_key: &some_anchor\n    sub_key1: value1\n    sub_key2: *some_anchor'",
                  "markdown": "Reports recursion in YAML aliases.\n\nAlias can't be recursive and be used inside the data referenced by a corresponding anchor.\n\n**Example:**\n\n\n      some_key: &some_anchor\n        sub_key1: value1\n        sub_key2: *some_anchor\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "YAMLRecursiveAlias",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 33,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLDuplicatedKeys",
                "shortDescription": {
                  "text": "Duplicated YAML keys"
                },
                "fullDescription": {
                  "text": "Reports duplicated keys in YAML files. Example: 'same_key: some value\n  same_key: another value'",
                  "markdown": "Reports duplicated keys in YAML files.\n\n**Example:**\n\n\n      same_key: some value\n      same_key: another value\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "YAMLDuplicatedKeys",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 33,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLUnusedAnchor",
                "shortDescription": {
                  "text": "Unused anchor"
                },
                "fullDescription": {
                  "text": "Reports unused anchors. Example: 'some_key: &some_anchor\n    key1: value1'",
                  "markdown": "Reports unused anchors.\n\n**Example:**\n\n\n      some_key: &some_anchor\n        key1: value1\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "YAMLUnusedAnchor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 33,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.plugins.less",
            "version": "233.14246",
            "rules": [
              {
                "id": "LessUnresolvedMixin",
                "shortDescription": {
                  "text": "Unresolved mixin"
                },
                "fullDescription": {
                  "text": "Reports a reference to a Less mixin that is not resolved. Example: '* {\n  .unknown-mixin();\n}'",
                  "markdown": "Reports a reference to a [Less mixin](http://lesscss.org/features/#mixins-feature) that is not resolved.\n\n**Example:**\n\n\n    * {\n      .unknown-mixin();\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LessUnresolvedMixin",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Less",
                      "index": 37,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LessUnresolvedVariable",
                "shortDescription": {
                  "text": "Unresolved variable"
                },
                "fullDescription": {
                  "text": "Reports a reference to a Less variable that is not resolved. Example: '* {\n  margin: @unknown-var;\n}'",
                  "markdown": "Reports a reference to a [Less variable](http://lesscss.org/features/#variables-feature) that is not resolved.\n\n**Example:**\n\n\n    * {\n      margin: @unknown-var;\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LessUnresolvedVariable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Less",
                      "index": 37,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LessResolvedByNameOnly",
                "shortDescription": {
                  "text": "Missing import"
                },
                "fullDescription": {
                  "text": "Reports a reference to a variable or mixin that is declared in another file, which is not explicitly imported in the current file. Example: '* {\n  margin: @var-in-other-file;\n}'",
                  "markdown": "Reports a reference to a variable or mixin that is declared in another file, which is not explicitly [imported](http://lesscss.org/features/#import-atrules-feature) in the current file.\n\n**Example:**\n\n\n    * {\n      margin: @var-in-other-file;\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "LessResolvedByNameOnly",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Less",
                      "index": 37,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.intellij.intelliLang",
            "version": "233.14246",
            "rules": [
              {
                "id": "InjectedReferences",
                "shortDescription": {
                  "text": "Injected references"
                },
                "fullDescription": {
                  "text": "Reports unresolved references injected by Language Injections. Example: '@Language(\"file-reference\")\n    String fileName = \"/home/user/nonexistent.file\"; // highlighted if file doesn't exist'",
                  "markdown": "Reports unresolved references injected by [Language Injections](https://www.jetbrains.com/help/idea/using-language-injections.html).\n\nExample:\n\n\n        @Language(\"file-reference\")\n        String fileName = \"/home/user/nonexistent.file\"; // highlighted if file doesn't exist\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "InjectedReferences",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 20,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.plugins.vue",
            "version": "233.14246",
            "rules": [
              {
                "id": "VueDataFunction",
                "shortDescription": {
                  "text": "Data function"
                },
                "fullDescription": {
                  "text": "Reports a Vue component data property that is not a function. Suggests wrapping an object literal with a function. When defining a component, 'data' must be declared as a function that returns the initial data object, because the same definition will be used for creating numerous instances. If a plain object is still used for 'data', that very object will be shared by reference across all instances created! With a 'data' function, every time a new instance is created we can simply call it to return a fresh copy of the initial data.",
                  "markdown": "Reports a Vue component [data](https://vuejs.org/v2/api/#data) property that is not a function. Suggests wrapping an object literal with a function.\n\nWhen defining a component, `data` must be declared as a function that returns the initial data object, because the same definition will be used for creating numerous instances. If a plain object is still used for `data`, that very object will be shared by reference across all instances created! With a `data` function, every time a new instance is created we can simply call it to return a fresh copy of the initial data."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VueDataFunction",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Vue",
                      "index": 39,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VueUnrecognizedSlot",
                "shortDescription": {
                  "text": "Unrecognized slot"
                },
                "fullDescription": {
                  "text": "Reports an unrecognized Vue slot.",
                  "markdown": "Reports an unrecognized Vue slot."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "VueUnrecognizedSlot",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Vue",
                      "index": 39,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VueMissingComponentImportInspection",
                "shortDescription": {
                  "text": "Missing component import"
                },
                "fullDescription": {
                  "text": "Reports Vue components, which require to be imported in Vue templates. It provides a quick fix to add the missing import.",
                  "markdown": "Reports Vue components, which require to be imported in Vue templates. It provides a quick fix to add the missing import."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VueMissingComponentImportInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Vue",
                      "index": 39,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VueUnrecognizedDirective",
                "shortDescription": {
                  "text": "Unrecognized directive"
                },
                "fullDescription": {
                  "text": "Reports an unrecognized Vue directive.",
                  "markdown": "Reports an unrecognized Vue directive."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VueUnrecognizedDirective",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Vue",
                      "index": 39,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VueDuplicateTag",
                "shortDescription": {
                  "text": "Duplicate template/script tag"
                },
                "fullDescription": {
                  "text": "Reports multiple usages of the 'template' or 'script' tag in a Vue file. Vue Component specification indicates that each '*.vue' file can contain at most one 'template' or 'script' block at a time.",
                  "markdown": "Reports multiple usages of the `template` or `script` tag in a Vue file.\n\n[Vue Component specification](https://vue-loader.vuejs.org/spec.html) indicates that each `*.vue` file can contain at most one `template` or `script` block at a time."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VueDuplicateTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Vue",
                      "index": 39,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VueDeprecatedSymbol",
                "shortDescription": {
                  "text": "Deprecated symbol"
                },
                "fullDescription": {
                  "text": "Reports a deprecated Vue symbol.",
                  "markdown": "Reports a deprecated Vue symbol."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VueDeprecatedSymbol",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Vue",
                      "index": 39,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.intellij.qodana",
            "version": "233.14246",
            "rules": [
              {
                "id": "JsCoverageInspection",
                "shortDescription": {
                  "text": "Check JavaScript and TypeScript source code coverage"
                },
                "fullDescription": {
                  "text": "Reports methods, classes and files whose coverage is below a certain threshold.",
                  "markdown": "Reports methods, classes and files whose coverage is below a certain threshold."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JsCoverageInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Code Coverage",
                      "index": 49,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "QodanaSanity",
                "shortDescription": {
                  "text": "Sanity"
                },
                "fullDescription": {
                  "text": "Reports issues essential to this file like syntax errors, unresolved methods and variables, etc...",
                  "markdown": "Reports issues essential to this file like syntax errors, unresolved methods and variables, etc..."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "QodanaSanity",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Qodana",
                      "index": 55,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.security.package-checker",
            "version": "233.14246",
            "rules": [
              {
                "id": "VulnerableLibrariesLocal",
                "shortDescription": {
                  "text": "Vulnerable declared dependency"
                },
                "fullDescription": {
                  "text": "Reports vulnerabilities in Gradle, Maven, NPM and PyPI dependencies declared in your project. A full list of Gradle and Maven dependencies is shown in the Project tool window under External Libraries. Fixing the reported problems helps prevent your software from being compromised by an attacker. To solve a problem, you can update to a version where the vulnerability is fixed (if available) or switch to a dependency that doesn't have the vulnerability. The quick-fixes available may suggest updating to a safe version or visiting the Checkmarx website to learn more about a particular vulnerability. Vulnerability data provided by Checkmarx (c).",
                  "markdown": "Reports vulnerabilities in Gradle, Maven, NPM and PyPI dependencies declared in your project.\nA full list of Gradle and Maven dependencies is shown in the Project tool window under External Libraries.\n\nFixing the reported problems helps prevent your software from being compromised by an attacker.\n\nTo solve a problem, you can update to a version where the vulnerability is fixed (if available) or switch to a dependency that doesn't have the vulnerability.\n\nThe quick-fixes available may suggest updating to a safe version or visiting the Checkmarx website to learn more about a particular vulnerability.\n\nVulnerability data provided by [Checkmarx](https://checkmarx.com/) (c)."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VulnerableLibrariesLocal",
                    "cweIds": [
                      1395
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Security",
                      "index": 51,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NpmVulnerableApiCode",
                "shortDescription": {
                  "text": "Vulnerable API usage"
                },
                "fullDescription": {
                  "text": "Reports usages of Vulnerable APIs of imported dependencies. Fixing the reported problems helps prevent your software from being compromised by an attacker. To solve a problem, you can update to a version where the vulnerability is fixed (if available) or switch to a dependency that doesn't have the vulnerability. Vulnerability data provided by Checkmarx (c).",
                  "markdown": "Reports usages of Vulnerable APIs of imported dependencies.\n\nFixing the reported problems helps prevent your software from being compromised by an attacker.\n\nTo solve a problem, you can update to a version where the vulnerability is fixed (if available) or switch to a dependency that doesn't have the vulnerability.\n\nVulnerability data provided by [Checkmarx](https://checkmarx.com/) (c)."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NpmVulnerableApiCode",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Security",
                      "index": 56,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.jetbrains.lang.ejs",
            "version": "233.14246",
            "rules": [
              {
                "id": "EjsUnresolvedInclude",
                "shortDescription": {
                  "text": "Unresolved include"
                },
                "fullDescription": {
                  "text": "Reports an unresolved file reference in an EJS include.",
                  "markdown": "Reports an unresolved file reference in an EJS include."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EjsUnresolvedInclude",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EJS",
                      "index": 53,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "intellij.webpack",
            "version": "233.14246",
            "rules": [
              {
                "id": "WebpackConfigHighlighting",
                "shortDescription": {
                  "text": "Webpack config compliance with JSON Schema"
                },
                "fullDescription": {
                  "text": "Validates options in webpack config files (which name should start with `webpack`, e.g. `webpack.config.js`) against webpack options schema. Disable this inspection to turn off validation and code completion inside the configuration object.",
                  "markdown": "Validates options in webpack config files (which name should start with \\`webpack\\`, e.g. \\`webpack.config.js\\`) against [webpack options schema](https://github.com/webpack/webpack/blob/master/schemas/WebpackOptions.json).   \n\nDisable this inspection to turn off validation and code completion inside the configuration object."
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WebpackConfigHighlighting",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/General",
                      "index": 9,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "tslint",
            "version": "233.14246",
            "rules": [
              {
                "id": "TsLint",
                "shortDescription": {
                  "text": "TSLint"
                },
                "fullDescription": {
                  "text": "Reports a discrepancy detected by the TSLint linter. The highlighting is based on the rule severity specified in the TSLint configuration file for each individual rule. Clear the 'Use rule severity from the configuration file' checkbox to use the severity configured in this inspection for all TSLint rules.",
                  "markdown": "Reports a discrepancy detected by the [TSLint](https://github.com/palantir/tslint) linter.   \n\nThe highlighting is based on the rule severity specified in the [TSLint configuration file](https://palantir.github.io/tslint/usage/configuration/) for each individual rule.   \n\nClear the 'Use rule severity from the configuration file' checkbox to use the severity configured in this inspection for all TSLint rules."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TsLint",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/Code quality tools",
                      "index": 48,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.jetbrains.plugins.jade",
            "version": "233.14246",
            "rules": [
              {
                "id": "JadeTabsAndSpaces",
                "shortDescription": {
                  "text": "Tabs and spaces both used"
                },
                "fullDescription": {
                  "text": "Reports use of spaces and tabs for indentation in a Pug file.",
                  "markdown": "Reports use of spaces and tabs for indentation in a Pug file."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JadeTabsAndSpaces",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Pug_Jade",
                      "index": 54,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "tanvd.grazi",
            "version": "233.14246",
            "rules": [
              {
                "id": "LanguageDetectionInspection",
                "shortDescription": {
                  "text": "Natural language detection"
                },
                "fullDescription": {
                  "text": "Detects natural languages and suggests enabling corresponding grammar and spelling checks.",
                  "markdown": "Detects natural languages and suggests enabling corresponding grammar and spelling checks."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LanguageDetectionInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Proofreading",
                      "index": 50,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrazieInspection",
                "shortDescription": {
                  "text": "Grammar"
                },
                "fullDescription": {
                  "text": "Reports grammar mistakes in your text. You can configure the inspection in Settings | Editor | Natural Languages | Grammar.",
                  "markdown": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie)."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GrazieInspection",
                    "ideaSeverity": "GRAMMAR_ERROR",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Proofreading",
                      "index": 50,
                      "toolComponent": {
                        "name": "QDJS"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          }
        ]
      },
      "invocations": [
        {
          "startTimeUtc": "2024-02-02T08:49:14.300846552Z",
          "exitCode": 0,
          "executionSuccessful": true
        }
      ],
      "language": "en-US",
      "versionControlProvenance": [
        {
          "repositoryUri": "https://github.com/ChannelMobile/Channel360.git",
          "revisionId": "c38e5fa1747273961ec3a087f2ebdd4d533ded80",
          "branch": "refs/heads/staging",
          "properties": {
            "repoUrl": "https://github.com/ChannelMobile/Channel360.git",
            "lastAuthorName": "Mitchell Yuen",
            "vcsType": "Git",
            "lastAuthorEmail": "mwhyuen@gmail.com"
          }
        }
      ],
      "results": [
        {
          "ruleId": "BadExpressionStatementJS",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Expression statement is not assignment or call",
            "markdown": "Expression statement is not assignment or call"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/[subscriberId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 3,
                  "charOffset": 6424,
                  "charLength": 19,
                  "snippet": {
                    "text": "notificationService"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 240,
                  "startColumn": 1,
                  "charOffset": 6390,
                  "charLength": 93,
                  "snippet": {
                    "text": "\t\t\tcomponents: components,\n\t\t})\n\t\tnotificationService\n\t\tsetOpen(false)\n\t\tsetButtonLoad(false)"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "4d67b2e7642d45d5b4cc30ea0501234c959f89cf259bbbd39a76b62a02f376f0"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "BadExpressionStatementJS",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Expression statement is not assignment or call",
            "markdown": "Expression statement is not assignment or call"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/organizations/[id].tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 8,
                  "charOffset": 6558,
                  "charLength": 4,
                  "snippet": {
                    "text": "null"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 216,
                  "startColumn": 1,
                  "charOffset": 6508,
                  "charLength": 71,
                  "snippet": {
                    "text": "\t\t\t\t\t\tcolor=\"error\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "4e5bb1b379dabb6efa2cbd1453be33882e3ae06a576e594d97e2cee01cd65b4f"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "CommaExpressionJS",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Comma expression",
            "markdown": "Comma expression"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/UI/Select/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 32,
                  "charOffset": 2270,
                  "charLength": 1,
                  "snippet": {
                    "text": ","
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 96,
                  "startColumn": 1,
                  "charOffset": 2182,
                  "charLength": 150,
                  "snippet": {
                    "text": "\t\t\t\t\t\tlabel={Case.title(field)}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\thandleSelectionChange(e), onChange(e)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClose={() => setSearchText('')}"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e70d9674871b37daa5aa773e84eec87b1c8a539fa85ff3baeda507ccb35c7924"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6MissingAwait",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Missing await for an async function call",
            "markdown": "Missing await for an async function call"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/Core/src/utilities/ServiceInitializer.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 5,
                  "charOffset": 2683,
                  "charLength": 15,
                  "snippet": {
                    "text": "this.app.listen"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 98,
                  "startColumn": 1,
                  "charOffset": 2653,
                  "charLength": 120,
                  "snippet": {
                    "text": "\n    // Start the service\n    this.app.listen(3000, () => {\n      console.log(\"Listening on port 3000!!!!!!!!\");\n    });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "88d4d5d9086df26cd2036163fd728fc103a04787606ab1ce339b3ef0d16d69f3"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "ES6MissingAwait",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Missing await for an async function call",
            "markdown": "Missing await for an async function call"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/campaigns/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 3,
                  "charOffset": 6225,
                  "charLength": 7,
                  "snippet": {
                    "text": "refresh"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 245,
                  "startColumn": 1,
                  "charOffset": 6181,
                  "charLength": 57,
                  "snippet": {
                    "text": "\n\t\tsetCampaigns([...campaigns, campaign])\n\t\trefresh()\n\t}\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a6bee785bb0d33b5138322da9d7c2404a24418d225abbecbaaa9936155c7cd96"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6MissingAwait",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Missing await for an async function call",
            "markdown": "Missing await for an async function call"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/[subscriberId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 3,
                  "charOffset": 6318,
                  "charLength": 26,
                  "snippet": {
                    "text": "notificationService.create"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 237,
                  "startColumn": 1,
                  "charOffset": 6306,
                  "charLength": 115,
                  "snippet": {
                    "text": "\t\t\t})\n\t\t}\n\t\tnotificationService.create(id, subscriber.mobileNumber, templateName, {\n\t\t\tcomponents: components,\n\t\t})"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a7af103b6e6d92ac70944a95f867b55bf1d75d52441e01cf00b45698d3aca146"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6MissingAwait",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Missing await for an async function call",
            "markdown": "Missing await for an async function call"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/groups/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 3,
                  "charOffset": 4180,
                  "charLength": 7,
                  "snippet": {
                    "text": "refresh"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 176,
                  "startColumn": 1,
                  "charOffset": 4116,
                  "charLength": 91,
                  "snippet": {
                    "text": "\t\tsetLoading(true)\n\t\tawait groupService.deleteGroup(group.id)\n\t\trefresh()\n\t\tsetGroup({})\n\t}"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b2a93a43c891fa7006c4bdd97acc3f8063d17d8886f756a5234d27e10f19a8b2"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6MissingAwait",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Missing await for an async function call",
            "markdown": "Missing await for an async function call"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/Core/src/middlewares/require-super-admin.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 5,
                  "charOffset": 389,
                  "charLength": 10,
                  "snippet": {
                    "text": "jwt.verify"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 13,
                  "startColumn": 1,
                  "charOffset": 373,
                  "charLength": 91,
                  "snippet": {
                    "text": "  }\n  try {\n    jwt.verify(token, process.env.ADMIN_JWT_KEY!);\n    next()\n  } catch (err) {"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "bf29ee1035d50212c07cd749bc46608a01b626e715c6e2eb5b81c14a1956cd68"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "ES6MissingAwait",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Missing await for an async function call",
            "markdown": "Missing await for an async function call"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/OrgSettings/Logging.jsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 4,
                  "charOffset": 1491,
                  "charLength": 12,
                  "snippet": {
                    "text": "handleExport"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 65,
                  "startColumn": 1,
                  "charOffset": 1466,
                  "charLength": 89,
                  "snippet": {
                    "text": "\t\t\t\tdata.endDate\n\t\t\t)\n\t\t\thandleExport(csvData)\n\t\t\tsetOpenPopup(false)\n\t\t} catch (error) {"
                  },
                  "sourceLanguage": "ECMAScript 6"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "d2a7334e2991e932f958ca7b5921cc8fe0c8c36c2657a6b61161a9edd05f932e"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6MissingAwait",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Missing await for an async function call",
            "markdown": "Missing await for an async function call"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/UserTable.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "charOffset": 1207,
                  "charLength": 11,
                  "snippet": {
                    "text": "Promise.all"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 28,
                  "startColumn": 1,
                  "charOffset": 1119,
                  "charLength": 156,
                  "snippet": {
                    "text": "\tconst dispatch = useDispatch()\n\tconst handleEditUser = async (rowUser, rowRole) => {\n\t\tPromise.all([setUser(rowUser), setRole(rowRole)])\n\t\tsetOpen(true)\n\t}"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "d5953853a4a6bf4df9544fa741634d5fc80d7a104febdc75190d1272caafc367"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6MissingAwait",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Missing await for an async function call",
            "markdown": "Missing await for an async function call"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 4,
                  "charOffset": 6762,
                  "charLength": 12,
                  "snippet": {
                    "text": "handleExport"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 261,
                  "startColumn": 1,
                  "charOffset": 6737,
                  "charLength": 96,
                  "snippet": {
                    "text": "\t\t\t\tdata.endDate\n\t\t\t)\n\t\t\thandleExport(csvData)\n\t\t\tsetOpenExportDialog(false)\n\t\t} catch (error) {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f36e14bce245f004c8f0f05a264104259b0dd84a993f1f75514705cd2a8fb729"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6MissingAwait",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Missing await for an async function call",
            "markdown": "Missing await for an async function call"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/campaigns/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 3,
                  "charOffset": 6386,
                  "charLength": 7,
                  "snippet": {
                    "text": "refresh"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 252,
                  "startColumn": 1,
                  "charOffset": 6312,
                  "charLength": 104,
                  "snippet": {
                    "text": "\t\tsetLoading(true)\n\t\tawait campaignService.deleteCampaign(campaign?.id)\n\t\trefresh()\n\t\tsetCampaign({})\n\t}"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f5b54f302f4c4d1f16b9bb732280bc8af43e3f7366ff5acb457e30245b23ec21"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/send-campaign/src/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 21,
                  "charOffset": 20,
                  "charLength": 7,
                  "snippet": {
                    "text": "\"./app\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 129,
                  "snippet": {
                    "text": "import { app } from \"./app\";\nimport { natsWrapper } from \"./nats-wrapper\";\nimport { ServiceInitializer } from \"@channel360/core\";"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "04b379fcbd88c56d1786211cba66f91c6a1833e8b58f45c393d118720595b9fa"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/sections/organization/groups/view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 23,
                  "charOffset": 953,
                  "charLength": 23,
                  "snippet": {
                    "text": "'../../../models/group'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 22,
                  "startColumn": 1,
                  "charOffset": 853,
                  "charLength": 148,
                  "snippet": {
                    "text": "import DeleteGroupForm from 'src/components/forms/groups/delete-group-form';\n\nimport { Group } from '../../../models/group';\n\nconst Groups = () => {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0650a1c5eef26f05c27d106fb67d4c000e0f000aa3b8f3e78c32074f981b57a6"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/templates/src/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 21,
                  "charOffset": 20,
                  "charLength": 7,
                  "snippet": {
                    "text": "'./app'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 126,
                  "snippet": {
                    "text": "import { app } from './app'\nimport { natsWrapper } from './nats-wrapper'\nimport { ServiceInitializer } from '@channel360/core'"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "189c80866f49d2278e7ca37cfb07fa405077cd581c983fdd857c4e7a3038f612"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/auth/signup.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 28,
                  "charOffset": 145,
                  "charLength": 37,
                  "snippet": {
                    "text": "'../../components/Layouts/AuthLayout'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 206,
                  "snippet": {
                    "text": "import { SignUpForm } from '../../components/forms/auth'\nimport { Title, Hero, SubHeader } from '../../components/UI'\nimport { AuthLayout } from '../../components/Layouts/AuthLayout'\n\nconst SignUp = () => ("
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "25bce2a86a2e557e2334a2eceacf6e875369cb93b9ecd10e53cdeb72cf5caed0"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 21,
                  "charOffset": 20,
                  "charLength": 7,
                  "snippet": {
                    "text": "\"./app\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 129,
                  "snippet": {
                    "text": "import { app } from \"./app\";\nimport { natsWrapper } from \"./nats-wrapper\";\nimport { ServiceInitializer } from \"@channel360/core\";"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "26c5ba92ccc19a3afb7191cb68d0ea0a4fc8b270e494ffaf6a6d5d70b1d9127e"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/notification-status/src/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 21,
                  "charOffset": 20,
                  "charLength": 7,
                  "snippet": {
                    "text": "\"./app\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 129,
                  "snippet": {
                    "text": "import { app } from \"./app\";\nimport { natsWrapper } from \"./nats-wrapper\";\nimport { ServiceInitializer } from \"@channel360/core\";"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "301076c0eeed46fe0fe1c3babe0b868699ba55ac16655d3c9b2fd291f826d790"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/subscriber/src/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 21,
                  "charOffset": 20,
                  "charLength": 7,
                  "snippet": {
                    "text": "\"./app\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 129,
                  "snippet": {
                    "text": "import { app } from \"./app\";\nimport { natsWrapper } from \"./nats-wrapper\";\nimport { ServiceInitializer } from \"@channel360/core\";"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "38ddfbb342c4e46a2f0e46918aabedeb1f5398e8c209e49f1b9fb114b185b3a0"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/organization/src/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 21,
                  "charOffset": 20,
                  "charLength": 7,
                  "snippet": {
                    "text": "\"./app\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 129,
                  "snippet": {
                    "text": "import { app } from \"./app\";\nimport { natsWrapper } from \"./nats-wrapper\";\nimport { ServiceInitializer } from \"@channel360/core\";"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "39b08791a2aa04707075977da787afee35d8dedf3e35b19f6779b53eae0c1f75"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/send-campaign/src/__mocks__/subscriber-service.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 31,
                  "charOffset": 30,
                  "charLength": 22,
                  "snippet": {
                    "text": "\"../models/subscriber\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 87,
                  "snippet": {
                    "text": "import {SubscriberAttrs} from \"../models/subscriber\";\nimport mongoose from \"mongoose\";\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3b575329199c0423688d2b14124d877080d21ac4b7e83e73e8b026157ba8ba01"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/auth/src/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 21,
                  "charOffset": 66,
                  "charLength": 7,
                  "snippet": {
                    "text": "\"./app\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 161,
                  "snippet": {
                    "text": "import { natsWrapper } from \"./nats-wrapper\";\nimport { app } from \"./app\";\nimport { ServiceInitializer } from \"@channel360/core\";\nimport {config} from 'aws-sdk';"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3ca50318f336a1c769e4aba34bd921e64a6ce4130e79176918f47e40a19597a9"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/forms/subscriber/NotificationForm.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 46,
                  "charOffset": 188,
                  "charLength": 21,
                  "snippet": {
                    "text": "'components/UI/index'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 2,
                  "startColumn": 1,
                  "charOffset": 34,
                  "charLength": 230,
                  "snippet": {
                    "text": "import { Box, InputLabel, Typography } from '@mui/material'\nimport makeStyles from '@mui/styles/makeStyles';\nimport { CapturedAtCreationTimeFields } from 'components/UI/index'\nconst useStyles = makeStyles((theme) => ({\n\tspecial: {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "4c8533547b4f6f2ec8b5739a535dd30152ed2db28e16c23be4078bfb5d0c8ecc"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/plan/src/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 21,
                  "charOffset": 20,
                  "charLength": 7,
                  "snippet": {
                    "text": "\"./app\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 129,
                  "snippet": {
                    "text": "import { app } from \"./app\";\nimport { natsWrapper } from \"./nats-wrapper\";\nimport { ServiceInitializer } from \"@channel360/core\";"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "4d8fa2469761e7a7f10151a5c03d94c0f5ee389c0b91b01df0b70715884e92fd"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/webhook/src/helpers/DeliveryEvent.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 29,
                  "charOffset": 272,
                  "charLength": 17,
                  "snippet": {
                    "text": "\"../nats-wrapper\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 110,
                  "charLength": 297,
                  "snippet": {
                    "text": "import { BadRequestError } from \"@channel360/core\";\nimport { NotificationStatusPublisher } from \"@publishers/notification-publisher\";\nimport { natsWrapper } from \"../nats-wrapper\";\nimport { DeliveryData } from \"@interfaces/DeliveryData\";\nimport { WebhookService } from \"@services/webhook.service\";"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "529a08c079996aaac1606fdc2895b6691ba770c62b3c2798d0dc29b6ff68c4cd"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/auth/forgot-password.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 28,
                  "charOffset": 167,
                  "charLength": 37,
                  "snippet": {
                    "text": "'../../components/Layouts/AuthLayout'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 32,
                  "charLength": 214,
                  "snippet": {
                    "text": "import { ForgotPasswordForm } from '../../components/forms/auth'\nimport { Hero } from '../../components/UI'\nimport { AuthLayout } from '../../components/Layouts/AuthLayout'\nimport Logo from '../../public/Logo.png'\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "61d357b3aab120c002318a3f808cdec7ab8f76ff45b51c01010aa73b9126905e"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/webhook/src/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 29,
                  "charOffset": 57,
                  "charLength": 16,
                  "snippet": {
                    "text": "\"./nats-wrapper\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 130,
                  "snippet": {
                    "text": "import { app } from \"./app\";\nimport { natsWrapper } from \"./nats-wrapper\";\nimport { ServiceInitializer } from \"@channel360/core\";\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6378840ca9332bb902bbe4616e49fcfaf81c815e627c2bd971e7f5130382289c"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/auth/hooks/use-auth-context.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 29,
                  "charOffset": 80,
                  "charLength": 29,
                  "snippet": {
                    "text": "'../context/jwt/auth-context'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 15,
                  "charLength": 170,
                  "snippet": {
                    "text": "import { useContext } from 'react';\n\nimport { AuthContext } from '../context/jwt/auth-context';\n\n// ----------------------------------------------------------------------"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6d89ff0b8ef75f978a39a21bd85c077449a74ceb3ec7f8ff66eccf72409927fb"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/webhook/src/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 21,
                  "charOffset": 20,
                  "charLength": 7,
                  "snippet": {
                    "text": "\"./app\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 129,
                  "snippet": {
                    "text": "import { app } from \"./app\";\nimport { natsWrapper } from \"./nats-wrapper\";\nimport { ServiceInitializer } from \"@channel360/core\";"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "74c7246bc12719a92e85331d56e2b56df2b6fa758f892c774ba89bfe48087403"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/ui-core/src/UI/hook-form/rhf-capture-at-creation-time.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 51,
                  "charOffset": 170,
                  "charLength": 21,
                  "snippet": {
                    "text": "\"../helper/functions\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 2,
                  "startColumn": 1,
                  "charOffset": 42,
                  "charLength": 194,
                  "snippet": {
                    "text": "import { useFieldArray, Controller, useFormContext } from \"react-hook-form\";\n\nimport { appendOnCreationTagsToFieldsArray } from \"../helper/functions\";\n\nimport { TextField } from \"@mui/material\";"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "774824e6008e36e0b9228a16eed11c7effc0c86fee202adae0c390fa9e696da9"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/forms/subscriber/AddImportSubscribersDialog.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 36,
                  "charOffset": 115,
                  "charLength": 24,
                  "snippet": {
                    "text": "'../../../components/UI'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 158,
                  "snippet": {
                    "text": "import React from 'react'\nimport { Control, FieldError } from 'react-hook-form'\nimport { UploadFile, Select } from '../../../components/UI'\n\ninterface Group {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "80967f390dac4d68860b57fee79c5361aea15b5559115e8551c64cdb67554794"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/send-notification/src/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 21,
                  "charOffset": 20,
                  "charLength": 7,
                  "snippet": {
                    "text": "\"./app\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 129,
                  "snippet": {
                    "text": "import { app } from \"./app\";\nimport { natsWrapper } from \"./nats-wrapper\";\nimport { ServiceInitializer } from \"@channel360/core\";"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8605fd2a7711e6776e35eb5e814ea7767ab228e877bf4407c556a398f9807bad"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/auth/landing-page.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 28,
                  "charOffset": 164,
                  "charLength": 37,
                  "snippet": {
                    "text": "'../../components/Layouts/AuthLayout'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 74,
                  "charLength": 193,
                  "snippet": {
                    "text": "\nimport { LandingPageForm } from '../../components/forms/auth'\nimport { AuthLayout } from '../../components/Layouts/AuthLayout'\nimport LandingPageImage from '../../public/LandingPageImage.png'\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8c6ba6e9441356d28639a1f3b68372cff68bac494b8c44f795107d77631d079b"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/UI/CapturedAtCreationTimeFields/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 51,
                  "charOffset": 204,
                  "charLength": 28,
                  "snippet": {
                    "text": "'../../../helpers/functions'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 4,
                  "startColumn": 1,
                  "charOffset": 111,
                  "charLength": 160,
                  "snippet": {
                    "text": "import { TextField } from '@mui/material'\n\nimport { appendOnCreationTagsToFieldsArray } from '../../../helpers/functions'\nimport { UploadFile } from '../../UI'\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8f2b9cce52b53799d3f9812de1221e35d6a5c55fbfcd6056872213c7a04e8215"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/__mocks__/subscriber-service.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 31,
                  "charOffset": 30,
                  "charLength": 22,
                  "snippet": {
                    "text": "\"../models/subscriber\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 87,
                  "snippet": {
                    "text": "import {SubscriberAttrs} from \"../models/subscriber\";\nimport mongoose from \"mongoose\";\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "904339097ae746d01aacb285137fa1c064dc04f6c83383e3367fcc3c2863fbd0"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/conversation-router/src/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 21,
                  "charOffset": 20,
                  "charLength": 7,
                  "snippet": {
                    "text": "\"./app\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 162,
                  "snippet": {
                    "text": "import { app } from \"./app\";\nimport { natsWrapper } from \"./nats-wrapper\";\nimport { OrganizationCreatedListener } from \"@listeners/organization-created-listener\";"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "96591ba9bb21d8dcb74e58f727bfc02d50632cc4372aac7b453490c2be60d941"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/forms/organization/invite/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 27,
                  "charOffset": 92,
                  "charLength": 29,
                  "snippet": {
                    "text": "'../../../UI/StyledTextField'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 146,
                  "snippet": {
                    "text": "import { Controller, Control, FieldError } from 'react-hook-form'\nimport { TextField } from '../../../UI/StyledTextField'\n\ninterface InviteProps {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a6d799fee444b075597ebf584123bc5bf937d4857dba456b5e03650979686a67"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/UI/ServerSideTable/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 30,
                  "charOffset": 678,
                  "charLength": 28,
                  "snippet": {
                    "text": "'../../../helpers/functions'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 28,
                  "startColumn": 1,
                  "charOffset": 530,
                  "charLength": 210,
                  "snippet": {
                    "text": "import { Popup, TimePicker } from '../../UI'\nimport { CustomNoRowsOverlay } from '../../../assets/CustomNoRowsOverlay'\nimport { handleExport } from '../../../helpers/functions'\n\ninterface ServerSideTableProps {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b795a65e133fb476f071412c4bdb5e5e34bed624fd29cee291ec8beeabacacca"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/forms/subscriber/AssignSubscribersDialog.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 24,
                  "charOffset": 23,
                  "charLength": 24,
                  "snippet": {
                    "text": "'../../../components/UI'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 127,
                  "snippet": {
                    "text": "import { Select } from '../../../components/UI'\n\nexport default function AssignSubscribersDialog({ groups, errors, control }) {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "bca2a1e80fca9ec20bea27c495ac8273328a7d6912e7766bbbee018752dfe80b"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/forms/campaign/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 46,
                  "charOffset": 254,
                  "charLength": 21,
                  "snippet": {
                    "text": "'components/UI/index'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 97,
                  "charLength": 222,
                  "snippet": {
                    "text": "import { InputLabel } from '@mui/material'\nimport { Select, TextInput, TimePicker, UploadFile } from '../../UI'\nimport { CapturedAtCreationTimeFields } from 'components/UI/index'\n\nconst useStyles = makeStyles((theme) => ({"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "bf544da1064224f34be9f416d58932d164df66f9414df6052d511a7d4edb0475"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/reports/src/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 21,
                  "charOffset": 54,
                  "charLength": 7,
                  "snippet": {
                    "text": "\"./app\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 91,
                  "snippet": {
                    "text": "import mongoose from \"mongoose\";\n\nimport { app } from \"./app\";\n\nconst start = async () => {"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c2f9ad6536c0bc5969fa603c44fe524e31c7ab2047f9842419992a9453293dcb"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Table.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 32,
                  "charOffset": 440,
                  "charLength": 18,
                  "snippet": {
                    "text": "'../components/UI'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 8,
                  "startColumn": 1,
                  "charOffset": 330,
                  "charLength": 169,
                  "snippet": {
                    "text": "import CloseIcon from '@mui/icons-material/Close'\nimport Link from 'next/link'\nimport { LoadingSpinner } from '../components/UI'\nimport { useRouter } from 'next/router'\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c49bc479d4afe10febaec454e8026d091b22d906704b79ec0c56087e92e11668"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/auth/hooks/use-auth-context.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 29,
                  "charOffset": 80,
                  "charLength": 29,
                  "snippet": {
                    "text": "'../context/jwt/auth-context'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 15,
                  "charLength": 170,
                  "snippet": {
                    "text": "import { useContext } from 'react';\n\nimport { AuthContext } from '../context/jwt/auth-context';\n\n// ----------------------------------------------------------------------"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c98f5f308d4688bf8f293a19145c60fae92a088e9b6f68394492a23aa38ade01"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/webhook/src/helpers/QuickReplyProcessor.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 29,
                  "charOffset": 113,
                  "charLength": 17,
                  "snippet": {
                    "text": "\"../nats-wrapper\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 241,
                  "snippet": {
                    "text": "import { CustomerResponsePublisher } from \"@publishers/customer-response-publisher\";\nimport { natsWrapper } from \"../nats-wrapper\";\nimport { DeliveryData } from \"@interfaces/DeliveryData\";\nimport { Notification } from \"@models/notification\";"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "dfc1ecb8cf32c52550af6d5fb2a0583a7b6733268cb82578150221f17c87b081"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/auth/signin.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 28,
                  "charOffset": 168,
                  "charLength": 37,
                  "snippet": {
                    "text": "'../../components/Layouts/AuthLayout'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 2,
                  "startColumn": 1,
                  "charOffset": 26,
                  "charLength": 213,
                  "snippet": {
                    "text": "import { SignInForm } from '../../components/forms/auth'\nimport { Header, Title, Hero } from '../../components/UI'\nimport { AuthLayout } from '../../components/Layouts/AuthLayout'\n\nconst SignIn: React.FC = () => ("
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "dff68f86f16d7864a0c98c27c236dab5dd50d98227c97ea078e75f31ff01071c"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/webhook/src/helpers/MessageProcessor.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 29,
                  "charOffset": 170,
                  "charLength": 17,
                  "snippet": {
                    "text": "\"../nats-wrapper\""
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 286,
                  "snippet": {
                    "text": "import { ModelFinder, NotFoundError } from \"@channel360/core\";\nimport { SubscriberOptPublisher } from \"@publishers/subscriber-opt-publisher\";\nimport { natsWrapper } from \"../nats-wrapper\";\nimport { Organization } from \"@models/organization\";\nimport { Settings } from \"@models/settings\";"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e20ff4c07781da0008aa0a62dad0ea96cda4be0fccdd8a69eb9b91a7ce262f04"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6PreferShortImport",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Import can be shortened",
            "markdown": "Import can be shortened"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/header.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 38,
                  "charOffset": 810,
                  "charLength": 18,
                  "snippet": {
                    "text": "'../components/UI'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "charOffset": 743,
                  "charLength": 209,
                  "snippet": {
                    "text": "import Link from 'next/link'\n\nimport { OrganizationSelector } from '../components/UI'\nimport { adminService, userService } from '../services'\nimport { AdminMenuListItems, MainMenuListItems } from './listItems'"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e32bbe19e42e82f59d84280e9c273f9ccf5bdd744ebd8f9386d61ccefda09d97"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantAwait",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant 'return await'",
            "markdown": "Redundant 'return await'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/organization/src/test/setup.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 3,
                  "charOffset": 1980,
                  "charLength": 25,
                  "snippet": {
                    "text": "return await user.save();"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 69,
                  "startColumn": 1,
                  "charOffset": 1940,
                  "charLength": 69,
                  "snippet": {
                    "text": "    email: \"testUser@test.com\",\n  });\n  return await user.save();\n};\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "51a4b40a6b36f6a1c80ff9f09e19099ee66cc22e49f6023dcec708f33ca63de1"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantAwait",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant 'return await'",
            "markdown": "Redundant 'return await'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/logging/src/routes/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 3,
                  "charOffset": 3490,
                  "charLength": 23,
                  "snippet": {
                    "text": "return await log.save()"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 152,
                  "startColumn": 1,
                  "charOffset": 3482,
                  "charLength": 36,
                  "snippet": {
                    "text": "\t\t})\n\n\t\treturn await log.save()\n\t}\n}"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "969268853b87b07fe036e19ab96d93224e75957915fcce19a7c3facd0f009b3c"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantAwait",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant 'await' for a non-promise type",
            "markdown": "Redundant 'await' for a non-promise type"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/auth/src/routes/legacy/admin/sign-in.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 28,
                  "charOffset": 822,
                  "charLength": 74,
                  "snippet": {
                    "text": "await Password.compare(\n      existingAdmin.password,\n      password\n    )"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 30,
                  "startColumn": 1,
                  "charOffset": 788,
                  "charLength": 190,
                  "snippet": {
                    "text": "    }\n\n    const passwordsMatch = await Password.compare(\n      existingAdmin.password,\n      password\n    )\n    if (!passwordsMatch) {\n      throw new BadRequestError('Invalid Credentials')"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a3eeec091027e04bcee52b5496b7ed0dbc5d3d787286b86c5cf07ee77edf578e"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantAwait",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant 'return await'",
            "markdown": "Redundant 'return await'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/organization/src/test/setup.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 3,
                  "charOffset": 2107,
                  "charLength": 29,
                  "snippet": {
                    "text": "return await roleUser.save();"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 77,
                  "startColumn": 1,
                  "charOffset": 2098,
                  "charLength": 42,
                  "snippet": {
                    "text": "  });\n\n  return await roleUser.save();\n};\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "bc00f2152fa4ff288f75e8f4e8336993d224f6c714c1c9595b5ce446b30b527e"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantAwait",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant 'await' for a non-promise type",
            "markdown": "Redundant 'await' for a non-promise type"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/auth/src/routes/api/sign-in.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 26,
                  "charOffset": 957,
                  "charLength": 65,
                  "snippet": {
                    "text": "await Password.compare(\n\t\t\texistingUser.password,\n\t\t\tpassword\n\t\t)"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 34,
                  "startColumn": 1,
                  "charOffset": 927,
                  "charLength": 172,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tconst passwordsMatch = await Password.compare(\n\t\t\texistingUser.password,\n\t\t\tpassword\n\t\t)\n\t\tif (!passwordsMatch) {\n\t\t\tthrow new BadRequestError('Invalid Credentials')"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "cc889f587a21df82b153c4350565030254e6697d4d69baa958a808a5999913b7"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantAwait",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant 'await' for a non-promise type",
            "markdown": "Redundant 'await' for a non-promise type"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/auth/src/routes/api/admin/sign-in.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 28,
                  "charOffset": 822,
                  "charLength": 74,
                  "snippet": {
                    "text": "await Password.compare(\n      existingAdmin.password,\n      password\n    )"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 30,
                  "startColumn": 1,
                  "charOffset": 788,
                  "charLength": 190,
                  "snippet": {
                    "text": "    }\n\n    const passwordsMatch = await Password.compare(\n      existingAdmin.password,\n      password\n    )\n    if (!passwordsMatch) {\n      throw new BadRequestError('Invalid Credentials')"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "def7d434a0421b59cdb7a8de688c1553fc4c0b6455101728ee6618e852d43443"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantNestingInTemplateLiteral",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant nesting in template literal",
            "markdown": "Redundant nesting in template literal"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/cypress/integration/pages/Broadcast/Campaigns.spec.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 24,
                  "charOffset": 2597,
                  "charLength": 3,
                  "snippet": {
                    "text": "${'"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 71,
                  "startColumn": 1,
                  "charOffset": 2446,
                  "charLength": 312,
                  "snippet": {
                    "text": "\t\t\tcy.get(`[data-value=${'cypress_image_tags_call_to_action'}]`).click()\n\t\t\tcy.get('[data-cy=\"test-subscriber-group\"]').click()\n\t\t\tcy.get(`[data-value=${'64254843e27979001a6eca1a'}]`).click()\n\t\t\tcy.get('[data-cy=\"popUp--button\"]').click()\n\t\t\tcy.get('[data-cy=\"popUp--button\"]').eq(1).should('be.visible').click()"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0828b39261a59de607af92533800bfb442ee92ced2fb3ce8d9636efc396c9531"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantNestingInTemplateLiteral",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant nesting in template literal",
            "markdown": "Redundant nesting in template literal"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/cypress/integration/pages/Broadcast/Campaigns.spec.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 24,
                  "charOffset": 1675,
                  "charLength": 3,
                  "snippet": {
                    "text": "${'"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 47,
                  "startColumn": 1,
                  "charOffset": 1535,
                  "charLength": 301,
                  "snippet": {
                    "text": "\t\t\tcy.get('[data-cy=\"onCampaign__Tag 4\"]').type('DeclineURL')\n\t\t\tcy.get('[data-cy=\"test-subscriber-group\"]').click()\n\t\t\tcy.get(`[data-value=${'64254843e27979001a6eca1a'}]`).click()\n\t\t\tcy.get('[data-cy=\"popUp--button\"]').click()\n\t\t\tcy.get('[data-cy=\"popUp--button\"]').eq(1).should('be.visible').click()"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0e048ebe497252b7a5c4d72c954b99517daeac3c6f74ec114f05abdd6056b273"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantNestingInTemplateLiteral",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant nesting in template literal",
            "markdown": "Redundant nesting in template literal"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/cypress/integration/pages/Broadcast/SubscriberGroups.spec.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 35,
                  "charOffset": 1611,
                  "charLength": 3,
                  "snippet": {
                    "text": "${'"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 45,
                  "startColumn": 1,
                  "charOffset": 1495,
                  "charLength": 186,
                  "snippet": {
                    "text": "\tdescribe('HOW to delete a group', () => {\n\t\tit('SHOULD open the dialog', () => {\n\t\t\tcy.get(`[data-cy=\"delete_groups${'Group123'}\"]`).click()\n\t\t})\n\t\tit('SHOULD confirm deletion', () => {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "184454a026c2d926289897f96d7ffb8481a38e9fc9c4367bac84c675683f35b3"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantNestingInTemplateLiteral",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant nesting in template literal",
            "markdown": "Redundant nesting in template literal"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/cypress/integration/pages/Broadcast/Campaigns.spec.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 51,
                  "charOffset": 1702,
                  "charLength": 2,
                  "snippet": {
                    "text": "'}"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 47,
                  "startColumn": 1,
                  "charOffset": 1535,
                  "charLength": 301,
                  "snippet": {
                    "text": "\t\t\tcy.get('[data-cy=\"onCampaign__Tag 4\"]').type('DeclineURL')\n\t\t\tcy.get('[data-cy=\"test-subscriber-group\"]').click()\n\t\t\tcy.get(`[data-value=${'64254843e27979001a6eca1a'}]`).click()\n\t\t\tcy.get('[data-cy=\"popUp--button\"]').click()\n\t\t\tcy.get('[data-cy=\"popUp--button\"]').eq(1).should('be.visible').click()"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3024862e82d4035b6ad5a9239ddad10a77b488e6e70b6cba4cfe30eeadcc57cc"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantNestingInTemplateLiteral",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant nesting in template literal",
            "markdown": "Redundant nesting in template literal"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/cypress/integration/pages/Broadcast/SubscriberGroups.spec.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 33,
                  "charOffset": 907,
                  "charLength": 3,
                  "snippet": {
                    "text": "${'"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 27,
                  "startColumn": 1,
                  "charOffset": 795,
                  "charLength": 215,
                  "snippet": {
                    "text": "\tdescribe('HOW to edit a group', () => {\n\t\tit('SHOULD open the dialog', () => {\n\t\t\tcy.get(`[data-cy=\"edit_groups${'GroupXYZ'}\"]`).click()\n\t\t})\n\t\tit('SHOULD clear the dialog ,enter desired values,and submit', () => {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "49e80a6ef9398dde72959251d9922660bd238075564675f104a66b91157f0c39"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantNestingInTemplateLiteral",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant nesting in template literal",
            "markdown": "Redundant nesting in template literal"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/cypress/integration/pages/Broadcast/Campaigns.spec.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 51,
                  "charOffset": 2624,
                  "charLength": 2,
                  "snippet": {
                    "text": "'}"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 71,
                  "startColumn": 1,
                  "charOffset": 2446,
                  "charLength": 312,
                  "snippet": {
                    "text": "\t\t\tcy.get(`[data-value=${'cypress_image_tags_call_to_action'}]`).click()\n\t\t\tcy.get('[data-cy=\"test-subscriber-group\"]').click()\n\t\t\tcy.get(`[data-value=${'64254843e27979001a6eca1a'}]`).click()\n\t\t\tcy.get('[data-cy=\"popUp--button\"]').click()\n\t\t\tcy.get('[data-cy=\"popUp--button\"]').eq(1).should('be.visible').click()"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5a41eba5068c6667d563907b16045c21a6f7e0ccae6c98819aa43143f77add58"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantNestingInTemplateLiteral",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant nesting in template literal",
            "markdown": "Redundant nesting in template literal"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/cypress/integration/pages/Broadcast/SubscriberGroups.spec.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 44,
                  "charOffset": 918,
                  "charLength": 2,
                  "snippet": {
                    "text": "'}"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 27,
                  "startColumn": 1,
                  "charOffset": 795,
                  "charLength": 215,
                  "snippet": {
                    "text": "\tdescribe('HOW to edit a group', () => {\n\t\tit('SHOULD open the dialog', () => {\n\t\t\tcy.get(`[data-cy=\"edit_groups${'GroupXYZ'}\"]`).click()\n\t\t})\n\t\tit('SHOULD clear the dialog ,enter desired values,and submit', () => {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "86ffe32bfc7a6d37bbbb2fce7a93f322b0b946e9ffd83a1b68860aa1e40e64cb"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantNestingInTemplateLiteral",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant nesting in template literal",
            "markdown": "Redundant nesting in template literal"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/cypress/integration/pages/Broadcast/Campaigns.spec.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 18,
                  "charOffset": 935,
                  "charLength": 3,
                  "snippet": {
                    "text": "${'"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 27,
                  "startColumn": 1,
                  "charOffset": 860,
                  "charLength": 137,
                  "snippet": {
                    "text": "\t\t\tcy.get('[data-cy=\"test-template\"]').click()\n\t\t\tcy.get(\n\t\t\t\t`[data-value=${'cypress_image_oncampaigntags_calltoaction'}]`\n\t\t\t).click()\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c5e4a39d841d8463e6c0b905a78653f6b7886fca7dacb3a149d0eed1c33941c2"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantNestingInTemplateLiteral",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant nesting in template literal",
            "markdown": "Redundant nesting in template literal"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/cypress/integration/pages/Broadcast/Campaigns.spec.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 62,
                  "charOffset": 979,
                  "charLength": 2,
                  "snippet": {
                    "text": "'}"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 27,
                  "startColumn": 1,
                  "charOffset": 860,
                  "charLength": 137,
                  "snippet": {
                    "text": "\t\t\tcy.get('[data-cy=\"test-template\"]').click()\n\t\t\tcy.get(\n\t\t\t\t`[data-value=${'cypress_image_oncampaigntags_calltoaction'}]`\n\t\t\t).click()\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "d2deff2423950d843d4e41edc421c3f3b50f7c776489d613ccdcd41889d55bb9"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantNestingInTemplateLiteral",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant nesting in template literal",
            "markdown": "Redundant nesting in template literal"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/cypress/integration/pages/Broadcast/Campaigns.spec.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 24,
                  "charOffset": 2469,
                  "charLength": 3,
                  "snippet": {
                    "text": "${'"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 69,
                  "startColumn": 1,
                  "charOffset": 2330,
                  "charLength": 307,
                  "snippet": {
                    "text": "\t\t\tcy.get('[data-cy=\"test-reference\"]').type('Automated Image Test')\n\t\t\tcy.get('[data-cy=\"test-template\"]').click()\n\t\t\tcy.get(`[data-value=${'cypress_image_tags_call_to_action'}]`).click()\n\t\t\tcy.get('[data-cy=\"test-subscriber-group\"]').click()\n\t\t\tcy.get(`[data-value=${'64254843e27979001a6eca1a'}]`).click()"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e08af888ac31d3cf7ccf28ade30312e36e7d138307343df73e0b1d6346330b83"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantNestingInTemplateLiteral",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant nesting in template literal",
            "markdown": "Redundant nesting in template literal"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/cypress/integration/pages/Broadcast/SubscriberGroups.spec.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 46,
                  "charOffset": 1622,
                  "charLength": 2,
                  "snippet": {
                    "text": "'}"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 45,
                  "startColumn": 1,
                  "charOffset": 1495,
                  "charLength": 186,
                  "snippet": {
                    "text": "\tdescribe('HOW to delete a group', () => {\n\t\tit('SHOULD open the dialog', () => {\n\t\t\tcy.get(`[data-cy=\"delete_groups${'Group123'}\"]`).click()\n\t\t})\n\t\tit('SHOULD confirm deletion', () => {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ef6c7349ab8a98db45c22cb5c38c364a4e51ca7b99224b18e07e47331dcc3403"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6RedundantNestingInTemplateLiteral",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Redundant nesting in template literal",
            "markdown": "Redundant nesting in template literal"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/cypress/integration/pages/Broadcast/Campaigns.spec.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 60,
                  "charOffset": 2505,
                  "charLength": 2,
                  "snippet": {
                    "text": "'}"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 69,
                  "startColumn": 1,
                  "charOffset": 2330,
                  "charLength": 307,
                  "snippet": {
                    "text": "\t\t\tcy.get('[data-cy=\"test-reference\"]').type('Automated Image Test')\n\t\t\tcy.get('[data-cy=\"test-template\"]').click()\n\t\t\tcy.get(`[data-value=${'cypress_image_tags_call_to_action'}]`).click()\n\t\t\tcy.get('[data-cy=\"test-subscriber-group\"]').click()\n\t\t\tcy.get(`[data-value=${'64254843e27979001a6eca1a'}]`).click()"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "eff8a82f630d2ac05790f1e31c8151b72822cdc56bf7dc6573bed82c9cc43f66"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import Select from \"@mui/material/Select\";",
            "markdown": "Unused import Select from \"@mui/material/Select\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/WhatsappIntegrations/BrandInformation.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 1,
                  "charOffset": 280,
                  "charLength": 42,
                  "snippet": {
                    "text": "import Select from \"@mui/material/Select\";"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 9,
                  "startColumn": 1,
                  "charOffset": 180,
                  "charLength": 230,
                  "snippet": {
                    "text": "import MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0207952495f304d18e3b378dd821e6204cc739aff5ad3edf98ff8a2d7c9973cf"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import Router from 'next/router'",
            "markdown": "Unused import Router from 'next/router'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/services/template.service.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 1,
                  "charOffset": 36,
                  "charLength": 32,
                  "snippet": {
                    "text": "import Router from 'next/router'"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 111,
                  "snippet": {
                    "text": "import getConfig from 'next/config'\nimport Router from 'next/router'\n\nimport { fetchWrapper } from '../helpers'"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "038a5df361313105888ce78df24488a61a6ce75b11d851c6e080c1561dfdfba3"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import { useState, useEffect } from \"react\";",
            "markdown": "Unused import { useState, useEffect } from \"react\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/signin.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 44,
                  "snippet": {
                    "text": "import { useState, useEffect } from \"react\";"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 137,
                  "snippet": {
                    "text": "import { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport useRequest from \"../../hooks/use-request\";"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "113cc5f06c37ec8c71ce1dde711d16eed4c384da969420666bef75bbac108413"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import specifier useState",
            "markdown": "Unused import specifier useState"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/forms/templates/EditTag.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 17,
                  "charOffset": 16,
                  "charLength": 8,
                  "snippet": {
                    "text": "useState"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 94,
                  "snippet": {
                    "text": "import React, { useState } from 'react'\nimport { FieldError, Control } from 'react-hook-form'\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "26fdb653b4f7ad96d72d2244b213619825310ecaf2653e60f4e208e7b7270ce5"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import {OrganizationDoc} from \"src/models/organization\";",
            "markdown": "Unused  \nimport {OrganizationDoc} from \"src/models/organization\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/send-campaign/src/models/settings.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 99,
                  "charLength": 56,
                  "snippet": {
                    "text": "import {OrganizationDoc} from \"src/models/organization\";"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 182,
                  "snippet": {
                    "text": "import mongoose from \"mongoose\";\nimport {updateIfCurrentPlugin} from \"mongoose-update-if-current\";\nimport {OrganizationDoc} from \"src/models/organization\";\n\ninterface SettingsAttrs {"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3115d2bb130779427893174705fa2f6f05ec47f8fe2a9572dda3895aea307513"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import useRequest from \"../../hooks/use-request\";",
            "markdown": "Unused  \nimport useRequest from \"../../hooks/use-request\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/signin.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 88,
                  "charLength": 49,
                  "snippet": {
                    "text": "import useRequest from \"../../hooks/use-request\";"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 229,
                  "snippet": {
                    "text": "import { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport useRequest from \"../../hooks/use-request\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "38c2ef4610aabd5d13aa77cb92288d48542551387ba04dfb9d4352f428964ea7"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import InputLabel from \"@mui/material/InputLabel\";",
            "markdown": "Unused  \nimport InputLabel from \"@mui/material/InputLabel\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/WhatsappIntegrations/BrandInformation.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 1,
                  "charOffset": 129,
                  "charLength": 50,
                  "snippet": {
                    "text": "import InputLabel from \"@mui/material/InputLabel\";"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 6,
                  "startColumn": 1,
                  "charOffset": 70,
                  "charLength": 209,
                  "snippet": {
                    "text": "} from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "399442478e01b3448358f4217fa297e355a2e1818698911b92b3b749cac7993f"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import specifier Control",
            "markdown": "Unused import specifier Control"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/ui-core/src/UI/hook-form/rhf-upload-file.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 10,
                  "charOffset": 61,
                  "charLength": 7,
                  "snippet": {
                    "text": "Control"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 238,
                  "snippet": {
                    "text": "import React from \"react\";\nimport Case from \"case\";\nimport { Control, Controller, useFormContext } from \"react-hook-form\";\nimport { Button, styled, Box } from \"@mui/material\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "40aec18bceb5b615c9e7fc6251130aaabba76093102d2968730f8e76583cbb24"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import { useSelector } from 'react-redux'",
            "markdown": "Unused import { useSelector } from 'react-redux'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/campaigns/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 1,
                  "charOffset": 157,
                  "charLength": 41,
                  "snippet": {
                    "text": "import { useSelector } from 'react-redux'"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 75,
                  "charLength": 187,
                  "snippet": {
                    "text": "import { useRouter } from 'next/router'\nimport { useForm } from 'react-hook-form'\nimport { useSelector } from 'react-redux'\n\nimport { Typography, Stack, Box, Button } from '@mui/material'"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "423fa3286e82fc7c6a30d50e947becf6977e2ab4851956665f6fb7134733a634"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import specifier Fragment",
            "markdown": "Unused import specifier Fragment"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/EditUserDialog.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 31,
                  "charOffset": 30,
                  "charLength": 8,
                  "snippet": {
                    "text": "Fragment"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 140,
                  "snippet": {
                    "text": "import { useState, useEffect, Fragment } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5648315e31220bf164c0e8ceff7dde308e13c76fee0617f46184c7af61d0797f"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import specifier MultipleFieldErrors",
            "markdown": "Unused import specifier MultipleFieldErrors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/UI/TextInput/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 31,
                  "charOffset": 30,
                  "charLength": 19,
                  "snippet": {
                    "text": "MultipleFieldErrors"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 134,
                  "snippet": {
                    "text": "import { Controller, Control, MultipleFieldErrors } from 'react-hook-form'\n\nimport { TextFieldProps, InputProps } from '@mui/material'"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "574af3b3bc4c4b98790f4e1f7e205ae458a87da1f8e7d1e0ae8ab63c77e90c1c"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import Router from 'next/router'",
            "markdown": "Unused import Router from 'next/router'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/services/organization.service.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 1,
                  "charOffset": 36,
                  "charLength": 32,
                  "snippet": {
                    "text": "import Router from 'next/router'"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 111,
                  "snippet": {
                    "text": "import getConfig from 'next/config'\nimport Router from 'next/router'\n\nimport { fetchWrapper } from '../helpers'"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "64b0e276f50400fde9014795b94b13bcadc8fcf88131af09aa8d21023d521ad3"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import specifier FieldError",
            "markdown": "Unused import specifier FieldError"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/UI/UploadFile/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 31,
                  "charOffset": 77,
                  "charLength": 10,
                  "snippet": {
                    "text": "FieldError"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 188,
                  "snippet": {
                    "text": "import { TextField } from '../StyledTextField'\nimport { Control, Controller, FieldError } from 'react-hook-form'\nimport Case from 'case'\nimport { Button, styled, Box } from '@mui/material'"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6ec48edbc88e369ed1b8917368d1119ed315787ab7c1120cb3910f5a4a6159c6"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import specifier screen",
            "markdown": "Unused import specifier screen"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/forms/groups/AddGroupForm.test.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 18,
                  "charOffset": 43,
                  "charLength": 6,
                  "snippet": {
                    "text": "screen"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 158,
                  "snippet": {
                    "text": "import React from 'react'\nimport { render, screen } from '@testing-library/react'\nimport '@testing-library/jest-dom'\nimport AddGroupForm from './AddGroupForm'"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "873012849ce2dd2a315c6257e4a5ba887fb71880405553117fe338d649b1ef38"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import useRequest from \"../../hooks/use-request\";",
            "markdown": "Unused  \nimport useRequest from \"../../hooks/use-request\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/store/reducers/user.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 82,
                  "charLength": 49,
                  "snippet": {
                    "text": "import useRequest from \"../../hooks/use-request\";"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 212,
                  "snippet": {
                    "text": "import { useState } from \"react\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport useRequest from \"../../hooks/use-request\";\nimport { notificationActions } from \"./notification\";\nimport axios from \"axios\";"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8b13193ec20171137d15f54243b2a1c4dfc80ffbb7c6c3c79dd8d44ad171f79f"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import MenuItem from \"@mui/material/MenuItem\";",
            "markdown": "Unused  \nimport MenuItem from \"@mui/material/MenuItem\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/WhatsappIntegrations/BrandInformation.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "charOffset": 180,
                  "charLength": 46,
                  "snippet": {
                    "text": "import MenuItem from \"@mui/material/MenuItem\";"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 7,
                  "startColumn": 1,
                  "charOffset": 86,
                  "charLength": 236,
                  "snippet": {
                    "text": "import { useDispatch } from \"react-redux\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "945abfc01cc419a3f065c6a0231eeb7a382224d91d5520b61a5662c52ec190ba"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import {SubscriberAttrs} from \"../models/subscriber\";",
            "markdown": "Unused  \nimport {SubscriberAttrs} from \"../models/subscriber\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/__mocks__/subscriber-service.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 53,
                  "snippet": {
                    "text": "import {SubscriberAttrs} from \"../models/subscriber\";"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 87,
                  "snippet": {
                    "text": "import {SubscriberAttrs} from \"../models/subscriber\";\nimport mongoose from \"mongoose\";\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "953dbac64908e6a47410f177af64d0eff9860b27db6e5cb6721c1f54e0faa246"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import DataGrid from './DataGrid';",
            "markdown": "Unused import DataGrid from './DataGrid';"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/theme/overrides/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 1,
                  "charOffset": 745,
                  "charLength": 34,
                  "snippet": {
                    "text": "import DataGrid from './DataGrid';"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 25,
                  "startColumn": 1,
                  "charOffset": 679,
                  "charLength": 170,
                  "snippet": {
                    "text": "import Popover from './Popover';\nimport Stepper from './Stepper';\nimport DataGrid from './DataGrid';\nimport Skeleton from './Skeleton';\nimport Backdrop from './Backdrop';"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "95e41abd87bb413b14304c09313abcd6b19a1ad9deb286a9660bd423ca29394f"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import { Component, Tag } from \"./template-events\";",
            "markdown": "Unused  \nimport { Component, Tag } from \"./template-events\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/Core/src/events/smooch-app-events.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 1,
                  "charOffset": 39,
                  "charLength": 51,
                  "snippet": {
                    "text": "import { Component, Tag } from \"./template-events\";"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 132,
                  "snippet": {
                    "text": "import { Subjects } from \"./subjects\";\nimport { Component, Tag } from \"./template-events\";\n\nexport interface SmoochAppCreatedEvent {"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "967df32682c69cb0a0f132b0fe25d8a7ebb465f1d5d59a3c057ac9649513c4ce"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import Grid from \"@mui/material/Grid\";",
            "markdown": "Unused import Grid from \"@mui/material/Grid\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/EditTemplateContent.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "charOffset": 377,
                  "charLength": 38,
                  "snippet": {
                    "text": "import Grid from \"@mui/material/Grid\";"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 8,
                  "startColumn": 1,
                  "charOffset": 281,
                  "charLength": 244,
                  "snippet": {
                    "text": "import TextField from \"@mui/material/TextField\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TableRow from '@mui/material/TableRow';"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "9c3ece9c7bfa1a4aa916b756115e8820c92592adde28224fe86ee7596e738205"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import TableCell from '@mui/material/TableCell';",
            "markdown": "Unused  \nimport TableCell from '@mui/material/TableCell';"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/EditTemplateContent.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "charOffset": 526,
                  "charLength": 48,
                  "snippet": {
                    "text": "import TableCell from '@mui/material/TableCell';"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 11,
                  "startColumn": 1,
                  "charOffset": 416,
                  "charLength": 214,
                  "snippet": {
                    "text": "import FormControlLabel from '@mui/material/FormControlLabel';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nconst useStyles = makeStyles((theme) => ({\n  special: {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "aa28b91194c12782afb3c92a1a4befc3de116115aaf0ba2fd556b7fec7366626"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import specifier ReactNode",
            "markdown": "Unused import specifier ReactNode"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/UI/CustomDataGrid/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 20,
                  "charOffset": 19,
                  "charLength": 9,
                  "snippet": {
                    "text": "ReactNode"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 53,
                  "snippet": {
                    "text": "import { useState, ReactNode } from 'react'\n\nimport {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b57935f8802d9ff10c0d68741bf7f54894e72c7342b31aa0b3e1fae9f770e5ee"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import Lists from './List';",
            "markdown": "Unused import Lists from './List';"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/theme/overrides/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 1,
                  "charOffset": 163,
                  "charLength": 27,
                  "snippet": {
                    "text": "import Lists from './List';"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 6,
                  "startColumn": 1,
                  "charOffset": 109,
                  "charLength": 139,
                  "snippet": {
                    "text": "import Menu from './Menu';\nimport Link from './Link';\nimport Lists from './List';\nimport Table from './Table';\nimport Alert from './Alert';"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b57beadbbb06090d3c3032d4b60a1f13701e5ba87f946204b9b308d99afc6e9d"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import specifier useEffect",
            "markdown": "Unused import specifier useEffect"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/NotificationItem.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 10,
                  "charOffset": 9,
                  "charLength": 9,
                  "snippet": {
                    "text": "useEffect"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 86,
                  "snippet": {
                    "text": "import { useEffect, useState } from \"react\";\nimport Alert from \"@mui/material/Alert\";\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b704829aa6555a68f2a41dc1ead33772b16e3d145ade6a1ffc6535f659dd597c"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import {SubscriberAttrs} from \"../models/subscriber\";",
            "markdown": "Unused  \nimport {SubscriberAttrs} from \"../models/subscriber\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/send-campaign/src/__mocks__/subscriber-service.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 53,
                  "snippet": {
                    "text": "import {SubscriberAttrs} from \"../models/subscriber\";"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 87,
                  "snippet": {
                    "text": "import {SubscriberAttrs} from \"../models/subscriber\";\nimport mongoose from \"mongoose\";\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c0a9d9ce85d88c2ed58731cbf892590ad1ee45ceefcba1b54fbe080e5248038e"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import { useEffect } from \"react\";",
            "markdown": "Unused import { useEffect } from \"react\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Notification.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 34,
                  "snippet": {
                    "text": "import { useEffect } from \"react\";"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 141,
                  "snippet": {
                    "text": "import { useEffect } from \"react\";\nimport NotificationItem from \"./NotificationItem\";\nimport { useSelector, useDispatch } from \"react-redux\";"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c0aa5062e661916f46f10fd7018b555821775e860d9e342d23be7d3bcb028033"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import specifier alpha",
            "markdown": "Unused import specifier alpha"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/sections/organization/dashboard/view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 10,
                  "charOffset": 264,
                  "charLength": 5,
                  "snippet": {
                    "text": "alpha"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 11,
                  "startColumn": 1,
                  "charOffset": 224,
                  "charLength": 155,
                  "snippet": {
                    "text": "} from '@channel360/ui-core';\n\nimport { alpha, useTheme } from '@mui/material/styles';\nimport { Grid, Stack, Container, Typography } from '@mui/material';\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c0f828e9fb5739fb8e37089bdf82683405f2c811ad9cf81a0597d7a14acb5d8c"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import specifier handleExport",
            "markdown": "Unused import specifier handleExport"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/campaigns/[campaignId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 40,
                  "charOffset": 654,
                  "charLength": 12,
                  "snippet": {
                    "text": "handleExport"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "charOffset": 566,
                  "charLength": 176,
                  "snippet": {
                    "text": "\tProgressBar,\n} from '../../../../components/UI'\nimport { createProgressLineChartArray, handleExport } from '../../../../helpers'\nimport Skeleton from '@mui/material/Skeleton'\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c3f89c3c7c3ac608b7731ee0fe966828d11bee2a8eb2575f6ae7182dd843ab0d"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import specifier ModelFinder",
            "markdown": "Unused import specifier ModelFinder"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/routes/new.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 49,
                  "charOffset": 102,
                  "charLength": 11,
                  "snippet": {
                    "text": "ModelFinder"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 235,
                  "snippet": {
                    "text": "import express, { Request, Response } from \"express\";\nimport { validateRequest, BadRequestError, Tag, ModelFinder } from \"@channel360/core\";\nimport { body } from \"express-validator\";\nimport { Organization } from \"@models/organization\";"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c8a6b1b3ce3b2a6dc82c5cf01bb6794c00f7d4e91fde27d7a901b275bece8381"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import Case from \"case\";",
            "markdown": "Unused import Case from \"case\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/ui-core/src/UI/Popup/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 1,
                  "charOffset": 32,
                  "charLength": 24,
                  "snippet": {
                    "text": "import Case from \"case\";"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 66,
                  "snippet": {
                    "text": "import * as React from \"react\";\nimport Case from \"case\";\n\nimport {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "d668c4b963529801716f3114c6f25fecff2ed3f3ab72c33947b42c7123b38b3c"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import specifier Button",
            "markdown": "Unused import specifier Button"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/ui-core/src/UI/hook-form/rhf-range-selector.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 22,
                  "charOffset": 91,
                  "charLength": 6,
                  "snippet": {
                    "text": "Button"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 181,
                  "snippet": {
                    "text": "import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Box, Stack, Button } from \"@mui/material\";\n\nimport { RHFDateTimePicker, FormProvider } from \"./index\";"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "d747e5b6dc9682472c5958778899425583abe1b4753f20f7c75794929312b89e"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import {OrganizationDoc} from \"./organization\";",
            "markdown": "Unused  \nimport {OrganizationDoc} from \"./organization\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/logging/src/models/customer.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 99,
                  "charLength": 47,
                  "snippet": {
                    "text": "import {OrganizationDoc} from \"./organization\";"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 173,
                  "snippet": {
                    "text": "import mongoose from \"mongoose\";\nimport {updateIfCurrentPlugin} from \"mongoose-update-if-current\";\nimport {OrganizationDoc} from \"./organization\";\n\ninterface CustomerAttrs {"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "d9cc9e7574fadb287162fedb5fb98c49a68f4a952c975938a7837ce8297206e2"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import FormControl from \"@mui/material/FormControl\";",
            "markdown": "Unused  \nimport FormControl from \"@mui/material/FormControl\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/WhatsappIntegrations/BrandInformation.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "charOffset": 227,
                  "charLength": 52,
                  "snippet": {
                    "text": "import FormControl from \"@mui/material/FormControl\";"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 8,
                  "startColumn": 1,
                  "charOffset": 129,
                  "charLength": 242,
                  "snippet": {
                    "text": "import InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport TextField from \"@mui/material/TextField\";"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e1ad24f58a69eb0f0b90d0d2679b0972bd74d38cab4535ebda4a8b0efd16fcbe"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import TableRow from '@mui/material/TableRow';",
            "markdown": "Unused  \nimport TableRow from '@mui/material/TableRow';"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/EditTemplateContent.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 1,
                  "charOffset": 479,
                  "charLength": 46,
                  "snippet": {
                    "text": "import TableRow from '@mui/material/TableRow';"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 10,
                  "startColumn": 1,
                  "charOffset": 377,
                  "charLength": 240,
                  "snippet": {
                    "text": "import Grid from \"@mui/material/Grid\";\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nconst useStyles = makeStyles((theme) => ({"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e31df1f702d10f8e004564e52728a281ff1a4744cf102ed5d411c6ca4271f3ae"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import specifier useState",
            "markdown": "Unused import specifier useState"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/ui-core/src/UI/hook-form/Form.stories.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 17,
                  "charOffset": 16,
                  "charLength": 8,
                  "snippet": {
                    "text": "useState"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 84,
                  "snippet": {
                    "text": "import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e69a290c79febb845ca59774205bac3bee9e419bb4dbd4df4457bc74e96b6eef"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import * as yup from 'yup'",
            "markdown": "Unused import \\* as yup from 'yup'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/[subscriberId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 1,
                  "charOffset": 960,
                  "charLength": 26,
                  "snippet": {
                    "text": "import * as yup from 'yup'"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 22,
                  "startColumn": 1,
                  "charOffset": 864,
                  "charLength": 303,
                  "snippet": {
                    "text": "import { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as yup from 'yup'\nimport NotificationForm from '../../../../components/forms/subscriber/NotificationForm'\nimport { notificaitonValidationSchema } from '../../../../helpers/validations/notifications'"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e7486c81a7f8c98e8b2e31a5e18eda03ae79d0e93c0b128a9e09e5bc8f354e5c"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import Table from './Table';",
            "markdown": "Unused import Table from './Table';"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/theme/overrides/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "charOffset": 191,
                  "charLength": 28,
                  "snippet": {
                    "text": "import Table from './Table';"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 7,
                  "startColumn": 1,
                  "charOffset": 136,
                  "charLength": 141,
                  "snippet": {
                    "text": "import Link from './Link';\nimport Lists from './List';\nimport Table from './Table';\nimport Alert from './Alert';\nimport Badge from './Badge';"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ed51720b82e379f47e6e52a7018460024146aac25514ca9cdc60df18048d7265"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ES6UnusedImports",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused import { useState } from \"react\";",
            "markdown": "Unused import { useState } from \"react\";"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/store/reducers/user.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 33,
                  "snippet": {
                    "text": "import { useState } from \"react\";"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 131,
                  "snippet": {
                    "text": "import { useState } from \"react\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport useRequest from \"../../hooks/use-request\";"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f8e859da00cf874a08b5e5c5f143d4af759014cb0d664b23dfe3869051be8af9"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "ExceptionCaughtLocallyJS",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'throw' of exception caught locally",
            "markdown": "'throw' of exception caught locally"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/routes/new.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 9,
                  "charOffset": 6490,
                  "charLength": 5,
                  "snippet": {
                    "text": "throw"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 222,
                  "startColumn": 1,
                  "charOffset": 6455,
                  "charLength": 95,
                  "snippet": {
                    "text": "\n      if (!subscribers) {\n        throw new BadRequestError(\"Subscribers not found\");\n      }\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "07e295932b9f38d0553a1d9dae99bdefaca7d2849c94f09687c0449b6ef552a1"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ExceptionCaughtLocallyJS",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'throw' of exception caught locally",
            "markdown": "'throw' of exception caught locally"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/routes/new.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 11,
                  "charOffset": 6009,
                  "charLength": 5,
                  "snippet": {
                    "text": "throw"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 201,
                  "startColumn": 1,
                  "charOffset": 5899,
                  "charLength": 193,
                  "snippet": {
                    "text": "        const { validTemplate, errors } = validateTemplateTags(tags);\n        if (!validTemplate) {\n          throw new BadRequestError(errors.join(\",\"));\n        }\n      } catch (error: any) {"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0a353cc6e78486c49dde82626e3963fd1aaac8c0aa6180fbec1eb9ce714fd96e"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ExceptionCaughtLocallyJS",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'throw' of exception caught locally",
            "markdown": "'throw' of exception caught locally"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/Core/src/middlewares/require-auth.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 7,
                  "charOffset": 442,
                  "charLength": 5,
                  "snippet": {
                    "text": "throw"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "charOffset": 387,
                  "charLength": 153,
                  "snippet": {
                    "text": "    if (!token) {\n      console.log(\"No token\");\n      throw new NotAuthorizedError();\n    }\n    // Verify the token with both JWT_KEY and ADMIN_JWT_KEY."
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "10fe68536e47645230451c715ed4414ebd891423f8d3b96fde37a8d8c4bbd05f"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ExceptionCaughtLocallyJS",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'throw' of exception caught locally",
            "markdown": "'throw' of exception caught locally"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/routes/show.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 7,
                  "charOffset": 577,
                  "charLength": 5,
                  "snippet": {
                    "text": "throw"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 16,
                  "startColumn": 1,
                  "charOffset": 492,
                  "charLength": 118,
                  "snippet": {
                    "text": "    }).populate(\"organization template subscriberGroup\");\n    if (!campaign) {\n      throw new NotFoundError();\n    }\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "1dc1ce2089b28df68fde1904dfdb34e98e9cbe7a18d183223c3dc9287057859f"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ExceptionCaughtLocallyJS",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'throw' of exception caught locally",
            "markdown": "'throw' of exception caught locally"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/conversation-router/src/routes/create-template.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 9,
                  "charOffset": 5046,
                  "charLength": 5,
                  "snippet": {
                    "text": "throw"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 167,
                  "startColumn": 1,
                  "charOffset": 5004,
                  "charLength": 118,
                  "snippet": {
                    "text": "      });\n      if (!smoochApp) {\n        throw new BadRequestError(\"Smooch App not found for organization\");\n      }\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "2482373279fce7d37e789f161bc4091983194b112a38059429649449d45380ad"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ExceptionCaughtLocallyJS",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'throw' of exception caught locally",
            "markdown": "'throw' of exception caught locally"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/routes/update.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "charOffset": 511,
                  "charLength": 5,
                  "snippet": {
                    "text": "throw"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 12,
                  "startColumn": 1,
                  "charOffset": 414,
                  "charLength": 130,
                  "snippet": {
                    "text": "    const campaign = await Campaigns.findById(req.params.campaignId);\n    if (!campaign) {\n      throw new NotFoundError();\n    }\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "28625ffdae91fb66163cd16caec450cbfba9fef46deed3c188a9732cc2704552"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ExceptionCaughtLocallyJS",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'throw' of exception caught locally",
            "markdown": "'throw' of exception caught locally"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/Core/src/middlewares/require-auth.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 9,
                  "charOffset": 816,
                  "charLength": 5,
                  "snippet": {
                    "text": "throw"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 29,
                  "startColumn": 1,
                  "charOffset": 755,
                  "charLength": 153,
                  "snippet": {
                    "text": "      if (!token) {\n        console.log(\"No token\");\n        throw new NotAuthorizedError();\n      }\n      jwt.verify(token, process.env.ADMIN_JWT_KEY!);"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "310acef741c1969aae70537a805446e972eac670651f678f3c487fa851ad1e9d"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ExceptionCaughtLocallyJS",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'throw' of exception caught locally",
            "markdown": "'throw' of exception caught locally"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/components/forms/templates/template-details/edit.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 9,
                  "charOffset": 2227,
                  "charLength": 5,
                  "snippet": {
                    "text": "throw"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 86,
                  "startColumn": 1,
                  "charOffset": 2163,
                  "charLength": 106,
                  "snippet": {
                    "text": "        tagArray[tagIndex] = updatedTag;\n      } else {\n        throw new Error('Tag not found');\n      }\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "709a48410f80f87715204fa841dde65c33c8e77fcdf35942166ae6423f9b2419"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ExceptionCaughtLocallyJS",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'throw' of exception caught locally",
            "markdown": "'throw' of exception caught locally"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/auth/src/routes/signin.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 6,
                  "charOffset": 1536,
                  "charLength": 5,
                  "snippet": {
                    "text": "throw"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 52,
                  "startColumn": 1,
                  "charOffset": 1462,
                  "charLength": 134,
                  "snippet": {
                    "text": "\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.error('Error decoding token:', err)\n\t\t\t\t\tthrow new BadRequestError('Error decoding token')\n\t\t\t\t}\n\t\t\t}"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "7351aaf470da524d61a69a49705e8a096d5e80ab6797fec839d1dfc3c4db0363"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ExceptionCaughtLocallyJS",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'throw' of exception caught locally",
            "markdown": "'throw' of exception caught locally"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/auth/src/utility/lastEmail.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 4,
                  "charOffset": 1530,
                  "charLength": 5,
                  "snippet": {
                    "text": "throw"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 55,
                  "startColumn": 1,
                  "charOffset": 1508,
                  "charLength": 62,
                  "snippet": {
                    "text": "\n\t\tif (!message) {\n\t\t\tthrow new Error('No message found')\n\t\t}\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "82381b2b3fd9d49216f502dc8f7f6d418ff5fd8a5d62685a55b26a10310ea083"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "ExceptionCaughtLocallyJS",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'throw' of exception caught locally",
            "markdown": "'throw' of exception caught locally"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/routes/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7,
                  "charOffset": 649,
                  "charLength": 5,
                  "snippet": {
                    "text": "throw"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 20,
                  "startColumn": 1,
                  "charOffset": 577,
                  "charLength": 105,
                  "snippet": {
                    "text": "      .populate(\"template subscriberGroup\");\n    if (!campaign) {\n      throw new NotFoundError();\n    }\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "95f0329e7c03f627de708e79048740f33b05e9ab2fd6b1684ce4ae007255c023"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type string is not assignable to parameter type (prevState: undefined) => undefined",
            "markdown": "Argument type string is not assignable to parameter type (prevState: undefined) =\\> undefined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/templates/[templateName].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 21,
                  "charOffset": 8040,
                  "charLength": 20,
                  "snippet": {
                    "text": "SnakeUpper(tag.type)"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 307,
                  "startColumn": 1,
                  "charOffset": 7992,
                  "charLength": 156,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\t\tsetAction('EDIT')\n\n\t\t\t\t\t\t\t\t\tsetTagType(SnakeUpper(tag.type))\n\t\t\t\t\t\t\t\t\tsetValue('tag_type', SnakeUpper(tag.type))\n\t\t\t\t\t\t\t\t\tif (tag.type === 'csv') {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0a8d912994fdd75dd8bf21c4fb6fb802a17bf30d365c5c6009efb3592cb66d10"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Invalid number of arguments, expected 3",
            "markdown": "Invalid number of arguments, expected 3"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Dashboards/ClientDashboard/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 38,
                  "charOffset": 1570,
                  "charLength": 23,
                  "snippet": {
                    "text": "(reducer, initialState)"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 73,
                  "startColumn": 1,
                  "charOffset": 1458,
                  "charLength": 223,
                  "snippet": {
                    "text": "\tconst { id } = router.query\n\tconst [loading, setLoading] = useState(true)\n\tconst [state, dispatch] = useReducer(reducer, initialState)\n\tconst [messageStats, setMessageStats] = useState([])\n\tconst initialStartDate = dayjs()"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "13493aa4c0058a710b11fdcfcdc659c0791bd68d8abded5fc6036552b6ffa0f5"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type string is not assignable to parameter type number | undefined Type string is not assignable to type number",
            "markdown": "Argument type string is not assignable to parameter type number \\| undefined  \nType string is not assignable to type number"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/cypress/e2e/groups_flow.cy.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 11,
                  "charOffset": 2611,
                  "charLength": 6,
                  "snippet": {
                    "text": "'back'"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 51,
                  "startColumn": 1,
                  "charOffset": 2482,
                  "charLength": 144,
                  "snippet": {
                    "text": "    }).should('be.visible');\n    // Cypress will log out on Href click, so we need to navigate back to the Groups page\n    cy.go('back');\n  });\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "13e3c69357e427d94d74dba7b72108ba28e5fab7eb96a0583d88f5f313a1f641"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Invalid number of arguments, expected 0",
            "markdown": "Invalid number of arguments, expected 0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Dashboards/ClientDashboard/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 11,
                  "charOffset": 3027,
                  "charLength": 53,
                  "snippet": {
                    "text": "({ type: 'SET_ORG_METRICS', payload: organizations })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 114,
                  "startColumn": 1,
                  "charOffset": 2887,
                  "charLength": 214,
                  "snippet": {
                    "text": "\t\tdispatch({ type: 'SET_CAMPAIGN_METRICS', payload: campaigns })\n\t\tdispatch({ type: 'SET_TEMPLATE_METRICS', payload: templates })\n\t\tdispatch({ type: 'SET_ORG_METRICS', payload: organizations })\n\n\t\tsetLoading(false)"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "1fd2825b9993830e6675094e169b9960b25ace125bfbcb9ad0f8e318ff1d1cf3"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type unknown is not assignable to parameter type string",
            "markdown": "Argument type unknown is not assignable to parameter type string"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/helpers/fetch-wrapper.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 28,
                  "charOffset": 2615,
                  "charLength": 4,
                  "snippet": {
                    "text": "text"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 104,
                  "startColumn": 1,
                  "charOffset": 2506,
                  "charLength": 166,
                  "snippet": {
                    "text": "\tif ([302].includes(response.status)) {\n\t\treturn response.text().then((text) => {\n\t\t\tconst data = JSON.parse(text)\n\t\t\tif (data.path) {\n\t\t\t\tRouter.push(`${data.path}`)"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "203242013e37ae351afd9073be8c7746b9da7a4074ca5a71f95f646dd9f1149a"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type any | void is not assignable to parameter type (prevState: undefined) => undefined Type void is not assignable to type (prevState: undefined) => undefined",
            "markdown": "Argument type any \\| void is not assignable to parameter type (prevState: undefined) =\\> undefined  \nType void is not assignable to type (prevState: undefined) =\\> undefined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/campaigns/[campaignId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 14,
                  "charOffset": 3768,
                  "charLength": 7,
                  "snippet": {
                    "text": "csvData"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 134,
                  "startColumn": 1,
                  "charOffset": 3737,
                  "charLength": 110,
                  "snippet": {
                    "text": "\t\t\tcampaignId\n\t\t)\n\t\tsetCsvData(csvData)\n\t\tconst response = await campaignService.getCampaignRecipients(\n\t\t\tid,"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "26b49dcfcad8010f3ffdc655ec6c29ad2bd8ad52a741b6eb993c04d5506b0565"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Invalid number of arguments, expected 0",
            "markdown": "Invalid number of arguments, expected 0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Dashboards/ClientDashboard/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 11,
                  "charOffset": 2828,
                  "charLength": 58,
                  "snippet": {
                    "text": "({ type: 'SET_SUBSCRIBER_METRICS', payload: subscribers })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 111,
                  "startColumn": 1,
                  "charOffset": 2756,
                  "charLength": 260,
                  "snippet": {
                    "text": "\n\t\tdispatch({ type: 'SET_REPORT_METRICS', payload: reports })\n\t\tdispatch({ type: 'SET_SUBSCRIBER_METRICS', payload: subscribers })\n\t\tdispatch({ type: 'SET_CAMPAIGN_METRICS', payload: campaigns })\n\t\tdispatch({ type: 'SET_TEMPLATE_METRICS', payload: templates })"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "352b411b29a3b6abb24df1a223fdb42bed9d6cbcc60cf4aa531b9e979fcc57e5"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type unknown is not assignable to parameter type string",
            "markdown": "Argument type unknown is not assignable to parameter type string"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/helpers/fetch-wrapper.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 29,
                  "charOffset": 2233,
                  "charLength": 4,
                  "snippet": {
                    "text": "text"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 89,
                  "startColumn": 1,
                  "charOffset": 2154,
                  "charLength": 168,
                  "snippet": {
                    "text": "\t\treturn response.text().then((text) => {\n\t\t\ttry {\n\t\t\t\tconst data = JSON.parse(text)\n\t\t\t\tconst successMessage = data.message\n\t\t\t\t\t? `${response.status} ${data.message}`"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "35a192dcef709d5446deb9f713b16d05a4f238ce5206c1a5a48c76378257e400"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Invalid number of arguments, expected 3",
            "markdown": "Invalid number of arguments, expected 3"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/campaigns/[campaignId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 38,
                  "charOffset": 1546,
                  "charLength": 23,
                  "snippet": {
                    "text": "(reducer, initialState)"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 45,
                  "startColumn": 1,
                  "charOffset": 1408,
                  "charLength": 204,
                  "snippet": {
                    "text": "\tconst [totalRows, setTotalRows] = useState(0)\n\tconst [messageStats, setMessageStats] = useState([])\n\tconst [state, dispatch] = useReducer(reducer, initialState)\n\tconst [csvData, setCsvData] = useState()\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3e6bbe1c265614418cc677b4e63562218f846421a6224644b947b1659b76ae8f"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Invalid number of arguments, expected 0",
            "markdown": "Invalid number of arguments, expected 0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Dashboards/ClientDashboard/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 11,
                  "charOffset": 2962,
                  "charLength": 54,
                  "snippet": {
                    "text": "({ type: 'SET_TEMPLATE_METRICS', payload: templates })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 113,
                  "startColumn": 1,
                  "charOffset": 2818,
                  "charLength": 263,
                  "snippet": {
                    "text": "\t\tdispatch({ type: 'SET_SUBSCRIBER_METRICS', payload: subscribers })\n\t\tdispatch({ type: 'SET_CAMPAIGN_METRICS', payload: campaigns })\n\t\tdispatch({ type: 'SET_TEMPLATE_METRICS', payload: templates })\n\t\tdispatch({ type: 'SET_ORG_METRICS', payload: organizations })\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3f313db6fa27cc66c5c90bdc323beb858c4497c1b0cf52d120fd71773ec6325b"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type any | void is not assignable to parameter type ((prevState: []) => []) | [] ... Type void is not assignable to type ((prevState: []) => []) | [] Type void is not assignable to type []",
            "markdown": "Argument type any \\| void is not assignable to parameter type ((prevState: \\[\\]) =\\> \\[\\]) \\| \\[\\]  \n...  \nType void is not assignable to type ((prevState: \\[\\]) =\\> \\[\\]) \\| \\[\\]  \nType void is not assignable to type \\[\\]"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/campaigns/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 16,
                  "charOffset": 3276,
                  "charLength": 8,
                  "snippet": {
                    "text": "template"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 121,
                  "startColumn": 1,
                  "charOffset": 3147,
                  "charLength": 163,
                  "snippet": {
                    "text": "\t\ttemplateService.getTemplate(id, e.target.value).then((template) => {\n\t\t\tsetTemplatePreview(template.components)\n\t\t\tsetTemplate(template)\n\t\t\tsetHasRun(false)\n\t\t})"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "4492842c9ef17b25dcbbca1c8b2cc4c5879419cba0641e58a961a2d8970c163e"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type unknown is not assignable to parameter type string",
            "markdown": "Argument type unknown is not assignable to parameter type string"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/helpers/fetch-wrapper.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 35,
                  "charOffset": 3011,
                  "charLength": 4,
                  "snippet": {
                    "text": "text"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 119,
                  "startColumn": 1,
                  "charOffset": 2931,
                  "charLength": 108,
                  "snippet": {
                    "text": "\n\t\t// Otherwise, handle it as a JSON response\n\t\tconst data = text && JSON.parse(text)\n\n\t\tif (!response.ok) {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5126640b4bd41f50ede5b5650b13944ab52ccef6cc67fa077ff6e5946b3f8adb"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Invalid number of arguments, expected 0",
            "markdown": "Invalid number of arguments, expected 0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/campaigns/[campaignId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 12,
                  "charOffset": 3345,
                  "charLength": 52,
                  "snippet": {
                    "text": "({ type: 'SET_MESSAGE_METRICS', payload: messages })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 118,
                  "startColumn": 1,
                  "charOffset": 3274,
                  "charLength": 145,
                  "snippet": {
                    "text": "\t\t\t\tmetricService.getMessages(id, 'ALL', campaignId),\n\t\t\t])\n\t\t\tdispatch({ type: 'SET_MESSAGE_METRICS', payload: messages })\n\n\t\t\tsetLoading(false)"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "64e1194bc38acef1e4e049c72dc456a3096faaa75befe035e7575c02449520ec"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type any | void is not assignable to parameter type ((prevState: {}) => {}) | {} Type void is not assignable to type ((prevState: {}) => {}) | {} Type void is not assignable to type (prevState: {}) => {}",
            "markdown": "Argument type any \\| void is not assignable to parameter type ((prevState: {}) =\\> {}) \\| {}  \nType void is not assignable to type ((prevState: {}) =\\> {}) \\| {}  \nType void is not assignable to type (prevState: {}) =\\> {}"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/groups/[groupId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 14,
                  "charOffset": 3278,
                  "charLength": 5,
                  "snippet": {
                    "text": "group"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 131,
                  "startColumn": 1,
                  "charOffset": 3197,
                  "charLength": 122,
                  "snippet": {
                    "text": "\t\tif (id) {\n\t\t\tgroupService.getGroup(id, groupId).then((group) => {\n\t\t\t\tsetGroup(group)\n\t\t\t})\n\t\t\tfetchData(page, pageSize)"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6ab7514fb557c5a25b0966bf9988e6f448ffda1d7587b6d3669230ecd469c26f"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type function(any): void is not assignable to parameter type PushSubscriptionOptionsInit | undefined Type function(any): void is not assignable to type PushSubscriptionOptionsInit",
            "markdown": "Argument type function(any): void is not assignable to parameter type PushSubscriptionOptionsInit \\| undefined  \nType function(any): void is not assignable to type PushSubscriptionOptionsInit"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/header.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 51,
                  "charOffset": 3654,
                  "charLength": 10,
                  "snippet": {
                    "text": "(value) =>"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 130,
                  "startColumn": 1,
                  "charOffset": 3556,
                  "charLength": 134,
                  "snippet": {
                    "text": "\tconst { id } = router.query\n\tuseEffect(() => {\n\t\tconst subscription = userService.user.subscribe((value) =>\n\t\t\tsetSignedIn(value)\n\t\t)"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6d888ac2e7ef807d0fa7c8a3bc6af0eb111d917f64b9e88f9b466f185498194d"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Invalid number of arguments, expected 0",
            "markdown": "Invalid number of arguments, expected 0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Dashboards/ClientDashboard/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 11,
                  "charOffset": 2767,
                  "charLength": 50,
                  "snippet": {
                    "text": "({ type: 'SET_REPORT_METRICS', payload: reports })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 110,
                  "startColumn": 1,
                  "charOffset": 2750,
                  "charLength": 201,
                  "snippet": {
                    "text": "\t\t\t])\n\n\t\tdispatch({ type: 'SET_REPORT_METRICS', payload: reports })\n\t\tdispatch({ type: 'SET_SUBSCRIBER_METRICS', payload: subscribers })\n\t\tdispatch({ type: 'SET_CAMPAIGN_METRICS', payload: campaigns })"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "97f1ebf717d1fd0973ed1d7d4ff2b6c1126d0baaa987247eedbaf7613b864e85"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Invalid number of arguments, expected 3..4",
            "markdown": "Invalid number of arguments, expected 3..4"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Dashboards/ClientDashboard/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 29,
                  "charOffset": 2637,
                  "charLength": 4,
                  "snippet": {
                    "text": "(id)"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 104,
                  "startColumn": 1,
                  "charOffset": 2532,
                  "charLength": 174,
                  "snippet": {
                    "text": "\t\t\tawait Promise.all([\n\t\t\t\tmetricService.getReports(id, startDate, endDate),\n\t\t\t\tsubscriberService.getAll(id),\n\t\t\t\tcampaignService.getAll(id),\n\t\t\t\ttemplateService.getAll(id),"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "9b18e8181e633c5cbeb09a7e94d38f259d0671eae2180fb945493c7fc1f91ec0"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type { headers: ({ \"Content-Type\": string } | {}), method: string, body: (any | string) } is not assignable to parameter type RequestInit | undefined ... Type { \"Content-Type\": string } | {} is not assignable to type HeadersInit | undefined Type { \"Content-Type\": string } | {} is not assignable to type [string, string][] | Record<string, string> | Headers Type { \"Content-Type\": string } | {} is not assignable to type Headers",
            "markdown": "Argument type  \n{  \nheaders: ({  \n\"Content-Type\": string  \n} \\| {}),  \nmethod: string,  \nbody: (any \\| string)  \n}\nis not assignable to parameter type RequestInit \\| undefined  \n...  \nType { \"Content-Type\": string } \\| {} is not assignable to type HeadersInit \\| undefined  \nType { \"Content-Type\": string } \\| {} is not assignable to type  \n\\[string, string\\]\\[\\] \\| Record\\<string, string\\> \\| Headers\n\nType { \"Content-Type\": string } \\| {} is not assignable to type Headers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/helpers/fetch-wrapper.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 20,
                  "charOffset": 806,
                  "charLength": 14,
                  "snippet": {
                    "text": "requestOptions"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 36,
                  "startColumn": 1,
                  "charOffset": 734,
                  "charLength": 145,
                  "snippet": {
                    "text": "\t\tbody: isFormData ? body : JSON.stringify(body),\n\t}\n\treturn fetch(url, requestOptions)\n\t\t.then(handleResponse)\n\t\t.catch((e) => console.error(e))"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ad38088843cc6d7fa426b834d4294fa91953bda7e15f069c5e61e4d4ebc424bf"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type any | void is not assignable to parameter type string Type void is not assignable to type string",
            "markdown": "Argument type any \\| void is not assignable to parameter type string  \nType void is not assignable to type string"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/OrgSettings/Logging.jsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 17,
                  "charOffset": 1504,
                  "charLength": 7,
                  "snippet": {
                    "text": "csvData"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 65,
                  "startColumn": 1,
                  "charOffset": 1466,
                  "charLength": 89,
                  "snippet": {
                    "text": "\t\t\t\tdata.endDate\n\t\t\t)\n\t\t\thandleExport(csvData)\n\t\t\tsetOpenPopup(false)\n\t\t} catch (error) {"
                  },
                  "sourceLanguage": "ECMAScript 6"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b14fe901d797525d1381e5b52ce1f0a6a6e819b32545739c0530a039b7f1605a"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type string | string is not assignable to parameter type (prevState: undefined) => undefined Type string is not assignable to type (prevState: undefined) => undefined",
            "markdown": "Argument type string \\| string is not assignable to parameter type (prevState: undefined) =\\> undefined  \nType string is not assignable to type (prevState: undefined) =\\> undefined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/useTable.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 13,
                  "charOffset": 1106,
                  "charLength": 22,
                  "snippet": {
                    "text": "isAsc ? 'desc' : 'asc'"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 34,
                  "startColumn": 1,
                  "charOffset": 997,
                  "charLength": 158,
                  "snippet": {
                    "text": "\t\tconst handleSortRequest = (cellId) => {\n\t\t\tconst isAsc = orderBy === cellId && order === 'asc'\n\t\t\tsetOrder(isAsc ? 'desc' : 'asc')\n\t\t\tsetOrderBy(cellId)\n\t\t}"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b4ffd9ffa4502c0afe6e660078cc2784bd50d69dbfb4b1c1e64735e3560a521c"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type number is not assignable to parameter type string[] Type number is not assignable to type Array<string>",
            "markdown": "Argument type number is not assignable to parameter type string\\[\\]  \nType number is not assignable to type Array\\<string\\>"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 53,
                  "charOffset": 6508,
                  "charLength": 10,
                  "snippet": {
                    "text": "subIdArray"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 248,
                  "startColumn": 1,
                  "charOffset": 6404,
                  "charLength": 152,
                  "snippet": {
                    "text": "\t\tsetOpenBulkDeleteDialog(false)\n\t\tsetLoading(true)\n\t\tawait subscriberService.bulkDeleteSubscribers(id, subIdArray)\n\t\tawait fetchData(page, pageSize)\n\t}"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c17b5c78b1b3902abe388691ab8fef1977800625bca0e8556fbe3df9fb6dfd77"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type any | void is not assignable to parameter type ((prevState: []) => []) | [] ... Type void is not assignable to type ((prevState: []) => []) | [] Type void is not assignable to type []",
            "markdown": "Argument type any \\| void is not assignable to parameter type ((prevState: \\[\\]) =\\> \\[\\]) \\| \\[\\]  \n...  \nType void is not assignable to type ((prevState: \\[\\]) =\\> \\[\\]) \\| \\[\\]  \nType void is not assignable to type \\[\\]"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/users/[id].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 26,
                  "charOffset": 1526,
                  "charLength": 4,
                  "snippet": {
                    "text": "data"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 43,
                  "startColumn": 1,
                  "charOffset": 1431,
                  "charLength": 117,
                  "snippet": {
                    "text": "      });\n      orgService.getOrganizationByUser(id).then((data) => {\n        setOrganizations(data);\n      });\n    }"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "d9f88f8ce62f6e39697739437174e75bc81fdc45c70f98d3c05449252aaa85f5"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Invalid number of arguments, expected 0",
            "markdown": "Invalid number of arguments, expected 0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Dashboards/ClientDashboard/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 11,
                  "charOffset": 2897,
                  "charLength": 54,
                  "snippet": {
                    "text": "({ type: 'SET_CAMPAIGN_METRICS', payload: campaigns })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 112,
                  "startColumn": 1,
                  "charOffset": 2757,
                  "charLength": 323,
                  "snippet": {
                    "text": "\t\tdispatch({ type: 'SET_REPORT_METRICS', payload: reports })\n\t\tdispatch({ type: 'SET_SUBSCRIBER_METRICS', payload: subscribers })\n\t\tdispatch({ type: 'SET_CAMPAIGN_METRICS', payload: campaigns })\n\t\tdispatch({ type: 'SET_TEMPLATE_METRICS', payload: templates })\n\t\tdispatch({ type: 'SET_ORG_METRICS', payload: organizations })"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "db112927ecf700892c265418e7906c6a741c8a728ceb34f51476036ff97eee54"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type string is not assignable to parameter type number | undefined Type string is not assignable to type number",
            "markdown": "Argument type string is not assignable to parameter type number \\| undefined  \nType string is not assignable to type number"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/cypress/e2e/campaigns_flow.cy.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 11,
                  "charOffset": 2337,
                  "charLength": 6,
                  "snippet": {
                    "text": "'back'"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 52,
                  "startColumn": 1,
                  "charOffset": 2172,
                  "charLength": 273,
                  "snippet": {
                    "text": "  it('Allows Deleting a Newly Added Campaign Entry', () => {\n    // Delete the first instance of a newly added Campaign and verify the Campaign is deleted\n    cy.go('back');\n    cy.get('[data-cy=\"delete_groups--Cypress test: Delete me\"]', { timeout: 30000 })\n      .first()"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "eb070a8ba2c339e7571dcd1c75fea0010cceb8e098a1655751b243d4a84b5732"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type { headers: ({ \"Content-Type\": string } | {}), method: string, body: (any | string) } is not assignable to parameter type RequestInit | undefined ... Type { \"Content-Type\": string } | {} is not assignable to type HeadersInit | undefined Type { \"Content-Type\": string } | {} is not assignable to type [string, string][] | Record<string, string> | Headers Type { \"Content-Type\": string } | {} is not assignable to type Headers",
            "markdown": "Argument type  \n{  \nheaders: ({  \n\"Content-Type\": string  \n} \\| {}),  \nmethod: string,  \nbody: (any \\| string)  \n}\nis not assignable to parameter type RequestInit \\| undefined  \n...  \nType { \"Content-Type\": string } \\| {} is not assignable to type HeadersInit \\| undefined  \nType { \"Content-Type\": string } \\| {} is not assignable to type  \n\\[string, string\\]\\[\\] \\| Record\\<string, string\\> \\| Headers\n\nType { \"Content-Type\": string } \\| {} is not assignable to type Headers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/helpers/fetch-wrapper.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 20,
                  "charOffset": 1539,
                  "charLength": 14,
                  "snippet": {
                    "text": "requestOptions"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 63,
                  "startColumn": 1,
                  "charOffset": 1467,
                  "charLength": 145,
                  "snippet": {
                    "text": "\t\tbody: isFormData ? body : JSON.stringify(body),\n\t}\n\treturn fetch(url, requestOptions)\n\t\t.then(handleResponse)\n\t\t.catch((e) => console.error(e))"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ef01efa7d88033797fad651fbe806fee156f4352500b8c31262144b51b6e3f84"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCheckFunctionSignatures",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Argument type { name: (any | string), description: (any | string), language: (any | string), Buttons: (any | string), category: (any | string), enabled: (string | string) } is not assignable to parameter type (prevState: undefined) => undefined",
            "markdown": "Argument type  \n{  \nname: (any \\| string),  \ndescription: (any \\| string),  \nlanguage: (any \\| string),  \nButtons: (any \\| string),  \ncategory: (any \\| string),  \nenabled: (string \\| string)  \n}\nis not assignable to parameter type (prevState: undefined) =\\> undefined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/templates/[templateName].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 23,
                  "charOffset": 4655,
                  "charLength": 10,
                  "snippet": {
                    "text": "newDetails"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 160,
                  "startColumn": 1,
                  "charOffset": 4627,
                  "charLength": 85,
                  "snippet": {
                    "text": "\t\t\t}\n\n\t\t\tsetTemplateDetails(newDetails)\n\t\t\tsetComponentFormat()\n\t\t\tsetComponentType()"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ef2c6da56110b5084f08f270936a0bb1753d6f855e8edf063eff10eef7098914"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSCommentMatchesSignature",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Parameter res described in JSDoc does not appear in function signature",
            "markdown": "Parameter res described in JSDoc does not appear in function signature"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/Core/src/middlewares/require-admin-group.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 11,
                  "charOffset": 265,
                  "charLength": 3,
                  "snippet": {
                    "text": "res"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 9,
                  "startColumn": 1,
                  "charOffset": 164,
                  "charLength": 123,
                  "snippet": {
                    "text": " * This middleware is used to check if the user is an admin for the v1.1 API\n * @param req\n * @param res\n * @param next\n */"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e3d1eb4709dde2b25ddb0c1630774eba44572d3018d7fbe19b28c6177837172b"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "JSCommentMatchesSignature",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Parameter _res is not described in JSDoc",
            "markdown": "Parameter _res is not described in JSDoc"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/Core/src/middlewares/require-admin-group.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 3,
                  "charOffset": 341,
                  "charLength": 14,
                  "snippet": {
                    "text": "_res: Response"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 14,
                  "startColumn": 1,
                  "charOffset": 288,
                  "charLength": 96,
                  "snippet": {
                    "text": "export const requireAdminGroup = (\n  req: Request,\n  _res: Response,\n  next: NextFunction\n) => {"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "fba704da3e74fdc4f0a916868e3778696c6eca2d115623f1db52512222e84c79"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "JSDeprecatedSymbols",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Deprecated symbol used, consult docs for better alternative",
            "markdown": "Deprecated symbol used, consult docs for better alternative"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/logging/src/routes/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 21,
                  "charOffset": 2170,
                  "charLength": 8,
                  "snippet": {
                    "text": "platform"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 98,
                  "startColumn": 1,
                  "charOffset": 2071,
                  "charLength": 130,
                  "snippet": {
                    "text": "\t\t\t\t\t// Build Customer\n\t\t\t\t\tconst client = response.data.appUser.clients.find(\n\t\t\t\t\t\t(c: any) => c.platform === 'whatsapp'\n\t\t\t\t\t)\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "116764f12a456692ee22eb0d31283c12b8658a8a0f67ee3e90287990ab5998e5"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSDuplicatedDeclaration",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Duplicate declaration",
            "markdown": "Duplicate declaration"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/jest.config.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 2,
                  "charOffset": 279,
                  "charLength": 15,
                  "snippet": {
                    "text": "testEnvironment"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 7,
                  "startColumn": 1,
                  "charOffset": 197,
                  "charLength": 173,
                  "snippet": {
                    "text": "\ttestPathIgnorePatterns: ['/cypress/'],\n\ttransformIgnorePatterns: ['/cypress/'],\n\ttestEnvironment: 'jest-environment-jsdom',\n\ttransform: {\n\t\t'^.+\\\\.[t|j]sx?$': 'babel-jest',"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0059f999f953c20dbb2a807fdd26d6593fedbfcab8a02a79704fdc698972f4f7"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSDuplicatedDeclaration",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Duplicate declaration",
            "markdown": "Duplicate declaration"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/.eslintrc.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 3,
                  "charOffset": 1824,
                  "charLength": 35,
                  "snippet": {
                    "text": "'react/jsx-one-expression-per-line'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 66,
                  "startColumn": 1,
                  "charOffset": 1750,
                  "charLength": 194,
                  "snippet": {
                    "text": "\t\t'react/state-in-constructor': 0,\n\t\t'react/jsx-props-no-spreading': 0,\n\t\t'react/jsx-one-expression-per-line': 0,\n\t\t'jsx-a11y/anchor-is-valid': 0,\n\t\t'jsx-a11y/no-static-element-interactions': 1,"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "124b72675aa8a104de41066bb80ae02ce3078ed91a8954c87d63f4ff7b66817b"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSDuplicatedDeclaration",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Duplicate declaration",
            "markdown": "Duplicate declaration"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/jest.config.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 2,
                  "charOffset": 40,
                  "charLength": 15,
                  "snippet": {
                    "text": "testEnvironment"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 122,
                  "snippet": {
                    "text": "module.exports = {\n\tpreset: 'ts-jest',\n\ttestEnvironment: 'node',\n\tsetupFilesAfterEnv: ['./jest.setup.js'],\n\tverbose: true,"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5372e8632899181323d4c96b61df428b1e392748860de83b013ccd5ef935cbad"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSDuplicatedDeclaration",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Duplicate declaration",
            "markdown": "Duplicate declaration"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/.eslintrc.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 3,
                  "charOffset": 1623,
                  "charLength": 35,
                  "snippet": {
                    "text": "'react/jsx-one-expression-per-line'"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 57,
                  "startColumn": 1,
                  "charOffset": 1610,
                  "charLength": 62,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t],\n\t\t'react/jsx-one-expression-per-line': [\n\t\t\t1,\n\t\t\t{"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c1c62e461dc3cc8c2834d53f3dd269efd6bde7a8bbabf82f246e5b4cfbf58c8a"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSEqualityComparisonWithCoercion",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Comparison subscriberHistory == undefined may cause unexpected type coercion",
            "markdown": "Comparison subscriberHistory == undefined may cause unexpected type coercion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/[subscriberId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 7,
                  "charOffset": 7420,
                  "charLength": 30,
                  "snippet": {
                    "text": "subscriberHistory == undefined"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 287,
                  "startColumn": 1,
                  "charOffset": 7378,
                  "charLength": 155,
                  "snippet": {
                    "text": "\t\t\t\t\t\tRecipients\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{subscriberHistory == undefined ? (\n\t\t\t\t\t\t<Typography className={classes.bigWords} variant=\"h6\">\n\t\t\t\t\t\t\tNo History"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "224b61192bd7364c3470f385097db3f713c13845901433b8ed3e9b9a015f9c82"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchData is ignored",
            "markdown": "Promise returned from fetchData is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 6,
                  "charOffset": 5392,
                  "charLength": 9,
                  "snippet": {
                    "text": "fetchData"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 204,
                  "startColumn": 1,
                  "charOffset": 5338,
                  "charLength": 91,
                  "snippet": {
                    "text": "\t\t\t.then((subscriber) => {\n\t\t\t\tif (subscriber) {\n\t\t\t\t\tfetchData(page, pageSize)\n\t\t\t\t}\n\t\t\t})"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0b7c645dafd24bdb4bfaf85cd977a33c2e56ce4fcabfc7d3e83f76c82a1fc74c"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from unsubscribe is ignored",
            "markdown": "Promise returned from unsubscribe is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/header.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 22,
                  "charOffset": 3903,
                  "charLength": 11,
                  "snippet": {
                    "text": "unsubscribe"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 142,
                  "startColumn": 1,
                  "charOffset": 3835,
                  "charLength": 104,
                  "snippet": {
                    "text": "\t\treturn () => {\n\t\t\tsubscription.unsubscribe()\n\t\t\tadminSubscription.unsubscribe()\n\t\t}\n\t}, [isAdmin, id])"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0d19789f6ad7327cee78af76bb59dddbe1dc1b8cb8bcb7769bb881e32b7e5e6e"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from refresh is ignored",
            "markdown": "Promise returned from refresh is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/campaigns/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 4,
                  "charOffset": 4104,
                  "charLength": 7,
                  "snippet": {
                    "text": "refresh"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 153,
                  "startColumn": 1,
                  "charOffset": 4063,
                  "charLength": 64,
                  "snippet": {
                    "text": "\t\t\t\tsetGroups(groups.reverse())\n\t\t\t})\n\t\t\trefresh()\n\t\t}\n\t}, [id])"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0db7dfec22f11f3e26eeba0f57c56479d68b3adbc6b87d7d053a79fd0c417b81"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from getGroupOptions is ignored",
            "markdown": "Promise returned from getGroupOptions is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 4,
                  "charOffset": 5143,
                  "charLength": 15,
                  "snippet": {
                    "text": "getGroupOptions"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 192,
                  "startColumn": 1,
                  "charOffset": 5109,
                  "charLength": 84,
                  "snippet": {
                    "text": "\tuseEffect(() => {\n\t\tif (id) {\n\t\t\tgetGroupOptions()\n\t\t\tfetchData(page, pageSize)\n\t\t}"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "1a712bd8292478ec55f3df07d0bde6e3e672c8f26d0f2ce683e8bd01a9dc1713"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from exitFullscreen is ignored",
            "markdown": "Promise returned from exitFullscreen is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/components/settings/drawer/fullscreen-option.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 16,
                  "charOffset": 624,
                  "charLength": 14,
                  "snippet": {
                    "text": "exitFullscreen"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 17,
                  "startColumn": 1,
                  "charOffset": 540,
                  "charLength": 135,
                  "snippet": {
                    "text": "      setFullscreen(true);\n    } else if (document.exitFullscreen) {\n      document.exitFullscreen();\n      setFullscreen(false);\n    }"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "20aeefeb89faf5b06db773239582018171000bc48c5d90e0771acd754aa68de5"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from refresh is ignored",
            "markdown": "Promise returned from refresh is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/ui-core/src/UI/server-side-table/wrapper.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 7,
                  "charOffset": 1525,
                  "charLength": 7,
                  "snippet": {
                    "text": "refresh"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 63,
                  "startColumn": 1,
                  "charOffset": 1496,
                  "charLength": 59,
                  "snippet": {
                    "text": "\n    useEffect(() => {\n      refresh();\n    }, [refresh]);\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "212dec9372ee017fa56c22f7b6c71723b5837f31c7390d50021c95fb93f63860"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from requestFullscreen is ignored",
            "markdown": "Promise returned from requestFullscreen is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/components/settings/drawer/fullscreen-option.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 32,
                  "charOffset": 519,
                  "charLength": 17,
                  "snippet": {
                    "text": "requestFullscreen"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 14,
                  "startColumn": 1,
                  "charOffset": 400,
                  "charLength": 208,
                  "snippet": {
                    "text": "  const onToggleFullScreen = useCallback(() => {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen();\n      setFullscreen(true);\n    } else if (document.exitFullscreen) {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "2d036b8509649d516d536fa5f9d1f245db85af099d61353131aceb16e84f4a55"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from requestFullscreen is ignored",
            "markdown": "Promise returned from requestFullscreen is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/components/settings/drawer/fullscreen-option.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 32,
                  "charOffset": 519,
                  "charLength": 17,
                  "snippet": {
                    "text": "requestFullscreen"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 14,
                  "startColumn": 1,
                  "charOffset": 400,
                  "charLength": 208,
                  "snippet": {
                    "text": "  const onToggleFullScreen = useCallback(() => {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen();\n      setFullscreen(true);\n    } else if (document.exitFullscreen) {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "31abc85e9e35e3ac3af0ead24d3a3cbec693a3f2d44098d8a3196878ed2ceb3c"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from initializeData is ignored",
            "markdown": "Promise returned from initializeData is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/sections/organization/organization-details/view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 5,
                  "charOffset": 1907,
                  "charLength": 14,
                  "snippet": {
                    "text": "initializeData"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 61,
                  "startColumn": 1,
                  "charOffset": 1895,
                  "charLength": 68,
                  "snippet": {
                    "text": "    };\n\n    initializeData();\n  }, [getOrganization, getAllUsers]);\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3ef56b81a7711432dfdfd441b7961c38069df063a4bb38126cc392aa5666f8f4"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from initialize is ignored",
            "markdown": "Promise returned from initialize is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/auth/context/jwt/auth-provider.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 5,
                  "charOffset": 2940,
                  "charLength": 10,
                  "snippet": {
                    "text": "initialize"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 127,
                  "startColumn": 1,
                  "charOffset": 2915,
                  "charLength": 59,
                  "snippet": {
                    "text": "\n  useEffect(() => {\n    initialize();\n  }, [initialize]);\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "45899ea4f9baa95db2a710df88591f14a4f7f53f6d54083d06a167dc7635537b"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from handleSubmit is ignored",
            "markdown": "Promise returned from handleSubmit is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/forms/auth/verify/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 5,
                  "charOffset": 1788,
                  "charLength": 12,
                  "snippet": {
                    "text": "handleSubmit"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 60,
                  "startColumn": 1,
                  "charOffset": 1711,
                  "charLength": 101,
                  "snippet": {
                    "text": "\t\t\tonSubmit={(e: FormEvent<HTMLFormElement>) => {\n\t\t\t\te.preventDefault()\n\t\t\t\thandleSubmit()\n\t\t\t}}\n\t\t>"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "46733b24ff9d4b799e611b3ffce817261651c90661d552449c3855f35731ddba"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from handleSubmit is ignored",
            "markdown": "Promise returned from handleSubmit is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/sections/auth/verify/verify-otp-view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 9,
                  "charOffset": 1709,
                  "charLength": 12,
                  "snippet": {
                    "text": "handleSubmit"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 60,
                  "startColumn": 1,
                  "charOffset": 1620,
                  "charLength": 120,
                  "snippet": {
                    "text": "      onSubmit={(e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        handleSubmit(e);\n      }}\n    >"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "4c771b20820d5a4c0094eec12239200730b705d4c95c3b0404d012ea674fbb4e"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchTemplates is ignored",
            "markdown": "Promise returned from fetchTemplates is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/components/forms/subscribers/subscriber-details/message.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 7,
                  "charOffset": 1277,
                  "charLength": 14,
                  "snippet": {
                    "text": "fetchTemplates"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 41,
                  "startColumn": 1,
                  "charOffset": 1248,
                  "charLength": 73,
                  "snippet": {
                    "text": "    };\n    if (open) {\n      fetchTemplates();\n    }\n  }, [open, orgId]);"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "54a234a13dbb4093478ed14407ec5bfa301da83a273a6647e313d0bf90457d43"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from resendOtp is ignored",
            "markdown": "Promise returned from resendOtp is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/forms/auth/verify/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 15,
                  "charOffset": 1593,
                  "charLength": 9,
                  "snippet": {
                    "text": "resendOtp"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 48,
                  "startColumn": 1,
                  "charOffset": 1545,
                  "charLength": 87,
                  "snippet": {
                    "text": "\n\tconst resendOtp = (): void => {\n\t\tuserService.resendOtp(email)\n\t\tsetCodeResent(true)\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "55b7eaf6729ef6eeb0573d6cc3dd573d8c976f90bce773c450533145098d5dab"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchData is ignored",
            "markdown": "Promise returned from fetchData is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/campaigns/[campaignId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 4,
                  "charOffset": 4183,
                  "charLength": 9,
                  "snippet": {
                    "text": "fetchData"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 156,
                  "startColumn": 1,
                  "charOffset": 4141,
                  "charLength": 91,
                  "snippet": {
                    "text": "\tuseEffect(() => {\n\t\tif (campaignId) {\n\t\t\tfetchData()\n\t\t\tfetchTableData(page, pageSize)\n\t\t}"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "600dc7c5f2c425a354fc73cfe366464c324d7f364c046a74a588f080c841cfef"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from onSubmit is ignored",
            "markdown": "Promise returned from onSubmit is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/components/forms/remove-smooch-id.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 17,
                  "charOffset": 1282,
                  "charLength": 8,
                  "snippet": {
                    "text": "onSubmit"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 48,
                  "startColumn": 1,
                  "charOffset": 1203,
                  "charLength": 122,
                  "snippet": {
                    "text": "              onClick={() => {\n                setOpen(false);\n                onSubmit();\n              }}\n            />"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "695ca3c3b4deac6d2e2fafa2d66c5fc5d4721ef674c036fb074692cdce94e4f7"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from getSmoochApp is ignored",
            "markdown": "Promise returned from getSmoochApp is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/sections/organization/organization-details/smooch-app-detials.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 5,
                  "charOffset": 869,
                  "charLength": 12,
                  "snippet": {
                    "text": "getSmoochApp"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 26,
                  "startColumn": 1,
                  "charOffset": 844,
                  "charLength": 63,
                  "snippet": {
                    "text": "\n  useEffect(() => {\n    getSmoochApp();\n  }, [getSmoochApp]);\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "7034c61427b171119725268494baa972979376ad57f6d434c7a0f3bd3e27232e"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from handleSubmit is ignored",
            "markdown": "Promise returned from handleSubmit is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/sections/auth/verify/verify-otp-view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 9,
                  "charOffset": 1709,
                  "charLength": 12,
                  "snippet": {
                    "text": "handleSubmit"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 60,
                  "startColumn": 1,
                  "charOffset": 1620,
                  "charLength": 120,
                  "snippet": {
                    "text": "      onSubmit={(e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        handleSubmit(e);\n      }}\n    >"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "73197862e214579037780318935ff38f47193b35e7d5dfbd8da5d478bf42e05f"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from refresh is ignored",
            "markdown": "Promise returned from refresh is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/sections/organization/groups/view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 7,
                  "charOffset": 4092,
                  "charLength": 7,
                  "snippet": {
                    "text": "refresh"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 138,
                  "startColumn": 1,
                  "charOffset": 4049,
                  "charLength": 83,
                  "snippet": {
                    "text": "  useEffect(() => {\n    if (orgId) {\n      refresh();\n    }\n  }, [orgId, refresh]);"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "7901029b55415c3cba9907f39a963f706029f19c7abe08fd6cefa8e519ab8ae1"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchData is ignored",
            "markdown": "Promise returned from fetchData is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 6,
                  "charOffset": 5643,
                  "charLength": 9,
                  "snippet": {
                    "text": "fetchData"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 216,
                  "startColumn": 1,
                  "charOffset": 5589,
                  "charLength": 91,
                  "snippet": {
                    "text": "\t\t\t.then((subscriber) => {\n\t\t\t\tif (subscriber) {\n\t\t\t\t\tfetchData(page, pageSize)\n\t\t\t\t}\n\t\t\t})"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "791a2efc5b9567d56148faccce89852fb14ef9263cf55bc49e7786e2fb5c36c9"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from refresh is ignored",
            "markdown": "Promise returned from refresh is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/sections/organization/campaigns/view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 7,
                  "charOffset": 3917,
                  "charLength": 7,
                  "snippet": {
                    "text": "refresh"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 123,
                  "startColumn": 1,
                  "charOffset": 3887,
                  "charLength": 70,
                  "snippet": {
                    "text": "    };\n    if (orgId) {\n      refresh();\n      setReload(false);\n    }"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8556cfadb88c9d9aa6b9da3096acb7a93a3d33c701add7d8994e93fa5fd568a4"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchGroup is ignored",
            "markdown": "Promise returned from fetchGroup is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/sections/organization/groups/group-details/view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 5,
                  "charOffset": 1688,
                  "charLength": 10,
                  "snippet": {
                    "text": "fetchGroup"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 51,
                  "startColumn": 1,
                  "charOffset": 1669,
                  "charLength": 66,
                  "snippet": {
                    "text": "      }\n    };\n    fetchGroup();\n  }, [refresh, modelId, orgId]);\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8a6d08cf9bc406c237a888fd096a2d182d224464cedff34e3dd25317a35a3ae4"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchData is ignored",
            "markdown": "Promise returned from fetchData is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/groups/[groupId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 4,
                  "charOffset": 3294,
                  "charLength": 9,
                  "snippet": {
                    "text": "fetchData"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 133,
                  "startColumn": 1,
                  "charOffset": 3265,
                  "charLength": 68,
                  "snippet": {
                    "text": "\t\t\t\tsetGroup(group)\n\t\t\t})\n\t\t\tfetchData(page, pageSize)\n\t\t}\n\t}, [id])"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "917da308a961ec83576a9e250f279b20cbaa2468db2ea38c295bbf6e5f0352e0"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchData is ignored",
            "markdown": "Promise returned from fetchData is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/sections/organization/campaigns/campaign-details/view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 5,
                  "charOffset": 3861,
                  "charLength": 9,
                  "snippet": {
                    "text": "fetchData"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 130,
                  "startColumn": 1,
                  "charOffset": 3849,
                  "charLength": 62,
                  "snippet": {
                    "text": "    };\n\n    fetchData();\n  }, [fetchCampaign, fetchMetrics]);\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "92e950cd713ca41bf95dca03d6da73e78f00403fa20e9d52d59caad03cb74ba8"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchIntegrations is ignored",
            "markdown": "Promise returned from fetchIntegrations is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/OrgSettings/Integrations.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 3,
                  "charOffset": 1161,
                  "charLength": 17,
                  "snippet": {
                    "text": "fetchIntegrations"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 44,
                  "startColumn": 1,
                  "charOffset": 1154,
                  "charLength": 35,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tfetchIntegrations()\n\t}, [])\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "97add42264de24472b318f4e820d0eb28cefb2c3807cf15f44f72885e68c9eff"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from initialize is ignored",
            "markdown": "Promise returned from initialize is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/auth/context/jwt/auth-provider.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 5,
                  "charOffset": 2970,
                  "charLength": 10,
                  "snippet": {
                    "text": "initialize"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 132,
                  "startColumn": 1,
                  "charOffset": 2945,
                  "charLength": 59,
                  "snippet": {
                    "text": "\n  useEffect(() => {\n    initialize();\n  }, [initialize]);\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "9adf07cb6bea508cf3d68af90d9a77c8fc448de5f75f9528761886aa6b291d90"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchTableData is ignored",
            "markdown": "Promise returned from fetchTableData is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/campaigns/[campaignId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 4,
                  "charOffset": 4198,
                  "charLength": 14,
                  "snippet": {
                    "text": "fetchTableData"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 157,
                  "startColumn": 1,
                  "charOffset": 4160,
                  "charLength": 90,
                  "snippet": {
                    "text": "\t\tif (campaignId) {\n\t\t\tfetchData()\n\t\t\tfetchTableData(page, pageSize)\n\t\t}\n\t}, [campaignId])"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "9e199255eb6c112d59694ae609c47f09848a0e1151214a12a9171175c4e94cd6"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchTemplates is ignored",
            "markdown": "Promise returned from fetchTemplates is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/components/forms/campaigns/createForm.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 5,
                  "charOffset": 1819,
                  "charLength": 14,
                  "snippet": {
                    "text": "fetchTemplates"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 64,
                  "startColumn": 1,
                  "charOffset": 1807,
                  "charLength": 63,
                  "snippet": {
                    "text": "    };\n\n    fetchTemplates();\n    fetchGroups();\n  }, [orgId]);"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a2b65dc78aeec79feba706235a9ee2a29f5d16c0414df04c563a6698710e80d1"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from unsubscribe is ignored",
            "markdown": "Promise returned from unsubscribe is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/header.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 17,
                  "charOffset": 3868,
                  "charLength": 11,
                  "snippet": {
                    "text": "unsubscribe"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 141,
                  "startColumn": 1,
                  "charOffset": 3831,
                  "charLength": 89,
                  "snippet": {
                    "text": "\t\t}\n\t\treturn () => {\n\t\t\tsubscription.unsubscribe()\n\t\t\tadminSubscription.unsubscribe()\n\t\t}"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a40a3fae1619b3a7a104ebf47456d9cce4d1d9eb9dfa804e0f22da9a78e3fa21"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchData is ignored",
            "markdown": "Promise returned from fetchData is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Dashboards/ClientDashboard/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 4,
                  "charOffset": 3140,
                  "charLength": 9,
                  "snippet": {
                    "text": "fetchData"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 121,
                  "startColumn": 1,
                  "charOffset": 3106,
                  "charLength": 77,
                  "snippet": {
                    "text": "\tuseEffect(() => {\n\t\tif (id) {\n\t\t\tfetchData(startDate, endDate)\n\t\t}\n\t}, [id])"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a823a75626359a9c9a18c557fdb09afe92ece2086419891ecba2c5f080e8de6f"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from refresh is ignored",
            "markdown": "Promise returned from refresh is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/sections/organization/templates/template-details/view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 7,
                  "charOffset": 4780,
                  "charLength": 7,
                  "snippet": {
                    "text": "refresh"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 159,
                  "startColumn": 1,
                  "charOffset": 4737,
                  "charLength": 83,
                  "snippet": {
                    "text": "  useEffect(() => {\n    if (orgId) {\n      refresh();\n    }\n  }, [orgId, refresh]);"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a9aef0ed4d849682208a986dbe16cd06faf774f22abbcb711109f41644da1de0"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from refresh is ignored",
            "markdown": "Promise returned from refresh is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/sections/organization/subscribers/subscriber-details/view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 7,
                  "charOffset": 2422,
                  "charLength": 7,
                  "snippet": {
                    "text": "refresh"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 74,
                  "startColumn": 1,
                  "charOffset": 2379,
                  "charLength": 83,
                  "snippet": {
                    "text": "  useEffect(() => {\n    if (orgId) {\n      refresh();\n    }\n  }, [orgId, refresh]);"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "abe95747e0d386d5218d8322caa815bac0de52ac803acbe98be53996ce60b14b"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from refresh is ignored",
            "markdown": "Promise returned from refresh is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/groups/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 4,
                  "charOffset": 3622,
                  "charLength": 7,
                  "snippet": {
                    "text": "refresh"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 147,
                  "startColumn": 1,
                  "charOffset": 3588,
                  "charLength": 73,
                  "snippet": {
                    "text": "\tuseEffect(() => {\n\t\tif (id) {\n\t\t\trefresh()\n\t\t}\n\t}, [groups.enabled, id])"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ae41a4c9c515d5640679122865a8bd572359c0399ed9c914b253e5ea1351419a"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchData is ignored",
            "markdown": "Promise returned from fetchData is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/OrgSettings/Logging.jsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "charOffset": 1282,
                  "charLength": 9,
                  "snippet": {
                    "text": "fetchData"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 53,
                  "startColumn": 1,
                  "charOffset": 1248,
                  "charLength": 73,
                  "snippet": {
                    "text": "\tuseEffect(() => {\n\t\tif (id) {\n\t\t\tfetchData(page, pageSize)\n\t\t}\n\t}, [id])"
                  },
                  "sourceLanguage": "ECMAScript 6"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b4000c04da9d870998f2fdf708eb1706314d6ad940f9d99af2c9be86d546556f"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchGroups is ignored",
            "markdown": "Promise returned from fetchGroups is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/components/forms/campaigns/createForm.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 5,
                  "charOffset": 1841,
                  "charLength": 11,
                  "snippet": {
                    "text": "fetchGroups"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 65,
                  "startColumn": 1,
                  "charOffset": 1814,
                  "charLength": 57,
                  "snippet": {
                    "text": "\n    fetchTemplates();\n    fetchGroups();\n  }, [orgId]);\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b5549198ee0274736b3a1dcb928da8731b59d023216ee73c95dfbd17da448d42"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from refresh is ignored",
            "markdown": "Promise returned from refresh is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/organizations/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 3,
                  "charOffset": 1950,
                  "charLength": 7,
                  "snippet": {
                    "text": "refresh"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 60,
                  "startColumn": 1,
                  "charOffset": 1928,
                  "charLength": 40,
                  "snippet": {
                    "text": "\n\tuseEffect(() => {\n\t\trefresh()\n\t}, [])\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "bc7006f5449d2e9589c2458d6c8378844ae7996aa59ba92cfaea17a07ee49018"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from logout is ignored",
            "markdown": "Promise returned from logout is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/helpers/fetch-wrapper.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 17,
                  "charOffset": 3566,
                  "charLength": 6,
                  "snippet": {
                    "text": "logout"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 136,
                  "startColumn": 1,
                  "charOffset": 3422,
                  "charLength": 158,
                  "snippet": {
                    "text": "\t\t\t\ttoast.error(`${response.status} Failed`)\n\t\t\t\t// auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n\t\t\t\tuserService.logout()\n\t\t\t}\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "bccc0a8fd571c70ddf583dc5d7981f71d6457bc7719220d13a7eb849d1c385a4"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from getPlans is ignored",
            "markdown": "Promise returned from getPlans is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/sections/organization/view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 5,
                  "charOffset": 2109,
                  "charLength": 8,
                  "snippet": {
                    "text": "getPlans"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 76,
                  "startColumn": 1,
                  "charOffset": 2070,
                  "charLength": 88,
                  "snippet": {
                    "text": "  useEffect(() => {\n    refresh();\n    getPlans();\n  }, [refresh, getPlans]);\n  return ("
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ca20688ce43fcdb593430ab0424ccd1186027615a7297739ef730a336d007d9f"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from getGroupOptions is ignored",
            "markdown": "Promise returned from getGroupOptions is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/sections/organization/subscribers/view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 7,
                  "charOffset": 3918,
                  "charLength": 15,
                  "snippet": {
                    "text": "getGroupOptions"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 139,
                  "startColumn": 1,
                  "charOffset": 3875,
                  "charLength": 99,
                  "snippet": {
                    "text": "  useEffect(() => {\n    if (orgId) {\n      getGroupOptions();\n    }\n  }, [orgId, getGroupOptions]);"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "dbbb03ef9e4b8417ceba69ec1dd31a1a36626e05ba70f1b937eeca73bebbc467"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from logout is ignored",
            "markdown": "Promise returned from logout is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/auth/guard/guest-guard.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 7,
                  "charOffset": 1352,
                  "charLength": 6,
                  "snippet": {
                    "text": "logout"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 42,
                  "startColumn": 1,
                  "charOffset": 1258,
                  "charLength": 123,
                  "snippet": {
                    "text": "    if (organizations.length === 0) {\n      // If no organizations, logout and redirect\n      logout();\n      return;\n    }"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e0121bcb05575591081db97d696ecdeda339c796a333b17be2dca29122139be4"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchData is ignored",
            "markdown": "Promise returned from fetchData is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/[subscriberId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 3,
                  "charOffset": 4098,
                  "charLength": 9,
                  "snippet": {
                    "text": "fetchData"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 143,
                  "startColumn": 1,
                  "charOffset": 4091,
                  "charLength": 79,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tfetchData()\n\t}, [id, subscriberId, subscriberService, templateService])\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e2bf7d8ea50b6c87d8549fdea837c082f2515941013a9b994cb06257811c8eef"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchData is ignored",
            "markdown": "Promise returned from fetchData is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 4,
                  "charOffset": 5164,
                  "charLength": 9,
                  "snippet": {
                    "text": "fetchData"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 193,
                  "startColumn": 1,
                  "charOffset": 5128,
                  "charLength": 75,
                  "snippet": {
                    "text": "\t\tif (id) {\n\t\t\tgetGroupOptions()\n\t\t\tfetchData(page, pageSize)\n\t\t}\n\t}, [id])"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e3d82600adcbee78ea3d9e55f76d04d5e54ccd937e026107408cf8c12688637f"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from exitFullscreen is ignored",
            "markdown": "Promise returned from exitFullscreen is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/components/settings/drawer/fullscreen-option.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 16,
                  "charOffset": 624,
                  "charLength": 14,
                  "snippet": {
                    "text": "exitFullscreen"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 17,
                  "startColumn": 1,
                  "charOffset": 540,
                  "charLength": 135,
                  "snippet": {
                    "text": "      setFullscreen(true);\n    } else if (document.exitFullscreen) {\n      document.exitFullscreen();\n      setFullscreen(false);\n    }"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e62308130c05c5788c3fd7d509a21caf6b38362a24b2de6d8fbcbfa0da7bf117"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from refresh is ignored",
            "markdown": "Promise returned from refresh is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/sections/organization/templates/view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 7,
                  "charOffset": 3547,
                  "charLength": 7,
                  "snippet": {
                    "text": "refresh"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 137,
                  "startColumn": 1,
                  "charOffset": 3504,
                  "charLength": 99,
                  "snippet": {
                    "text": "  useEffect(() => {\n    if (orgId) {\n      refresh(enabled);\n    }\n  }, [orgId, refresh, enabled]);"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "edbf4630d3347fa798ec90a53589d920af30135cb607a70a96db46df56ef854e"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from refresh is ignored",
            "markdown": "Promise returned from refresh is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/sections/organization/view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 5,
                  "charOffset": 2094,
                  "charLength": 7,
                  "snippet": {
                    "text": "refresh"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 75,
                  "startColumn": 1,
                  "charOffset": 2069,
                  "charLength": 78,
                  "snippet": {
                    "text": "\n  useEffect(() => {\n    refresh();\n    getPlans();\n  }, [refresh, getPlans]);"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "faf4329d715addacf7a7ffb1ef3c209d1846c79a8e706b1ef6430fd0eb842a60"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSIgnoredPromiseFromCall",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Promise returned from fetchData is ignored",
            "markdown": "Promise returned from fetchData is ignored"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/sections/organization/dashboard/view.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 5,
                  "charOffset": 3649,
                  "charLength": 9,
                  "snippet": {
                    "text": "fetchData"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 131,
                  "startColumn": 1,
                  "charOffset": 3624,
                  "charLength": 77,
                  "snippet": {
                    "text": "\n  useEffect(() => {\n    fetchData();\n  }, [startDate, endDate, fetchData]);\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "fe8db19866707fd957ab378180c357b75541774810dafd7adcc994b67019b13b"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSMismatchedCollectionQueryUpdate",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Contents of collection 'inserted' are updated, but never queried",
            "markdown": "Contents of collection `inserted` are updated, but never queried"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/theme/next-emotion-cache.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 9,
                  "charOffset": 1249,
                  "charLength": 8,
                  "snippet": {
                    "text": "inserted"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 28,
                  "startColumn": 1,
                  "charOffset": 1179,
                  "charLength": 200,
                  "snippet": {
                    "text": "    cache.compat = true;\n    const prevInsert = cache.insert;\n    let inserted: { name: string; isGlobal: boolean }[] = [];\n    cache.insert = (...args) => {\n      const [selector, serialized] = args;"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5cc17110ec37ae30407ca2248306077362ec9777920490424f109b71c770e0bc"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSMismatchedCollectionQueryUpdate",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Contents of collection 'inserted' are updated, but never queried",
            "markdown": "Contents of collection `inserted` are updated, but never queried"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/theme/next-emotion-cache.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 9,
                  "charOffset": 1249,
                  "charLength": 8,
                  "snippet": {
                    "text": "inserted"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 28,
                  "startColumn": 1,
                  "charOffset": 1179,
                  "charLength": 200,
                  "snippet": {
                    "text": "    cache.compat = true;\n    const prevInsert = cache.insert;\n    let inserted: { name: string; isGlobal: boolean }[] = [];\n    cache.insert = (...args) => {\n      const [selector, serialized] = args;"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8c0b1821a943f99e269074e73f4f587efe57733780534b797b550e470c358cb0"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSNonASCIINames",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Name contains both ASCII and non-ASCII symbols: mainß",
            "markdown": "Name contains both ASCII and non-ASCII symbols: mainß"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/signin.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 46,
                  "charOffset": 1125,
                  "charLength": 5,
                  "snippet": {
                    "text": "mainß"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 30,
                  "startColumn": 1,
                  "charOffset": 1061,
                  "charLength": 87,
                  "snippet": {
                    "text": "  },\n  heroLeft: {\n    backgroundColor: theme.palette.secondary.mainß,\n  },\n  avatar: {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "87e1961376d3f3a818b19da38c197779855551ebf9c9ff381e810e33e99ecf16"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSSuspiciousNameCombination",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'width' should probably not be assigned to 'height'",
            "markdown": "'width' should probably not be assigned to 'height'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/iconify/Iconify.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 17,
                  "charOffset": 474,
                  "charLength": 13,
                  "snippet": {
                    "text": "height: width"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "charOffset": 423,
                  "charLength": 93,
                  "snippet": {
                    "text": "\t\t\tcomponent={Icon}\n\t\t\ticon={icon}\n\t\t\tsx={{ width, height: width, ...sx }}\n\t\t\t{...other}\n\t\t/>"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "1541a74a7f44a3d4de526b721c849c6bd1b4caa289371c911cec4b94c0ebfedc"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "JSSuspiciousNameCombination",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'width' should probably not be assigned to 'height'",
            "markdown": "'width' should probably not be assigned to 'height'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/components/iconify/iconify.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 18,
                  "charOffset": 506,
                  "charLength": 13,
                  "snippet": {
                    "text": "height: width"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "charOffset": 439,
                  "charLength": 110,
                  "snippet": {
                    "text": "    className=\"component-iconify\"\n    icon={icon}\n    sx={{ width, height: width, ...sx }}\n    {...other}\n  />"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "36a7f3ec67c73e00c2ac1b6281039ce063c6c8be0f7b7470777e63fefc1dbcff"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "JSSuspiciousNameCombination",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'width' should probably not be assigned to 'height'",
            "markdown": "'width' should probably not be assigned to 'height'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/components/iconify/iconify.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 18,
                  "charOffset": 506,
                  "charLength": 13,
                  "snippet": {
                    "text": "height: width"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "charOffset": 439,
                  "charLength": 110,
                  "snippet": {
                    "text": "    className=\"component-iconify\"\n    icon={icon}\n    sx={{ width, height: width, ...sx }}\n    {...other}\n  />"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "cd1fd4497357ff497128ada6be35d1bd93c387d71bfc54555e27f8e011a4017a"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "JSSuspiciousNameCombination",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'width' should probably not be assigned to 'height'",
            "markdown": "'width' should probably not be assigned to 'height'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/ui-core/src/UI/iconify/iconify.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 20,
                  "charOffset": 548,
                  "charLength": 13,
                  "snippet": {
                    "text": "height: width"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 20,
                  "startColumn": 1,
                  "charOffset": 475,
                  "charLength": 120,
                  "snippet": {
                    "text": "      className=\"component-iconify\"\n      icon={icon}\n      sx={{ width, height: width, ...sx }}\n      {...other}\n    />"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "db48d320dfaecfe53fcf2ea0c650440cf43e0e138165b50eed5d564d377f7e5c"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "JSUnusedAssignment",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Variable might not have been initialized",
            "markdown": "Variable might not have been initialized"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/auth/context/jwt/utils.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 16,
                  "charOffset": 1619,
                  "charLength": 12,
                  "snippet": {
                    "text": "expiredTimer"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 59,
                  "startColumn": 1,
                  "charOffset": 1558,
                  "charLength": 112,
                  "snippet": {
                    "text": "  const timeLeft = exp * 1000 - currentTime;\n\n  clearTimeout(expiredTimer);\n\n  expiredTimer = setTimeout(() => {"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "32c59a5b1034b1c74d9a4aafff41fc754dd9fc2fa5d89b58e48ab1f253d150af"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedAssignment",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Variable might not have been initialized",
            "markdown": "Variable might not have been initialized"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/auth/context/jwt/utils.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 16,
                  "charOffset": 1561,
                  "charLength": 12,
                  "snippet": {
                    "text": "expiredTimer"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 58,
                  "startColumn": 1,
                  "charOffset": 1500,
                  "charLength": 112,
                  "snippet": {
                    "text": "  const timeLeft = exp * 1000 - currentTime;\n\n  clearTimeout(expiredTimer);\n\n  expiredTimer = setTimeout(() => {"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5dbc1dba2be3b5e82840c74aafe3c9a4f699def544d6b79cbbdb1d6bf54be305"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedAssignment",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "The value assigned to 'expiredTimer' is never used",
            "markdown": "The value assigned to 'expiredTimer' is never used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/auth/context/jwt/utils.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 3,
                  "charOffset": 1579,
                  "charLength": 12,
                  "snippet": {
                    "text": "expiredTimer"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 60,
                  "startColumn": 1,
                  "charOffset": 1546,
                  "charLength": 95,
                  "snippet": {
                    "text": "  clearTimeout(expiredTimer);\n\n  expiredTimer = setTimeout(() => {\n    alert('Token expired');\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "afe2766e02417db527a0adff891f998ebd21c21aad1b888d2121745462b5be36"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedAssignment",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "The value assigned to 'expiredTimer' is never used",
            "markdown": "The value assigned to 'expiredTimer' is never used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/auth/context/jwt/utils.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 3,
                  "charOffset": 1637,
                  "charLength": 12,
                  "snippet": {
                    "text": "expiredTimer"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 61,
                  "startColumn": 1,
                  "charOffset": 1604,
                  "charLength": 95,
                  "snippet": {
                    "text": "  clearTimeout(expiredTimer);\n\n  expiredTimer = setTimeout(() => {\n    alert('Token expired');\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f6f78b8cc6200c4fbdc4cba895970312a39ec78048f75e9f76f0b2f689b5b9eb"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/useTable.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 31,
                  "charOffset": 449,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 9,
                  "startColumn": 1,
                  "charOffset": 378,
                  "charLength": 104,
                  "snippet": {
                    "text": "import Paper from '@mui/material/Paper'\n\nconst useStyles = makeStyles((theme) => ({\n\t'@global': {\n\t\ta: {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0472688e652b1dd09f7745a432016d633b29a5ff36c9b4859e6d21cafe573262"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter label",
            "markdown": "Unused parameter label"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/layouts/common/account-popover.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 28,
                  "charOffset": 2339,
                  "charLength": 5,
                  "snippet": {
                    "text": "label"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 65,
                  "startColumn": 1,
                  "charOffset": 2306,
                  "charLength": 80,
                  "snippet": {
                    "text": "  };\n\n  const handleClickItem = (label: string) => {\n    popover.onClose();\n  };"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0e6cb68acc63d3478824062b50e693779da1dd6edf634e561ff9554a8d6b4ab7"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter e",
            "markdown": "Unused parameter e"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/groups/[groupId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 30,
                  "charOffset": 3364,
                  "charLength": 1,
                  "snippet": {
                    "text": "e"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 137,
                  "startColumn": 1,
                  "charOffset": 3324,
                  "charLength": 95,
                  "snippet": {
                    "text": "\t}, [id])\n\n\tconst handleRemove = async (e) => {\n\t\tsetOpenRemoveDialog(false)\n\t\tsetLoading(true)"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "1145cadf38778a4adf09bc37602257acb543be9b27946fbe500353d093e956bf"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant control",
            "markdown": "Unused constant control"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/ui-core/src/UI/charts/donut-chart/donut-chart.stories.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 5,
                  "charOffset": 264,
                  "charLength": 7,
                  "snippet": {
                    "text": "control"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 14,
                  "startColumn": 1,
                  "charOffset": 221,
                  "charLength": 107,
                  "snippet": {
                    "text": "const Template = (args) => {\n  const {\n    control,\n    formState: { errors },\n  } = useForm<FormValues>();"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "12e95c4b97d5caeb3151d2bfd0142090986c5a745a22c5b8506d9c535dedc487"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/groups/[groupId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 31,
                  "charOffset": 566,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 20,
                  "startColumn": 1,
                  "charOffset": 468,
                  "charLength": 131,
                  "snippet": {
                    "text": "import { Popup, ServerSideTable } from '../../../../components/UI'\n\nconst useStyles = makeStyles((theme) => ({\n\t'@global': {\n\t\ta: {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "174016458b9efcd5b3c6e5f502a6b960fde643a0711c0487437bac2989b4cff5"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter index",
            "markdown": "Unused parameter index"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Details.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 42,
                  "charOffset": 641,
                  "charLength": 5,
                  "snippet": {
                    "text": "index"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 17,
                  "startColumn": 1,
                  "charOffset": 595,
                  "charLength": 101,
                  "snippet": {
                    "text": "}))\n\nconst DataSourceItem = ({ header, value, index }) => {\n\tconst [open, setOpen] = useState(false)\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "18404019aa3a39947cfe48333fd913af8649d2e6be40740aedc3a4cb6c5e4394"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter page",
            "markdown": "Unused parameter page"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/ui-core/src/UI/server-side-table/server-side-table.stories.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 47,
                  "charOffset": 1914,
                  "charLength": 4,
                  "snippet": {
                    "text": "page"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 78,
                  "startColumn": 1,
                  "charOffset": 1840,
                  "charLength": 164,
                  "snippet": {
                    "text": "\nconst mockGroupService = {\n  getGroupSubscribers: async (groupId, orgId, page, pageSize, searchQuery) => {\n    return Promise.resolve({ data: mockResponse });\n  },"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "211d14fd326ad658bd09446b6f87175b858ac877c23e4fc7ce7f3bdadb3b9320"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter index",
            "markdown": "Unused parameter index"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Details.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 31,
                  "charOffset": 1634,
                  "charLength": 5,
                  "snippet": {
                    "text": "index"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 65,
                  "startColumn": 1,
                  "charOffset": 1541,
                  "charLength": 182,
                  "snippet": {
                    "text": "\t\t\t<Grid container spacing={2}>\n\t\t\t\t{Array.isArray(datasource)\n\t\t\t\t\t? datasource.map((value, index) => {\n\t\t\t\t\t\t\t// check if value is an object\n\t\t\t\t\t\t\tif (typeof value === 'object') {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "233ad98b4f7d3ebc7ec34e468d295f0a52e04ab4874ffd7c408f3e5e252c62c5"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/theme/overrides/components/svg-icon.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 25,
                  "charOffset": 146,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 47,
                  "charLength": 143,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport function svgIcon(theme: Theme) {\n  return {\n    MuiSvgIcon: {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "24482d56ba522dcb93fdc7a88627b4e303f249f03b4b332a999b5c53b31e724c"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter subject",
            "markdown": "Unused parameter subject"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 56,
                  "charOffset": 175,
                  "charLength": 7,
                  "snippet": {
                    "text": "subject"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 43,
                  "charLength": 292,
                  "snippet": {
                    "text": "        jetstream: jest.fn().mockImplementation(() => {\n            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "25557a4a6a77d65e08afd2233f99325760e1b57e160efbd499c5fd43f878cc64"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant errors",
            "markdown": "Unused constant errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/AddUserDialog.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 28,
                  "charOffset": 1089,
                  "charLength": 6,
                  "snippet": {
                    "text": "errors"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 20,
                  "startColumn": 1,
                  "charOffset": 963,
                  "charLength": 217,
                  "snippet": {
                    "text": "  const [options, setOptions] = useState([]);\n  const loading = openInput && options.length === 0;\n  const { data, doRequest, errors } = useRequest({\n    url: `/api/organization/${orgName}/invite`,\n    method: \"post\","
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "26ff136892f9468e6eea108d7de90b10e0a74290ac2cda4c25d834ea1517b365"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused local variable mockProps",
            "markdown": "Unused local variable mockProps"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/UI/ProgressLineChart/ProgressLineChartSkeleton.test.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 6,
                  "charOffset": 186,
                  "charLength": 9,
                  "snippet": {
                    "text": "mockProps"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 134,
                  "charLength": 91,
                  "snippet": {
                    "text": "\ndescribe('ProgressLineChartSkeleton', () => {\n\tlet mockProps\n\n\tlet component: RenderResult"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "2bf05a40ce0d1df87c258ef7c3068a8fc234f85b8a6f6f3f783f011c0dd16f8f"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter config",
            "markdown": "Unused parameter config"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/cypress.config.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 25,
                  "charOffset": 285,
                  "charLength": 6,
                  "snippet": {
                    "text": "config"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 6,
                  "startColumn": 1,
                  "charOffset": 186,
                  "charLength": 161,
                  "snippet": {
                    "text": "  // DeleteFolder is a custom task used in subscribers_flow.cy.js\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('task', {\n        deleteFolder(downloads) {"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "2c1f1e608eee908c4d9db9af2c5fbfcd6582555664414f0c06ffcd06ad6f55a3"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant setShowAlert",
            "markdown": "Unused constant setShowAlert"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/NotificationItem.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 21,
                  "charOffset": 305,
                  "charLength": 12,
                  "snippet": {
                    "text": "setShowAlert"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 11,
                  "startColumn": 1,
                  "charOffset": 259,
                  "charLength": 89,
                  "snippet": {
                    "text": "  closeNotification,\n}) {\n  const [showAlert, setShowAlert] = useState(true);\n\n  return ("
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "2ec900681803aeb00819e0d62150f51330bfb7b1f22a2e99d6b67d19811c160b"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant Img",
            "markdown": "Unused constant Img"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/IntegrationItem.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 7,
                  "charOffset": 410,
                  "charLength": 3,
                  "snippet": {
                    "text": "Img"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 8,
                  "startColumn": 1,
                  "charOffset": 318,
                  "charLength": 151,
                  "snippet": {
                    "text": "import Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nconst Img = styled(\"img\")({\n  margin: \"auto\",\n  display: \"block\","
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "302294badaf41e9f5c4ef084dd6b28bf3b7c9d3e64f1011103de3644e41a42ad"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/theme/overrides/components/css-baseline.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 29,
                  "charOffset": 150,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 47,
                  "charLength": 151,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport function cssBaseline(theme: Theme) {\n  return {\n    MuiCssBaseline: {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "31320fc3a981f1b8f6c1ef49dc7f8eb03414d369cb06bde32a7d01de8c048b42"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant errors",
            "markdown": "Unused constant errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/ui-core/src/UI/charts/donut-chart/donut-chart.stories.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 18,
                  "charOffset": 290,
                  "charLength": 6,
                  "snippet": {
                    "text": "errors"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "charOffset": 250,
                  "charLength": 79,
                  "snippet": {
                    "text": "  const {\n    control,\n    formState: { errors },\n  } = useForm<FormValues>();\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "34b16e28d32f63d9438b1b1d55a289167a901461a33361e67d34265f80e6a4d2"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter refresh",
            "markdown": "Unused parameter refresh"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/components/forms/subscribers/subscriber-details/message.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 41,
                  "charOffset": 738,
                  "charLength": 7,
                  "snippet": {
                    "text": "refresh"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 22,
                  "startColumn": 1,
                  "charOffset": 632,
                  "charLength": 181,
                  "snippet": {
                    "text": "import { MessagePreview } from 'src/components/message-preview';\n\nexport const MessageSubscriberForm = ({ refresh, subscriber }: any) => {\n  const orgId = useOrganizationContext();\n"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3641905e2aacde39ba92a3441161d06f35d4309080f894aa3811632ecac13a45"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter index",
            "markdown": "Unused parameter index"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/[subscriberId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 44,
                  "charOffset": 5688,
                  "charLength": 5,
                  "snippet": {
                    "text": "index"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 212,
                  "startColumn": 1,
                  "charOffset": 5586,
                  "charLength": 197,
                  "snippet": {
                    "text": "\t\t\tconst bodyComponents = []\n\t\t\tlet onCreationTagIndex = 0\n\t\t\ttemplate.tags.body.forEach((bodyObject, index) => {\n\t\t\t\tconst fieldName = bodyObject.fields\n\t\t\t\tconst textValue = subscriber[fieldName]"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "36717ea99ff6f086758fe8d4ad8f3ae50dacad36bf7e06bff0094b5a79d915d2"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter buildId",
            "markdown": "Unused parameter buildId"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/next.config.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 5,
                  "charOffset": 66,
                  "charLength": 7,
                  "snippet": {
                    "text": "buildId"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 40,
                  "charLength": 139,
                  "snippet": {
                    "text": "\twebpack: (\n\t\tconfig,\n\t\t{ buildId, dev, isServer, defaultLoaders, nextRuntime, webpack }\n\t) => {\n\t\t// Important: return the modified config"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3bab8cc3b6c25ea0d28c8264f43c5e0aded11bfa90b75a72c0b348c0f85176e3"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter metadata",
            "markdown": "Unused parameter metadata"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/helpers/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 39,
                  "charOffset": 844,
                  "charLength": 8,
                  "snippet": {
                    "text": "metadata"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 30,
                  "startColumn": 1,
                  "charOffset": 750,
                  "charLength": 197,
                  "snippet": {
                    "text": "    };\n    let s3 = new AWS.S3({region: \"af-south-1\"});\n    s3.headObject(params, async (err, metadata) => {\n        if (err && err.code === 'NotFound') {\n            throw Error(\"File not found\");"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3bdf4f2914608dc827e2906ab4cef446d1797beb689356555b44559fa5ff5059"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter item",
            "markdown": "Unused parameter item"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/UI/CapturedAtCreationTimeFields/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 37,
                  "charOffset": 657,
                  "charLength": 4,
                  "snippet": {
                    "text": "item"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 29,
                  "startColumn": 1,
                  "charOffset": 618,
                  "charLength": 124,
                  "snippet": {
                    "text": "}\n\nconst RenderTextField = ({ control, item, index, error, name, label }) => (\n\t<Controller\n\t\tname={`${name}.${index}.text`}"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3ed69faa5cdee1a2ea88c0fb980b47524af0e59fe5a08b8afbc7779ace05b56b"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter onSignIn",
            "markdown": "Unused parameter onSignIn"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/signin.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 19,
                  "charOffset": 2015,
                  "charLength": 8,
                  "snippet": {
                    "text": "onSignIn"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 75,
                  "startColumn": 1,
                  "charOffset": 1991,
                  "charLength": 71,
                  "snippet": {
                    "text": "}));\n\nconst SignIn = ({ onSignIn }) => {\n  const router = useRouter();\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3f0f77a810987e2de8576f0076f682aafd27ea53881f1731e7fed28538a1f4e3"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/theme/overrides/components/css-baseline.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 29,
                  "charOffset": 150,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 47,
                  "charLength": 151,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport function cssBaseline(theme: Theme) {\n  return {\n    MuiCssBaseline: {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3f1db8370b3fa35aeb94bc93a0198ddf8149b249db114e4a68c51d9551d2b708"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter subject",
            "markdown": "Unused parameter subject"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/webhook/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 56,
                  "charOffset": 175,
                  "charLength": 7,
                  "snippet": {
                    "text": "subject"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 43,
                  "charLength": 292,
                  "snippet": {
                    "text": "        jetstream: jest.fn().mockImplementation(() => {\n            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3f98b1ae8722205887ba77c64f317a155f8284faf849db367ec7425403756618"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant id",
            "markdown": "Unused constant id"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/users/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 10,
                  "charOffset": 1113,
                  "charLength": 2,
                  "snippet": {
                    "text": "id"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 30,
                  "startColumn": 1,
                  "charOffset": 1049,
                  "charLength": 189,
                  "snippet": {
                    "text": "const Users = (props) => {\n\tconst router = useRouter()\n\tconst { id } = router.query\n\tconst headers = ['Username', 'First Name', 'Last Name', 'Email']\n\tconst [users, setUsers] = useState([])"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "415deb6064d8779f622ea8dd90e491654e90702f976bd2701b0a52c9da749fa4"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/users/[id].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 31,
                  "charOffset": 796,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 16,
                  "startColumn": 1,
                  "charOffset": 704,
                  "charLength": 128,
                  "snippet": {
                    "text": "import { userService, orgService } from \"../../../services\";\n\nconst useStyles = makeStyles((theme) => ({\n  \"@global\": {\n    a: {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "43359e3b79d37df9e7f7f05f516947634e9512392f29b0002660d91b1af84e2c"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter subject",
            "markdown": "Unused parameter subject"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/send-campaign/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 56,
                  "charOffset": 175,
                  "charLength": 7,
                  "snippet": {
                    "text": "subject"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 43,
                  "charLength": 292,
                  "snippet": {
                    "text": "        jetstream: jest.fn().mockImplementation(() => {\n            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "47d5899ce22965ec183e6bbff23e9ea50cba61b1ab887d204c76d7a86855603e"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter index",
            "markdown": "Unused parameter index"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/[subscriberId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 67,
                  "charOffset": 4282,
                  "charLength": 5,
                  "snippet": {
                    "text": "index"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 147,
                  "startColumn": 1,
                  "charOffset": 4170,
                  "charLength": 191,
                  "snippet": {
                    "text": "\n\tconst handleTemplateChange = async (e) => {\n\t\ttemplateService.getTemplate(id, e.target.value).then((template, index) => {\n\t\t\tsetTemplate(template)\n\t\t\tsetTemplatePreview(template.components)"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "4a8aa5df8d61e163a090944e383b5bb5b327f3340427f457320314327674773a"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter pageProps",
            "markdown": "Unused parameter pageProps"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 29,
                  "charOffset": 264,
                  "charLength": 9,
                  "snippet": {
                    "text": "pageProps"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 6,
                  "startColumn": 1,
                  "charOffset": 188,
                  "charLength": 178,
                  "snippet": {
                    "text": "import { adminService } from \"../../services\";\n\nconst Admin = ({ Component, pageProps }) => {\n  const router = useRouter();\n  const [authorized, setAuthorized] = useState(false);"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "4c6aa2eb3192aeae58a60373ee01ebe65e09efc61d8d3bd88ecd2e54f04ee3e5"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter nextRuntime",
            "markdown": "Unused parameter nextRuntime"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/next.config.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 45,
                  "charOffset": 106,
                  "charLength": 11,
                  "snippet": {
                    "text": "nextRuntime"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 40,
                  "charLength": 139,
                  "snippet": {
                    "text": "\twebpack: (\n\t\tconfig,\n\t\t{ buildId, dev, isServer, defaultLoaders, nextRuntime, webpack }\n\t) => {\n\t\t// Important: return the modified config"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "501d795f9448900822f0473ff7e22836034e8ec5ca471f57b284added83ceccb"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter isServer",
            "markdown": "Unused parameter isServer"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/next.config.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 19,
                  "charOffset": 80,
                  "charLength": 8,
                  "snippet": {
                    "text": "isServer"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 40,
                  "charLength": 139,
                  "snippet": {
                    "text": "\twebpack: (\n\t\tconfig,\n\t\t{ buildId, dev, isServer, defaultLoaders, nextRuntime, webpack }\n\t) => {\n\t\t// Important: return the modified config"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5284c3b4377efcdd7fb2690eb94e83daf596f7ce012acaab49f29fe8ce821d6a"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused local variable bucketName",
            "markdown": "Unused local variable bucketName"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/helpers/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 5,
                  "charOffset": 61,
                  "charLength": 10,
                  "snippet": {
                    "text": "bucketName"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 2,
                  "startColumn": 1,
                  "charOffset": 29,
                  "charLength": 124,
                  "snippet": {
                    "text": "import AWS from \"aws-sdk\";\n\nlet bucketName = \"channel360-template-tags\";\nexport async function lookUpCSVField(\n    csv: any,"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "550332bbf7bdaf39a4931edda860d861bfe07c619fb545b1aefeb871a10af891"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Details.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "charOffset": 560,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 13,
                  "startColumn": 1,
                  "charOffset": 503,
                  "charLength": 95,
                  "snippet": {
                    "text": "\ttextAlign: 'left',\n}))\nconst GridItem = styled(Grid)(({ theme }) => ({\n\ttextAlign: 'left',\n}))"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5747fb0a1fc1f22149971462168228c91d92962d2e6739d8694b47724fa09e49"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter e",
            "markdown": "Unused parameter e"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 30,
                  "charOffset": 6002,
                  "charLength": 1,
                  "snippet": {
                    "text": "e"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 230,
                  "startColumn": 1,
                  "charOffset": 5969,
                  "charLength": 88,
                  "snippet": {
                    "text": "\t}\n\n\tconst handleDelete = async (e) => {\n\t\tsetOpenDeleteDialog(false)\n\t\tsetLoading(true)"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "57cb044688813dfed4cf7e8a066f6eff69590d16cb92bcdc77abe860a7f104aa"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter reject",
            "markdown": "Unused parameter reject"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/send-campaign/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 50,
                  "charOffset": 260,
                  "charLength": 6,
                  "snippet": {
                    "text": "reject"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 4,
                  "startColumn": 1,
                  "charOffset": 99,
                  "charLength": 260,
                  "snippet": {
                    "text": "            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });\n                    });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5b129d739f2678598944d5d850a2a9480631f604137afcc0bec5bb2763cd9f2c"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/theme/overrides/components/loading-button.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 31,
                  "charOffset": 235,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 4,
                  "startColumn": 1,
                  "charOffset": 130,
                  "charLength": 155,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport function loadingButton(theme: Theme) {\n  return {\n    MuiLoadingButton: {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5de058f5651b5428037de5d6535ca6338043641ff4af7f4d515fa62f38438a37"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter subject",
            "markdown": "Unused parameter subject"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/notification-status/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 56,
                  "charOffset": 175,
                  "charLength": 7,
                  "snippet": {
                    "text": "subject"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 43,
                  "charLength": 292,
                  "snippet": {
                    "text": "        jetstream: jest.fn().mockImplementation(() => {\n            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5e88820e2d90612d6f3f17226bc65313d5ab5f663172c5b31c4559721720425a"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant label",
            "markdown": "Unused constant label"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/EditTemplateContent.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 7,
                  "charOffset": 967,
                  "charLength": 5,
                  "snippet": {
                    "text": "label"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 34,
                  "startColumn": 1,
                  "charOffset": 955,
                  "charLength": 98,
                  "snippet": {
                    "text": "}));\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\nfunction TabPanel(props) {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5e92374ae9538b6e95b59580d321f14cc5ef4ae0c3c993d7703167be0c178ec7"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant data",
            "markdown": "Unused constant data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Admin/Chart.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 7,
                  "charOffset": 306,
                  "charLength": 4,
                  "snippet": {
                    "text": "data"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 17,
                  "startColumn": 1,
                  "charOffset": 297,
                  "charLength": 71,
                  "snippet": {
                    "text": "}\n\nconst data = [\n  createData(\"00:00\", 0),\n  createData(\"03:00\", 300),"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5f93384376b27bbb70adaee98acfbd8edb044f777cd4a1a7e21504ac658f3a4c"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/theme/overrides/components/select.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 24,
                  "charOffset": 145,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 47,
                  "charLength": 141,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport function select(theme: Theme) {\n  return {\n    MuiSelect: {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "61b254da76f433670e5ce1751432ca16659e6f6d7ad3ff1e9e4bbec9846213b3"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant user",
            "markdown": "Unused constant user"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/services/campaigns.service.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 7,
                  "charOffset": 126,
                  "charLength": 4,
                  "snippet": {
                    "text": "user"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 2,
                  "startColumn": 1,
                  "charOffset": 36,
                  "charLength": 221,
                  "snippet": {
                    "text": "import { fetchWrapper } from '../helpers'\nimport { userService } from '../services'\nconst user = userService?.userValue\nconst { publicRuntimeConfig } = getConfig()\nconst baseUrl = `${publicRuntimeConfig.apiUrl}/campaigns`"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6380e863c0ebdec911a75c1a16aa918e3d3ff6c51a0b89e0fffd360af8567773"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant doRequest",
            "markdown": "Unused constant doRequest"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/OrgSettings/Integrations.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 10,
                  "charOffset": 695,
                  "charLength": 9,
                  "snippet": {
                    "text": "doRequest"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 21,
                  "startColumn": 1,
                  "charOffset": 564,
                  "charLength": 207,
                  "snippet": {
                    "text": "\tconst [openDialog, setOpenDialog] = useState(false)\n\tconst [integrations, setIntegrations] = useState<Integration[]>([])\n\tconst { doRequest } = useRequest({\n\t\turl: `/api/integration/${id}`,\n\t\tmethod: 'get',"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "649795511ca4440934571905844f6cfdb2b4dade1f3f9c6c2e01df9f9f60ed1a"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/theme/overrides/Badge.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 31,
                  "charOffset": 105,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 140,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport default function Badge(theme) {\n  return {\n    MuiBadge: {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "699301fe696359defc18d2b0f04c37c6afcce211bb4038c4c260b44aee539828"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter data",
            "markdown": "Unused parameter data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/send-campaign/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 73,
                  "charOffset": 192,
                  "charLength": 4,
                  "snippet": {
                    "text": "data"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 43,
                  "charLength": 292,
                  "snippet": {
                    "text": "        jetstream: jest.fn().mockImplementation(() => {\n            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6c768705e68661cf4364bce83f5590cd247e6fe04b62d0cac8f35923615dea20"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter event",
            "markdown": "Unused parameter event"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/templates/[templateName].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 30,
                  "charOffset": 6988,
                  "charLength": 5,
                  "snippet": {
                    "text": "event"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 265,
                  "startColumn": 1,
                  "charOffset": 6955,
                  "charLength": 67,
                  "snippet": {
                    "text": "\t}\n\n\tconst handleDelete = async (event) => {\n\t\tsetButtonLoad(true)\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6db5ed95f4fc8ad2f1f32fbd16ebf4ffbd03b234df397d40c649f05e3fbc21e6"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter data",
            "markdown": "Unused parameter data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/notification-status/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 73,
                  "charOffset": 192,
                  "charLength": 4,
                  "snippet": {
                    "text": "data"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 43,
                  "charLength": 292,
                  "snippet": {
                    "text": "        jetstream: jest.fn().mockImplementation(() => {\n            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6f3e3a9befbfa992ea92f03ea33e1ada4e4d84fdbb50eeaf14f74d5387e3740b"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter res",
            "markdown": "Unused parameter res"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/admin.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 47,
                  "charOffset": 2416,
                  "charLength": 3,
                  "snippet": {
                    "text": "res"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 84,
                  "startColumn": 1,
                  "charOffset": 2339,
                  "charLength": 141,
                  "snippet": {
                    "text": "\n\tconst onSubmit = (data) => {\n\t\torgService.inviteUser(id, data.email).then((res) => {\n\t\t\tdispatch(\n\t\t\t\tnotificationActions.addNotification({"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "710d830a72b7b0927904bd1b5d38c58b81e06d3bb6e708a07544b310f84191de"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/users/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 31,
                  "charOffset": 879,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 17,
                  "startColumn": 1,
                  "charOffset": 713,
                  "charLength": 199,
                  "snippet": {
                    "text": "import CreateTemplateForm from '../../../components/forms/templates/CreateTemplateForm'\nimport { userService } from '../../../services'\nconst useStyles = makeStyles((theme) => ({\n\t'@global': {\n\t\ta: {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "7295f411da685dabcf6d42da3f3e1c1328730b6d5ae2394f8dfce21c6e7961a5"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused local variable bucketName",
            "markdown": "Unused local variable bucketName"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/send-campaign/src/helpers/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 5,
                  "charOffset": 61,
                  "charLength": 10,
                  "snippet": {
                    "text": "bucketName"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 2,
                  "startColumn": 1,
                  "charOffset": 29,
                  "charLength": 124,
                  "snippet": {
                    "text": "import AWS from \"aws-sdk\";\n\nlet bucketName = \"channel360-template-tags\";\nexport async function lookUpCSVField(\n    csv: any,"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "771ab8486252fa4de6d7f4dc676caa7650b699fb50d7138b4ac662475eda7f4e"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter event",
            "markdown": "Unused parameter event"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/store/reducers/organization.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 20,
                  "charOffset": 494,
                  "charLength": 5,
                  "snippet": {
                    "text": "event"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 17,
                  "startColumn": 1,
                  "charOffset": 434,
                  "charLength": 110,
                  "snippet": {
                    "text": "\t\t\tstate.organization = result.data\n\t\t},\n\t\trefresh: (state, event) => {\n\t\t\tstate.refresh = !state.refresh\n\t\t},"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "784e3ae23814d7e76b959ca51ed7e3b0418bdaf5c1c5dc4e914b6df0c056b66d"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant setIsDisabled",
            "markdown": "Unused constant setIsDisabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/header.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 21,
                  "charOffset": 3250,
                  "charLength": 13,
                  "snippet": {
                    "text": "setIsDisabled"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 116,
                  "startColumn": 1,
                  "charOffset": 3136,
                  "charLength": 212,
                  "snippet": {
                    "text": "\tconst [signedIn, setSignedIn] = useState(null)\n\tconst [isAdmin, setIsAdmin] = useState(null)\n\tconst [isDisabled, setIsDisabled] = useState(false)\n\tconst isSignIn = signedIn || isAdmin\n\tlet location = useRouter()"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "79ca866132889d6a6f0602f6b2744d0a372cef2707b47a968a8c99a85c1c06ef"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter index",
            "markdown": "Unused parameter index"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/components/forms/subscribers/subscriber-details/message.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 50,
                  "charOffset": 3436,
                  "charLength": 5,
                  "snippet": {
                    "text": "index"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 117,
                  "startColumn": 1,
                  "charOffset": 3297,
                  "charLength": 258,
                  "snippet": {
                    "text": "        const bodyComponents: NotificationTag[] = [];\n        let onCreationTagIndex = 0;\n        template!.tags.body.forEach((bodyObject, index) => {\n          const fieldName = bodyObject.fields as string;\n          const textValue = subscriber[fieldName];"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "7aee51df153a7b784395186333cf4b9bd206db13e2f832fa39e9c1694bb41184"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter orgId",
            "markdown": "Unused parameter orgId"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/ui-core/src/UI/server-side-table/server-side-table.stories.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 40,
                  "charOffset": 1907,
                  "charLength": 5,
                  "snippet": {
                    "text": "orgId"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 78,
                  "startColumn": 1,
                  "charOffset": 1840,
                  "charLength": 164,
                  "snippet": {
                    "text": "\nconst mockGroupService = {\n  getGroupSubscribers: async (groupId, orgId, page, pageSize, searchQuery) => {\n    return Promise.resolve({ data: mockResponse });\n  },"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "7c6fdd7ffd11c0b758bc0e7723e10098695606974ae79c6a81caa3629d3eb4c6"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter groupId",
            "markdown": "Unused parameter groupId"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/ui-core/src/UI/server-side-table/server-side-table.stories.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 31,
                  "charOffset": 1898,
                  "charLength": 7,
                  "snippet": {
                    "text": "groupId"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 78,
                  "startColumn": 1,
                  "charOffset": 1840,
                  "charLength": 164,
                  "snippet": {
                    "text": "\nconst mockGroupService = {\n  getGroupSubscribers: async (groupId, orgId, page, pageSize, searchQuery) => {\n    return Promise.resolve({ data: mockResponse });\n  },"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "7d6e1db7ea3779347ab24ea929d228a9afc258fef3c6edd6d5e3e874e2d521d7"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant errors",
            "markdown": "Unused constant errors"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/UI/Range/Range.stories.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 16,
                  "charOffset": 202,
                  "charLength": 6,
                  "snippet": {
                    "text": "errors"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 10,
                  "startColumn": 1,
                  "charOffset": 167,
                  "charLength": 69,
                  "snippet": {
                    "text": "\tconst {\n\t\tcontrol,\n\t\tformState: { errors },\n\t} = useForm()\n\treturn ("
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "7ef3454f366b577b2a335553655584c887e9b47c42d26184667faaa4af57de4d"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter reject",
            "markdown": "Unused parameter reject"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/notification-status/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 50,
                  "charOffset": 260,
                  "charLength": 6,
                  "snippet": {
                    "text": "reject"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 4,
                  "startColumn": 1,
                  "charOffset": 99,
                  "charLength": 260,
                  "snippet": {
                    "text": "            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });\n                    });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8509cac531f619885f211da98574140129d81431b742f3f9ece6e2fd701de263"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/theme/overrides/Paper.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 31,
                  "charOffset": 105,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 140,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport default function Paper(theme) {\n  return {\n    MuiPaper: {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "879e3d7599c1c4ad5c07c2c032a47af3a133928342a749eff0e879bea8bfdaeb"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter e",
            "markdown": "Unused parameter e"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 41,
                  "charOffset": 6396,
                  "charLength": 1,
                  "snippet": {
                    "text": "e"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 245,
                  "startColumn": 1,
                  "charOffset": 6352,
                  "charLength": 103,
                  "snippet": {
                    "text": "\t}\n\n\tconst onBulkDeleteSubscribers = async (e) => {\n\t\tsetOpenBulkDeleteDialog(false)\n\t\tsetLoading(true)"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "88cd21dd349ab80a729c4776fc53fdc83c197c456745025e7685789673d0d5b8"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter subject",
            "markdown": "Unused parameter subject"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/auth/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 56,
                  "charOffset": 175,
                  "charLength": 7,
                  "snippet": {
                    "text": "subject"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 43,
                  "charLength": 292,
                  "snippet": {
                    "text": "        jetstream: jest.fn().mockImplementation(() => {\n            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8cac6d48cf56a38cf4bc184c5cd777b9961dd7340c9f1c636f3792ffe2212f64"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter e",
            "markdown": "Unused parameter e"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/groups/[groupId].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 34,
                  "charOffset": 3567,
                  "charLength": 1,
                  "snippet": {
                    "text": "e"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 144,
                  "startColumn": 1,
                  "charOffset": 3530,
                  "charLength": 96,
                  "snippet": {
                    "text": "\t}\n\n\tconst handleBulkRemove = async (e) => {\n\t\tsetOpenBulkRemoveDialog(false)\n\t\tsetLoading(true)"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8cc1dcafde5e0e3f103a90998bd0d1359f4dc4480a2126911676538593ae9afd"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter metadata",
            "markdown": "Unused parameter metadata"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/send-campaign/src/helpers/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 39,
                  "charOffset": 844,
                  "charLength": 8,
                  "snippet": {
                    "text": "metadata"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 30,
                  "startColumn": 1,
                  "charOffset": 750,
                  "charLength": 197,
                  "snippet": {
                    "text": "    };\n    let s3 = new AWS.S3({region: \"af-south-1\"});\n    s3.headObject(params, async (err, metadata) => {\n        if (err && err.code === 'NotFound') {\n            throw Error(\"File not found\");"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "9ae62af9e87f4f27b8296cdd166215839ace46ca8630f20d7d55dec0ad6c8d07"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter config",
            "markdown": "Unused parameter config"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/cypress.config.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 25,
                  "charOffset": 285,
                  "charLength": 6,
                  "snippet": {
                    "text": "config"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 6,
                  "startColumn": 1,
                  "charOffset": 186,
                  "charLength": 161,
                  "snippet": {
                    "text": "  // DeleteFolder is a custom task used in subscribers_flow.cy.js\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('task', {\n        deleteFolder(downloads) {"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "9e54f9402d97f8bdb029d0ce74d9a0549fb8f3d268591f37b3f6ccb3c6a43ae3"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter props",
            "markdown": "Unused parameter props"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/users/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 16,
                  "charOffset": 1064,
                  "charLength": 5,
                  "snippet": {
                    "text": "props"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 28,
                  "startColumn": 1,
                  "charOffset": 1044,
                  "charLength": 88,
                  "snippet": {
                    "text": "}))\n\nconst Users = (props) => {\n\tconst router = useRouter()\n\tconst { id } = router.query"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a11a622f4853c6a946b0b42a747af0424e5eaee7b32a8f89b2efb5e5b4eb1ad1"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter args",
            "markdown": "Unused parameter args"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/UI/TextInput/TextInput.stories.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 19,
                  "charOffset": 190,
                  "charLength": 4,
                  "snippet": {
                    "text": "args"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 8,
                  "startColumn": 1,
                  "charOffset": 169,
                  "charLength": 51,
                  "snippet": {
                    "text": "}\n\nconst Template = (args) => {\n\tconst {\n\t\tcontrol,"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a51152b56a2bca6e6482c834b76c3d88f737fdf7a03fb5022d9c090ed5ee9bef"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter data",
            "markdown": "Unused parameter data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/webhook/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 73,
                  "charOffset": 192,
                  "charLength": 4,
                  "snippet": {
                    "text": "data"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 43,
                  "charLength": 292,
                  "snippet": {
                    "text": "        jetstream: jest.fn().mockImplementation(() => {\n            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a9e8f98e2a02648376f51a63e59f8e6e564057058de746ad8e5664d2719c8d71"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/theme/overrides/components/loading-button.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 31,
                  "charOffset": 235,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 4,
                  "startColumn": 1,
                  "charOffset": 130,
                  "charLength": 155,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport function loadingButton(theme: Theme) {\n  return {\n    MuiLoadingButton: {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "acf0bf2d8fc9e66656325244bdc7db74dc66116d40439985dfdbaa6a28cdd858"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter props",
            "markdown": "Unused parameter props"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/useTable.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 19,
                  "charOffset": 985,
                  "charLength": 5,
                  "snippet": {
                    "text": "props"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 31,
                  "startColumn": 1,
                  "charOffset": 963,
                  "charLength": 130,
                  "snippet": {
                    "text": "\t)\n\n\tconst TblHead = (props) => {\n\t\tconst handleSortRequest = (cellId) => {\n\t\t\tconst isAsc = orderBy === cellId && order === 'asc'"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ae2cad6ad859f2cc4c41ba7fc19f2661edbb4e4f3eeb58c3cdcd8de02c500dfc"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant handleClickOpen",
            "markdown": "Unused constant handleClickOpen"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/DeleteDialog.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 9,
                  "charOffset": 430,
                  "charLength": 15,
                  "snippet": {
                    "text": "handleClickOpen"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 13,
                  "startColumn": 1,
                  "charOffset": 401,
                  "charLength": 78,
                  "snippet": {
                    "text": "  handleDelete,\n}) {\n  const handleClickOpen = () => {\n    setOpen(true);\n  };"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b171fbb21f2cce753afd7cd791da9df4215751e64dab04c93ecaa9428c73a4a1"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/theme/overrides/SvgIcon.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 33,
                  "charOffset": 107,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 144,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport default function SvgIcon(theme) {\n  return {\n    MuiSvgIcon: {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b40597b353d22121da18762086d722291d9563ec4911018ce66902804f9c45e3"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter subject",
            "markdown": "Unused parameter subject"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/subscriber/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 56,
                  "charOffset": 175,
                  "charLength": 7,
                  "snippet": {
                    "text": "subject"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 43,
                  "charLength": 292,
                  "snippet": {
                    "text": "        jetstream: jest.fn().mockImplementation(() => {\n            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b55917bd76b7c568ffef3d97c28625afd7b501580f3ef1f0918e73eda3f3d471"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter reject",
            "markdown": "Unused parameter reject"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/subscriber/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 50,
                  "charOffset": 260,
                  "charLength": 6,
                  "snippet": {
                    "text": "reject"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 4,
                  "startColumn": 1,
                  "charOffset": 99,
                  "charLength": 260,
                  "snippet": {
                    "text": "            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });\n                    });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b5a0c7e949725a41c5a9383d596685a9208aba42aedaeb63550d8224b531af83"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter searchQuery",
            "markdown": "Unused parameter searchQuery"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/ui-core/src/UI/server-side-table/server-side-table.stories.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 63,
                  "charOffset": 1930,
                  "charLength": 11,
                  "snippet": {
                    "text": "searchQuery"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 78,
                  "startColumn": 1,
                  "charOffset": 1840,
                  "charLength": 164,
                  "snippet": {
                    "text": "\nconst mockGroupService = {\n  getGroupSubscribers: async (groupId, orgId, page, pageSize, searchQuery) => {\n    return Promise.resolve({ data: mockResponse });\n  },"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b5f08414bc3a90ed6f7a8261923220ec732a59a555ab26b6d6ae801442b3fedc"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter action",
            "markdown": "Unused parameter action"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/forms/auth/signin/signin.test.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 34,
                  "charOffset": 428,
                  "charLength": 6,
                  "snippet": {
                    "text": "action"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "charOffset": 390,
                  "charLength": 90,
                  "snippet": {
                    "text": "}))\n\nconst mockReducer = (state = {}, action) => state\n\nconst mockStore = configureStore({"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b7faf51322d9225b36fd62e4f775e124078b15eabdf7addab5873450766a0f26"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/theme/overrides/components/appbar.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 24,
                  "charOffset": 145,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 47,
                  "charLength": 141,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport function appBar(theme: Theme) {\n  return {\n    MuiAppBar: {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ba0e4ee4ae40e40f802e9366e907feeb0291ea071b6c2f702f183aaa0491afc8"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter pageSize",
            "markdown": "Unused parameter pageSize"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/ui-core/src/UI/server-side-table/server-side-table.stories.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 53,
                  "charOffset": 1920,
                  "charLength": 8,
                  "snippet": {
                    "text": "pageSize"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 78,
                  "startColumn": 1,
                  "charOffset": 1840,
                  "charLength": 164,
                  "snippet": {
                    "text": "\nconst mockGroupService = {\n  getGroupSubscribers: async (groupId, orgId, page, pageSize, searchQuery) => {\n    return Promise.resolve({ data: mockResponse });\n  },"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "bb3a98e444962968cd2125a690f2b93c75073063a97668bdc28a85904e948876"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter reject",
            "markdown": "Unused parameter reject"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 50,
                  "charOffset": 260,
                  "charLength": 6,
                  "snippet": {
                    "text": "reject"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 4,
                  "startColumn": 1,
                  "charOffset": 99,
                  "charLength": 260,
                  "snippet": {
                    "text": "            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });\n                    });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "bdb3cbf973fc25fd6efdfad0f583f3c51ef4613003a4f313e8b09657c5cdff97"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/theme/overrides/Select.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 32,
                  "charOffset": 159,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 4,
                  "startColumn": 1,
                  "charOffset": 53,
                  "charLength": 142,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport default function Select(theme) {\n  return {\n    MuiSelect: {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "be3c684259bf80476729ab9b3a4107d4b145dd36037ace5ac74ad23bed29a226"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter data",
            "markdown": "Unused parameter data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/subscriber/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 73,
                  "charOffset": 192,
                  "charLength": 4,
                  "snippet": {
                    "text": "data"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 43,
                  "charLength": 292,
                  "snippet": {
                    "text": "        jetstream: jest.fn().mockImplementation(() => {\n            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "bfe8dfdc1071d4e081ef575acd4db94273f220c7ce85391b66a19cdc6400a1b2"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter client",
            "markdown": "Unused parameter client"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/auth/migrations/20220905124009-add_id_number_to_users_schema.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "charOffset": 239,
                  "charLength": 6,
                  "snippet": {
                    "text": "client"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 12,
                  "startColumn": 1,
                  "charOffset": 216,
                  "charLength": 124,
                  "snippet": {
                    "text": "  },\n\n  async down(db, client) {\n    // remove id_number from users collection.\n    await db.collection(\"users\").updateMany("
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "cbde17913e0a027ef71f32c0bc157875fc8cbc91e90ec9cd7e2dfb3373abec0f"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter props",
            "markdown": "Unused parameter props"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Notification.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 39,
                  "charOffset": 553,
                  "charLength": 5,
                  "snippet": {
                    "text": "props"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "charOffset": 510,
                  "charLength": 116,
                  "snippet": {
                    "text": "});\n\nexport default function Notifications(props) {\n  const dispatch = useDispatch();\n  const classes = useStyles();"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "cc17ee8a954b5f0bb2d4b38ae63faa029f7c8c548ace63ac0a39f6765d2f42f5"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/organizations/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 31,
                  "charOffset": 916,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "charOffset": 797,
                  "charLength": 152,
                  "snippet": {
                    "text": "import Link from 'next/link'\nimport { orgService, planService } from '../../../services'\nconst useStyles = makeStyles((theme) => ({\n\t'@global': {\n\t\ta: {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ccf8c89032f0c51e02072e7052e7d873ccebcac7c95064c556e0f03f916b0b02"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter args",
            "markdown": "Unused parameter args"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/ui-core/src/UI/charts/donut-chart/donut-chart.stories.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 19,
                  "charOffset": 239,
                  "charLength": 4,
                  "snippet": {
                    "text": "args"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 12,
                  "startColumn": 1,
                  "charOffset": 217,
                  "charLength": 55,
                  "snippet": {
                    "text": "};\n\nconst Template = (args) => {\n  const {\n    control,"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ceccfa7b45e5b70be356f1a391f3ddc23c42fb4e4ceb37bfacc69b1c484a3552"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Details.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 35,
                  "charOffset": 488,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 10,
                  "startColumn": 1,
                  "charOffset": 397,
                  "charLength": 129,
                  "snippet": {
                    "text": "import ExpandMore from '@mui/icons-material/ExpandMore'\n\nconst Typography = styled(Box)(({ theme }) => ({\n\ttextAlign: 'left',\n}))"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "d0153d0cf55e1875c0c3b40fc98b52e77ff1d3427811037a7fe77b21802e20ad"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/organizations/[id].tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 31,
                  "charOffset": 1464,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 37,
                  "startColumn": 1,
                  "charOffset": 1430,
                  "charLength": 67,
                  "snippet": {
                    "text": "})\n\nconst useStyles = makeStyles((theme) => ({\n\t'@global': {\n\t\ta: {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "d3ef36c4aaf36990dc96a700903b6ad9d5c7c509c7452a48c707cd32baf8394b"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/templates/[templateName].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 31,
                  "charOffset": 1354,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 38,
                  "startColumn": 1,
                  "charOffset": 1292,
                  "charLength": 95,
                  "snippet": {
                    "text": "import Image from 'next/image'\n\nconst useStyles = makeStyles((theme) => ({\n\t'@global': {\n\t\ta: {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "d7c4f188f62115bbeeec29845f79b08e62675316a3d5bb9cccc17c17b38d25e3"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter client",
            "markdown": "Unused parameter client"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/auth/migrations/20220905124009-add_id_number_to_users_schema.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 16,
                  "charOffset": 34,
                  "charLength": 6,
                  "snippet": {
                    "text": "client"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 130,
                  "snippet": {
                    "text": "module.exports = {\n  async up(db, client) {\n    // add id_number to users collection.\n    await db.collection(\"users\").updateMany("
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "db1c618de5893b7c46a2969215f7bf64b6154b3d990cd9f1922db0613d71ec3b"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter reject",
            "markdown": "Unused parameter reject"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/auth/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 50,
                  "charOffset": 260,
                  "charLength": 6,
                  "snippet": {
                    "text": "reject"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 4,
                  "startColumn": 1,
                  "charOffset": 99,
                  "charLength": 260,
                  "snippet": {
                    "text": "            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });\n                    });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "db5d3a61f5a2820719d9dd20217f95b11d306062f830d0308fc113bef328c553"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/theme/overrides/Link.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 30,
                  "charOffset": 104,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 138,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport default function Link(theme) {\n  return {\n    MuiLink: {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ddceeae2a7244e18fa5fdc04df8549a69b41f04463c0747ae65a1096d19791b3"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused local variable mockProps",
            "markdown": "Unused local variable mockProps"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/UI/ProgressBar/ProgressBarSkeleton.test.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 6,
                  "charOffset": 174,
                  "charLength": 9,
                  "snippet": {
                    "text": "mockProps"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 122,
                  "charLength": 91,
                  "snippet": {
                    "text": "\ndescribe('ProgressLineChartSkeleton', () => {\n\tlet mockProps\n\n\tlet component: RenderResult"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "de2265bd2fdf1adb158ddf98ea3028984d88744fbcacd678d265039194646e29"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter dev",
            "markdown": "Unused parameter dev"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/next.config.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "charOffset": 75,
                  "charLength": 3,
                  "snippet": {
                    "text": "dev"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 40,
                  "charLength": 139,
                  "snippet": {
                    "text": "\twebpack: (\n\t\tconfig,\n\t\t{ buildId, dev, isServer, defaultLoaders, nextRuntime, webpack }\n\t) => {\n\t\t// Important: return the modified config"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "de2e5cda4300a6db4b94eae1251b8109eb66b00aa14ff913a125dca0fc0b013a"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant open",
            "markdown": "Unused constant open"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/users/[id].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 10,
                  "charOffset": 1094,
                  "charLength": 4,
                  "snippet": {
                    "text": "open"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 31,
                  "startColumn": 1,
                  "charOffset": 1052,
                  "charLength": 175,
                  "snippet": {
                    "text": "  const headers = [\"Name\", \"\"];\n\n  const [open, setOpen] = useState(false);\n  const [user, setUser] = useState(null);\n  const [organizations, setOrganizations] = useState([]);"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "dfab4d4829815f705504acb6baf5640ef262f9f9e9b26cdd318b33e884b0859c"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter defaultLoaders",
            "markdown": "Unused parameter defaultLoaders"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/next.config.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 29,
                  "charOffset": 90,
                  "charLength": 14,
                  "snippet": {
                    "text": "defaultLoaders"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 40,
                  "charLength": 139,
                  "snippet": {
                    "text": "\twebpack: (\n\t\tconfig,\n\t\t{ buildId, dev, isServer, defaultLoaders, nextRuntime, webpack }\n\t) => {\n\t\t// Important: return the modified config"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "dff1661c52b319945bb6150703b8d9c34083cc033c9654d21110c98c9e624bff"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant isDisabled",
            "markdown": "Unused constant isDisabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/header.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 9,
                  "charOffset": 3238,
                  "charLength": 10,
                  "snippet": {
                    "text": "isDisabled"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 116,
                  "startColumn": 1,
                  "charOffset": 3136,
                  "charLength": 212,
                  "snippet": {
                    "text": "\tconst [signedIn, setSignedIn] = useState(null)\n\tconst [isAdmin, setIsAdmin] = useState(null)\n\tconst [isDisabled, setIsDisabled] = useState(false)\n\tconst isSignIn = signedIn || isAdmin\n\tlet location = useRouter()"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e40c722de5a3ef52f305db175fd738a872df4eb4ce6b2dc115fc9c06e76ea30d"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/theme/overrides/components/appbar.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 24,
                  "charOffset": 145,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 47,
                  "charLength": 141,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport function appBar(theme: Theme) {\n  return {\n    MuiAppBar: {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e47ae485ebeb3a974c484fab62c293b8271c3b4fda912c5f0011f78da7b0131e"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter reject",
            "markdown": "Unused parameter reject"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/webhook/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 50,
                  "charOffset": 260,
                  "charLength": 6,
                  "snippet": {
                    "text": "reject"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 4,
                  "startColumn": 1,
                  "charOffset": 99,
                  "charLength": 260,
                  "snippet": {
                    "text": "            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });\n                    });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e7c5cf4a2287b65c352120a45d5793b33319e1ef127276e90710be0a127e930a"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant AppBar",
            "markdown": "Unused constant AppBar"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Drawer.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "charOffset": 553,
                  "charLength": 6,
                  "snippet": {
                    "text": "AppBar"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 12,
                  "startColumn": 1,
                  "charOffset": 459,
                  "charLength": 197,
                  "snippet": {
                    "text": "import ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nconst drawerWidth = 240;\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "eb03454d9fe0376580ea8e0e5e520c02d20fd30da7c63365eefa2105adfc7cfd"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter webpack",
            "markdown": "Unused parameter webpack"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/next.config.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 58,
                  "charOffset": 119,
                  "charLength": 7,
                  "snippet": {
                    "text": "webpack"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 40,
                  "charLength": 139,
                  "snippet": {
                    "text": "\twebpack: (\n\t\tconfig,\n\t\t{ buildId, dev, isServer, defaultLoaders, nextRuntime, webpack }\n\t) => {\n\t\t// Important: return the modified config"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ec38425af97d14fd7e01d851b31faed952bfb5771addf1106fd01e25218f2c22"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant organization",
            "markdown": "Unused constant organization"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Drawer.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 9,
                  "charOffset": 1977,
                  "charLength": 12,
                  "snippet": {
                    "text": "organization"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 56,
                  "startColumn": 1,
                  "charOffset": 1890,
                  "charLength": 209,
                  "snippet": {
                    "text": "export const DrawerMenu = ({ open, setOpen }) => {\n  // get organization state\n  const organization = useSelector((state) => state.organization.organization);\n  const toggleDrawer = () => {\n    setOpen(!open);"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "eddf6e8072d9f2c383b40cfa9c26ef6dda43966f0b74effc6b4fe052fb8652d5"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/theme/overrides/components/svg-icon.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 25,
                  "charOffset": 146,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 47,
                  "charLength": 143,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport function svgIcon(theme: Theme) {\n  return {\n    MuiSvgIcon: {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ede6d9c13ac47d48d83bd235a6d7a8b7f3c7f46cb3311831a9f35e04ea2943e6"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter data",
            "markdown": "Unused parameter data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/auth/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 73,
                  "charOffset": 192,
                  "charLength": 4,
                  "snippet": {
                    "text": "data"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 43,
                  "charLength": 292,
                  "snippet": {
                    "text": "        jetstream: jest.fn().mockImplementation(() => {\n            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "eeb18a694edb0d8f9a098b351b9fcb082cf68d325532c45f5c224c61a42db29d"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused constant integration",
            "markdown": "Unused constant integration"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/AddWhatsappIntegrationStepper.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 9,
                  "charOffset": 988,
                  "charLength": 11,
                  "snippet": {
                    "text": "integration"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 23,
                  "startColumn": 1,
                  "charOffset": 918,
                  "charLength": 227,
                  "snippet": {
                    "text": "  const dispatch = useDispatch();\n  // get integration state.\n  const integration = useSelector((state) => state.integration);\n  const [activeStep, setActiveStep] = useState(0);\n  const [completed, setCompleted] = useState({});"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f2b35c17e8c4b9c78135f623bdb7496a35764f4e24f52178fe078291ea219280"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter data",
            "markdown": "Unused parameter data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/__mocks__/nats-wrapper.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 73,
                  "charOffset": 192,
                  "charLength": 4,
                  "snippet": {
                    "text": "data"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 43,
                  "charLength": 292,
                  "snippet": {
                    "text": "        jetstream: jest.fn().mockImplementation(() => {\n            return {\n                publish: jest.fn().mockImplementation((subject: string, data: string) => {\n                    return new Promise((resolve, reject) => {\n                        resolve({ stream: 'stream', seq: 1 });"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f4116d33a3580550380ced1e367ecfef4a9208b63c930e97e645fc3d911e7b5c"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter Component",
            "markdown": "Unused parameter Component"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/admin/index.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 18,
                  "charOffset": 253,
                  "charLength": 9,
                  "snippet": {
                    "text": "Component"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 6,
                  "startColumn": 1,
                  "charOffset": 188,
                  "charLength": 178,
                  "snippet": {
                    "text": "import { adminService } from \"../../services\";\n\nconst Admin = ({ Component, pageProps }) => {\n  const router = useRouter();\n  const [authorized, setAuthorized] = useState(false);"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f4962d2aa960fbc2debf9d876dfc28b6487ee9287b80d4ab841bddc8b1db353f"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/theme/overrides/components/select.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 24,
                  "charOffset": 145,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 47,
                  "charLength": 141,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport function select(theme: Theme) {\n  return {\n    MuiSelect: {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f9c82531f6e72751b79391832c1eb758929901bf9854ea88249b2e81ede94d65"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSUnusedLocalSymbols",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unused parameter theme",
            "markdown": "Unused parameter theme"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/theme/overrides/LoadingButton.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 39,
                  "charOffset": 113,
                  "charLength": 5,
                  "snippet": {
                    "text": "theme"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 1,
                  "startColumn": 1,
                  "charOffset": 0,
                  "charLength": 156,
                  "snippet": {
                    "text": "// ----------------------------------------------------------------------\n\nexport default function LoadingButton(theme) {\n  return {\n    MuiLoadingButton: {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "fd7f818b444fa581b00416e4f5eadb796e0859319456e96b8309c3f363d7b3e4"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/new/[id].js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "charOffset": 2126,
                  "charLength": 168,
                  "snippet": {
                    "text": "notificationActions.addNotification({\n\t\t\t\ttype: 'success',\n\t\t\t\ttitle: 'Organization Created',\n\t\t\t\tdescription: 'You have successfully created a new organization',\n\t\t\t})"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 73,
                  "startColumn": 1,
                  "charOffset": 2106,
                  "charLength": 211,
                  "snippet": {
                    "text": "\t\t})\n\t\tdispatch(\n\t\t\tnotificationActions.addNotification({\n\t\t\t\ttype: 'success',\n\t\t\t\ttitle: 'Organization Created',\n\t\t\t\tdescription: 'You have successfully created a new organization',\n\t\t\t})\n\t\t)\n\t\trouter.push('/')"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "132851faa8593e33a10d23960cf60c8fecb3b562ee72a23dcdb536596ef8b9ef"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/conversation-router/src/events/listeners/organization-created-listener.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 11,
                  "charOffset": 862,
                  "charLength": 19,
                  "snippet": {
                    "text": "organization.save()"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 24,
                  "startColumn": 1,
                  "charOffset": 800,
                  "charLength": 170,
                  "snippet": {
                    "text": "      settings: data.settings || undefined,\n    });\n    await organization.save().catch((err) => {\n      console.log(\"Error Creating Organization\", err);\n      msg.ack();"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "1d15643fb2d1a2127a8c5b81b7f1582978a21e37348d038821ee2e412a5f510a"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/EditUserDialog.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9,
                  "charOffset": 1527,
                  "charLength": 142,
                  "snippet": {
                    "text": "notificationActions.addNotification({\n          type: \"success\",\n          title: \"Success\",\n          description: \"User updated\",\n        })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 38,
                  "startColumn": 1,
                  "charOffset": 1480,
                  "charLength": 220,
                  "snippet": {
                    "text": "    onSuccess: () => {\n      dispatch(\n        notificationActions.addNotification({\n          type: \"success\",\n          title: \"Success\",\n          description: \"User updated\",\n        })\n      );\n      setOpen(false);"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "21d460713fc227f008e1630cc6bad391f52af15d714ce6d88b347552ebad5a1c"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/forms/auth/verify/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 14,
                  "charOffset": 1236,
                  "charLength": 29,
                  "snippet": {
                    "text": "authActions.signIn(user.user)"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 34,
                  "startColumn": 1,
                  "charOffset": 1194,
                  "charLength": 162,
                  "snippet": {
                    "text": "\n\t\t\tif (user && user.user) {\n\t\t\t\tdispatch(authActions.signIn(user.user))\n\t\t\t\tconst returnUrl = router.query.returnUrl || '/'\n\t\t\t\trouter.push(returnUrl.toString())"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3fe626910a04aa39333cbef8bf6bd903a89c1b43059c5ae06ed996b517b22fb4"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/conversation-router/src/events/listeners/organization-updated-listener.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11,
                  "charOffset": 953,
                  "charLength": 19,
                  "snippet": {
                    "text": "organization.save()"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 31,
                  "startColumn": 1,
                  "charOffset": 919,
                  "charLength": 155,
                  "snippet": {
                    "text": "      settings,\n    });\n    await organization.save().catch((err) => {\n      console.log(\"There was an error updating organization\", err);\n      msg.ack();"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "43a58789e119785c26fd8a8d20f0455a5588fd96856bb93143b97270da78369a"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/hooks/use-request.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 11,
                  "charOffset": 1181,
                  "charLength": 169,
                  "snippet": {
                    "text": "notificationActions.addNotification({\n            type: \"error\",\n            title: \"Error\",\n            description: error.response.data.errors[0].message,\n          })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 37,
                  "startColumn": 1,
                  "charOffset": 1140,
                  "charLength": 229,
                  "snippet": {
                    "text": "          );\n        dispatch(\n          notificationActions.addNotification({\n            type: \"error\",\n            title: \"Error\",\n            description: error.response.data.errors[0].message,\n          })\n        );\n      }"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "474f90d1a340428307ff21eb5fe3eba802fbcd9bcfa69f2e943b6cd1bfdc3b77"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/_app.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 7,
                  "charOffset": 2235,
                  "charLength": 159,
                  "snippet": {
                    "text": "notificationActions.addNotification({\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\ttitle: 'Invite Accepted',\n\t\t\t\t\t\t\tdescription: 'You have successfully been added',\n\t\t\t\t\t\t})"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 66,
                  "startColumn": 1,
                  "charOffset": 2213,
                  "charLength": 195,
                  "snippet": {
                    "text": "\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tnotificationActions.addNotification({\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\ttitle: 'Invite Accepted',\n\t\t\t\t\t\t\tdescription: 'You have successfully been added',\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t})"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "536e534194b555386d1cce3b2dec6f007183331b328ee2bac20fae8c129a0c14"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/WhatsappIntegrations/WhatsappInformation.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 9,
                  "charOffset": 589,
                  "charLength": 100,
                  "snippet": {
                    "text": "integrationActions.setWhatsappInformation({\n          facebookID,\n          whatsappName,\n        })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "charOffset": 552,
                  "charLength": 153,
                  "snippet": {
                    "text": "    save() {\n      dispatch(\n        integrationActions.setWhatsappInformation({\n          facebookID,\n          whatsappName,\n        })\n      );\n    },"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "62eb59a5d5710c7c6f57a27f0d38b907075e548b28e6b21f27425b1cb9101d68"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/AddUserDialog.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 9,
                  "charOffset": 1245,
                  "charLength": 145,
                  "snippet": {
                    "text": "notificationActions.addNotification({\n          type: \"success\",\n          title: \"User Invited\",\n          description: \"User added\",\n        })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 26,
                  "startColumn": 1,
                  "charOffset": 1198,
                  "charLength": 208,
                  "snippet": {
                    "text": "    onSuccess: () => {\n      dispatch(\n        notificationActions.addNotification({\n          type: \"success\",\n          title: \"User Invited\",\n          description: \"User added\",\n        })\n      );\n    },"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "63f4e109a6cc42915833d3f27db21258d61339caf2afe3e50e55253ae12d0073"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/conversation-router/src/events/listeners/settings-created-listener.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 15,
                  "charOffset": 706,
                  "charLength": 15,
                  "snippet": {
                    "text": "settings.save()"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 21,
                  "startColumn": 1,
                  "charOffset": 644,
                  "charLength": 174,
                  "snippet": {
                    "text": "\n        const settings = Settings.build(data);\n        await settings.save().catch((err) => {\n            console.log(\"Error Creating Settings\", err);\n            msg.ack();"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6c867de75d54759510d98e58a5a70476933d3e5ff05d0b9b4a1e5ca831640d23"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/Notification.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 14,
                  "charOffset": 772,
                  "charLength": 37,
                  "snippet": {
                    "text": "notificationActions.toggleOpen(index)"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 26,
                  "startColumn": 1,
                  "charOffset": 713,
                  "charLength": 104,
                  "snippet": {
                    "text": "  );\n  const closeNotification = (index) => {\n    dispatch(notificationActions.toggleOpen(index));\n  };\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6cf51af1bb9b1a850750b0b66492d80bf7c02198755bfba92779dad314506f44"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/conversation-router/src/events/listeners/settings-updated-listener.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 15,
                  "charOffset": 1034,
                  "charLength": 15,
                  "snippet": {
                    "text": "settings.save()"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 31,
                  "startColumn": 1,
                  "charOffset": 988,
                  "charLength": 169,
                  "snippet": {
                    "text": "\n        settings.set(newData);\n        await settings.save().catch(err => {\n            console.log(\"There was an error updating settings\", err);\n            msg.ack();"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6fb92f2c24f6a7cadc402b259a75838df601fe42dd4aef55cfa8091ea900a9e4"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/hooks/use-request.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 14,
                  "charOffset": 1389,
                  "charLength": 30,
                  "snippet": {
                    "text": "loadingActions.toggleLoading()"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 45,
                  "startColumn": 1,
                  "charOffset": 1362,
                  "charLength": 65,
                  "snippet": {
                    "text": "      }\n    }\n    dispatch(loadingActions.toggleLoading());\n  };\n"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "71969eea135b9abe70ed89ade885c388eeec1aa12adbd6fd11ac93e4d47afc9b"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/hooks/use-request.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 16,
                  "charOffset": 469,
                  "charLength": 30,
                  "snippet": {
                    "text": "loadingActions.toggleLoading()"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 11,
                  "startColumn": 1,
                  "charOffset": 410,
                  "charLength": 141,
                  "snippet": {
                    "text": "  const doRequest = async () => {\n    try {\n      dispatch(loadingActions.toggleLoading());\n      const response = await axios({\n        url,"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "797799eeeec0cdd1eac23920b8c02f0ab51e8f6570d208569c46b62991659283"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/UserTable.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 6,
                  "charOffset": 1499,
                  "charLength": 193,
                  "snippet": {
                    "text": "notificationActions.addNotification({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttitle: 'User Removed',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"User has successfully been removed from the organization's members\",\n\t\t\t\t\t})"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 42,
                  "startColumn": 1,
                  "charOffset": 1463,
                  "charLength": 241,
                  "snippet": {
                    "text": "\t\t\t.then(() => {\n\t\t\t\tdispatch(\n\t\t\t\t\tnotificationActions.addNotification({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttitle: 'User Removed',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"User has successfully been removed from the organization's members\",\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t})"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8ab52566e45e42a07a960a2cf7ee5794cb5b41dd76391ab5bcff2beed6182f84"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/organization/src/test/setup.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 16,
                  "charOffset": 2120,
                  "charLength": 15,
                  "snippet": {
                    "text": "roleUser.save()"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 77,
                  "startColumn": 1,
                  "charOffset": 2098,
                  "charLength": 42,
                  "snippet": {
                    "text": "  });\n\n  return await roleUser.save();\n};\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8c8bc044cd9de0820e8241da0cbfef22f6d6e4567ba1243b10ed02d5e9f00fa3"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/WhatsappIntegrations/BrandContact.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 9,
                  "charOffset": 739,
                  "charLength": 144,
                  "snippet": {
                    "text": "integrationActions.setBrandContact({\n          contactName,\n          contactSurname,\n          contactEmail,\n          contactPhone,\n        })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "charOffset": 702,
                  "charLength": 197,
                  "snippet": {
                    "text": "    save() {\n      dispatch(\n        integrationActions.setBrandContact({\n          contactName,\n          contactSurname,\n          contactEmail,\n          contactPhone,\n        })\n      );\n    },"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "955afaf0e0ef0db5cdd57febc8f0df7fb9290c0ac11bc737449c0b1f63390095"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/store/reducers/user.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 9,
                  "charOffset": 805,
                  "charLength": 142,
                  "snippet": {
                    "text": "notificationActions.addNotification({\n          type: \"success\",\n          title: \"Success\",\n          description: \"Role Updated\",\n        })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 29,
                  "startColumn": 1,
                  "charOffset": 752,
                  "charLength": 226,
                  "snippet": {
                    "text": "      console.log(response);\n      dispatch(\n        notificationActions.addNotification({\n          type: \"success\",\n          title: \"Success\",\n          description: \"Role Updated\",\n        })\n      );\n    } catch (error) {"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "95645c4adbb8f2b905cce3c6bff5e1072f33b512182a32cab30389720b85699e"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/conversation-router/src/events/listeners/created-notification-listener.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 13,
                  "charOffset": 3012,
                  "charLength": 19,
                  "snippet": {
                    "text": "notification.save()"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 99,
                  "startColumn": 1,
                  "charOffset": 2966,
                  "charLength": 143,
                  "snippet": {
                    "text": "        notificationData\n      );\n      await notification.save().catch((error) => {\n        Sentry.captureException(error);\n        msg.ack();"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "99ee2364156b62250cb08bf75ae2c568093f46417e8d466090c362b814061a8d"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/events/listeners/settings-updated-listener.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 11,
                  "charOffset": 1099,
                  "charLength": 15,
                  "snippet": {
                    "text": "settings.save()"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 41,
                  "startColumn": 1,
                  "charOffset": 1061,
                  "charLength": 149,
                  "snippet": {
                    "text": "\n    settings.set(newData);\n    await settings.save().catch(err => {\n      console.log(\"There was an error updating settings\", err);\n      msg.ack();"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "9cb53e12a7990fffa5228562c85c1836ebb513d58f3e6cb29d9cec609b33b4d9"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/hooks/use-request.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 13,
                  "charOffset": 984,
                  "charLength": 155,
                  "snippet": {
                    "text": "notificationActions.addNotification({\n              type: \"error\",\n              title: \"Error\",\n              description: \"404 Not Found\",\n            })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 30,
                  "startColumn": 1,
                  "charOffset": 904,
                  "charLength": 266,
                  "snippet": {
                    "text": "        if (!error.response.data.errors)\n          return dispatch(\n            notificationActions.addNotification({\n              type: \"error\",\n              title: \"Error\",\n              description: \"404 Not Found\",\n            })\n          );\n        dispatch("
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "9d758a78d28b10070f3af38f31f3aa54b1f9947544ba056b3c1ce6e3820df001"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/store/reducers/integration.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 9,
                  "charOffset": 1290,
                  "charLength": 147,
                  "snippet": {
                    "text": "notificationActions.addNotification({\n          type: \"success\",\n          title: \"Success\",\n          description: \"Integration Saved\",\n        })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 43,
                  "startColumn": 1,
                  "charOffset": 1237,
                  "charLength": 217,
                  "snippet": {
                    "text": "      console.log(response);\n      dispatch(\n        notificationActions.addNotification({\n          type: \"success\",\n          title: \"Success\",\n          description: \"Integration Saved\",\n        })\n      );\n    });"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "afce7cc114a2a2b2e3f1ad52b11a0530bbbf34e7d9a46c2222ee11f8be05eb08"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/logging/src/routes/index.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 16,
                  "charOffset": 3503,
                  "charLength": 10,
                  "snippet": {
                    "text": "log.save()"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 152,
                  "startColumn": 1,
                  "charOffset": 3482,
                  "charLength": 36,
                  "snippet": {
                    "text": "\t\t})\n\n\t\treturn await log.save()\n\t}\n}"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "dc33b3ba86ff1442ad2fc0fb79af9b65a3bc97253702f022434106a411895923"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/forms/auth/signin/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 14,
                  "charOffset": 1471,
                  "charLength": 29,
                  "snippet": {
                    "text": "authActions.signIn(user.user)"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 56,
                  "startColumn": 1,
                  "charOffset": 1429,
                  "charLength": 162,
                  "snippet": {
                    "text": "\n\t\t\tif (user && user.user) {\n\t\t\t\tdispatch(authActions.signIn(user.user))\n\t\t\t\tconst returnUrl = router.query.returnUrl || '/'\n\t\t\t\trouter.push(returnUrl.toString())"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e1d4c762f433f7b113cd6f810a23e2c38ceed2a2a47acfe75f544cc5a5a9aa50"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/UI/OrganizationSelector/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 12,
                  "charOffset": 1136,
                  "charLength": 48,
                  "snippet": {
                    "text": "orgActions.setSelectedOrganization(organization)"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 35,
                  "startColumn": 1,
                  "charOffset": 1073,
                  "charLength": 168,
                  "snippet": {
                    "text": "\t\tsetOrgName(organization.name)\n\t\tsetAnchorEl(null)\n\t\tdispatch(orgActions.setSelectedOrganization(organization))\n\t\tlocalStorage.setItem('orgName', organization.name)\n\t}"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ea6e15d96bed0a1ea9982422fae62f5de649887c4fc327d6e546b1f0bd19f399"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/components/WhatsappIntegrations/BrandInformation.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 9,
                  "charOffset": 975,
                  "charLength": 167,
                  "snippet": {
                    "text": "integrationActions.setBrandInformation({\n          brandName,\n          brandAddress,\n          city,\n          state,\n          country,\n          zipcode,\n        })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 25,
                  "startColumn": 1,
                  "charOffset": 938,
                  "charLength": 220,
                  "snippet": {
                    "text": "    save() {\n      dispatch(\n        integrationActions.setBrandInformation({\n          brandName,\n          brandAddress,\n          city,\n          state,\n          country,\n          zipcode,\n        })\n      );\n    },"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f1e41e541d3f537219642a9ebde97bc548375144c8af0b5b28ef5bc0e15cd817"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/store/reducers/user.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9,
                  "charOffset": 1041,
                  "charLength": 137,
                  "snippet": {
                    "text": "notificationActions.addNotification({\n          type: \"error\",\n          title: \"Error\",\n          description: error.message,\n        })"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 38,
                  "startColumn": 1,
                  "charOffset": 979,
                  "charLength": 214,
                  "snippet": {
                    "text": "      // dispatch error notification.\n      dispatch(\n        notificationActions.addNotification({\n          type: \"error\",\n          title: \"Error\",\n          description: error.message,\n        })\n      );\n    }"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f412f5c591ed07918fe43ea70cd239ef71a9ccb412d15d757eb9d31e373ad855"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/admin.js",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 5,
                  "charOffset": 2443,
                  "charLength": 152,
                  "snippet": {
                    "text": "notificationActions.addNotification({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\ttitle: 'User Invite',\n\t\t\t\t\tdescription: 'You have successfully invited a  user',\n\t\t\t\t})"
                  },
                  "sourceLanguage": "ECMAScript 6"
                },
                "contextRegion": {
                  "startLine": 86,
                  "startColumn": 1,
                  "charOffset": 2370,
                  "charLength": 248,
                  "snippet": {
                    "text": "\t\torgService.inviteUser(id, data.email).then((res) => {\n\t\t\tdispatch(\n\t\t\t\tnotificationActions.addNotification({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\ttitle: 'User Invite',\n\t\t\t\t\tdescription: 'You have successfully invited a  user',\n\t\t\t\t})\n\t\t\t)\n\t\t\tsetOpen(false)"
                  },
                  "sourceLanguage": "JavaScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "fa1c2a6af2c1832996cf6b4fc315ddd15edb48e020856b0708ceb21663a09b0a"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "ECMAScript 6"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/organization/src/test/setup.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 16,
                  "charOffset": 1993,
                  "charLength": 11,
                  "snippet": {
                    "text": "user.save()"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 69,
                  "startColumn": 1,
                  "charOffset": 1940,
                  "charLength": 69,
                  "snippet": {
                    "text": "    email: \"testUser@test.com\",\n  });\n  return await user.save();\n};\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "fa276c24085b0515d71f6c2ee0cb3a02f1fcbe7394305ce374fedc4357630f5d"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "JSVoidFunctionReturnValueUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Void function return value is used",
            "markdown": "Void function return value is used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/conversation-router/src/events/listeners/created-notification-listener.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 13,
                  "charOffset": 3648,
                  "charLength": 19,
                  "snippet": {
                    "text": "notification.save()"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 119,
                  "startColumn": 1,
                  "charOffset": 3602,
                  "charLength": 143,
                  "snippet": {
                    "text": "        notificationData\n      );\n      await notification.save().catch((error) => {\n        Sentry.captureException(error);\n        msg.ack();"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "fcc59b6f2a2672c1e19ec71eaa0db12b901db2604d9d0faac35230ea02abe8c0"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "PointlessBooleanExpressionJS",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Can be simplified to item.isUnRead",
            "markdown": "Can be simplified to item.isUnRead"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/clientv2/src/layouts/common/notifications-popover/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 54,
                  "charOffset": 1795,
                  "charLength": 22,
                  "snippet": {
                    "text": "item.isUnRead === true"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 62,
                  "startColumn": 1,
                  "charOffset": 1671,
                  "charLength": 194,
                  "snippet": {
                    "text": "  const [notifications, setNotifications] = useState(_notifications);\n\n  const totalUnRead = notifications.filter((item) => item.isUnRead === true).length;\n\n  const handleMarkAllAsRead = () => {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5f189336b93d9b27e16e799f8f3d3a83f2d878588a1d7b78ab0a94eb4878fefa"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "PointlessBooleanExpressionJS",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Can be simplified to item.isUnRead",
            "markdown": "Can be simplified to item.isUnRead"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/frontend/admin/src/layouts/common/notifications-popover/index.tsx",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 54,
                  "charOffset": 1795,
                  "charLength": 22,
                  "snippet": {
                    "text": "item.isUnRead === true"
                  },
                  "sourceLanguage": "TypeScript JSX"
                },
                "contextRegion": {
                  "startLine": 62,
                  "startColumn": 1,
                  "charOffset": 1671,
                  "charLength": 194,
                  "snippet": {
                    "text": "  const [notifications, setNotifications] = useState(_notifications);\n\n  const totalUnRead = notifications.filter((item) => item.isUnRead === true).length;\n\n  const handleMarkAllAsRead = () => {"
                  },
                  "sourceLanguage": "TypeScript JSX"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c19503140cb7ac896bc80c8470a1b4269997c12bafcb024d953c37c85ae6f7d8"
          },
          "properties": {
            "ideaSeverity": "WARNING",
            "qodanaSeverity": "High",
            "tags": [
              "TypeScript JSX"
            ]
          }
        },
        {
          "ruleId": "TypeScriptAbstractClassConstructorCanBeMadeProtected",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Abstract class constructor can be made protected",
            "markdown": "Abstract class constructor can be made protected"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/Core/src/events/base-publisher.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "charOffset": 287,
                  "charLength": 11,
                  "snippet": {
                    "text": "constructor"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 11,
                  "startColumn": 1,
                  "charOffset": 247,
                  "charLength": 127,
                  "snippet": {
                    "text": "  protected client: JetStreamClient;\n\n  constructor(natsClient: NatsConnection) {\n    this.client = natsClient.jetstream();\n  }"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "14b0e19329c94c330b31221500d381108f17d9bfe7324c871cdf40412ab77aa4"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "TypeScriptAbstractClassConstructorCanBeMadeProtected",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Abstract class constructor can be made protected",
            "markdown": "Abstract class constructor can be made protected"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "libs/Core/src/errors/custom-error.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "charOffset": 125,
                  "charLength": 11,
                  "snippet": {
                    "text": "constructor"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 4,
                  "startColumn": 1,
                  "charOffset": 91,
                  "charLength": 85,
                  "snippet": {
                    "text": "  abstract statusCode: number;\n\n  constructor(message: string) {\n    super(message);\n"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "71a7b5abc2353c966eb8c73d3675806caea52427297f48e6d934561206fbcdc7"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "TypeScriptAbstractClassConstructorCanBeMadeProtected",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Abstract class constructor can be made protected",
            "markdown": "Abstract class constructor can be made protected"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/emailer/src/utilities/emailer.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 5,
                  "charOffset": 322,
                  "charLength": 11,
                  "snippet": {
                    "text": "constructor"
                  },
                  "sourceLanguage": "JavaScript"
                },
                "contextRegion": {
                  "startLine": 13,
                  "startColumn": 1,
                  "charOffset": 286,
                  "charLength": 123,
                  "snippet": {
                    "text": "    abstract options: Options;\n\n    constructor(private html: any) {\n        this.transporter = this.buildTransport()\n    }"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "796f492376bb313ee3ac0740555e51ee96ef0452f302a43240253f88e503b5fe"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "JavaScript"
            ]
          }
        },
        {
          "ruleId": "TypeScriptFieldCanBeMadeReadonly",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Field can be readonly",
            "markdown": "Field can be readonly"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/templates/src/routes/helpers/SearchQueryManager.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 3,
                  "charOffset": 228,
                  "charLength": 7,
                  "snippet": {
                    "text": "private"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 8,
                  "startColumn": 1,
                  "charOffset": 188,
                  "charLength": 98,
                  "snippet": {
                    "text": " */\nexport class SearchQueryManager {\n  private orgId: string;\n  private queryParams: ParsedQs;\n  "
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "141fb9be18d92e2fc54051cf772840c072c196475a21f87990a87d0609adfaa3"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "TypeScriptFieldCanBeMadeReadonly",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Field can be readonly",
            "markdown": "Field can be readonly"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/templates/src/routes/helpers/SearchQueryManager.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 3,
                  "charOffset": 253,
                  "charLength": 7,
                  "snippet": {
                    "text": "private"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 9,
                  "startColumn": 1,
                  "charOffset": 192,
                  "charLength": 148,
                  "snippet": {
                    "text": "export class SearchQueryManager {\n  private orgId: string;\n  private queryParams: ParsedQs;\n  \n  constructor(orgId: string, queryParams: ParsedQs) {"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "224d2ba1cf6e4155529c2cee936b234406e0b9187d14d2b21815b7a4aa6b59bd"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "TypeScriptFieldCanBeMadeReadonly",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Field can be readonly",
            "markdown": "Field can be readonly"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/campaigns/src/helpers/S3Service.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 5,
                  "charOffset": 92,
                  "charLength": 7,
                  "snippet": {
                    "text": "private"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 28,
                  "charLength": 112,
                  "snippet": {
                    "text": "class AWSService {\n    private static instance: AWSService;\n    private s3: AWS.S3;\n\n    private constructor() {"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8ea07a279b92a924d31a9de19e5974de06b8e6d162121de3848bb1007916177b"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "TypeScript"
            ]
          }
        },
        {
          "ruleId": "TypeScriptFieldCanBeMadeReadonly",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Field can be readonly",
            "markdown": "Field can be readonly"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "apps/api/send-campaign/src/helpers/S3Service.ts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 5,
                  "charOffset": 92,
                  "charLength": 7,
                  "snippet": {
                    "text": "private"
                  },
                  "sourceLanguage": "TypeScript"
                },
                "contextRegion": {
                  "startLine": 3,
                  "startColumn": 1,
                  "charOffset": 28,
                  "charLength": 112,
                  "snippet": {
                    "text": "class AWSService {\n    private static instance: AWSService;\n    private s3: AWS.S3;\n\n    private constructor() {"
                  },
                  "sourceLanguage": "TypeScript"
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Micro-Service-Ticketing",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c4f471af4e9af5824fc956d249cb7bf32098061ec7fa73d6d7c34e8b7b2e39cb"
          },
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "qodanaSeverity": "Moderate",
            "tags": [
              "TypeScript"
            ]
          }
        }
      ],
      "automationDetails": {
        "id": "project/qodana/2024-02-02",
        "guid": "909eb4c4-d3d3-46a1-987b-d80349bf6f47",
        "properties": {
          "jobUrl": "https://github.com/ChannelMobile/Channel360/actions/runs/7753518667"
        }
      },
      "newlineSequences": [
        "\r\n",
        "\n"
      ],
      "properties": {
        "qodana.promo.results": [
          {
            "ruleId": "DuplicatedCode",
            "kind": "fail",
            "level": "note",
            "message": {
              "text": "Duplicated code",
              "markdown": "Duplicated code"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "apps/frontend/admin/src/components/animate/variants/zoom.ts",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 3319,
                    "snippet": {
                      "text": "import { VariantsType } from '../types';\nimport { varTranExit, varTranEnter } from './transition';\n\n// ----------------------------------------------------------------------\n\nexport const varZoom = (props?: VariantsType) => {\n  const distance = props?.distance || 720;\n  const durationIn = props?.durationIn;\n  const durationOut = props?.durationOut;\n  const easeIn = props?.easeIn;\n  const easeOut = props?.easeOut;\n\n  return {\n    // IN\n    in: {\n      initial: { scale: 0, opacity: 0 },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inUp: {\n      initial: { scale: 0, opacity: 0, translateY: distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateY: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateY: distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inDown: {\n      initial: { scale: 0, opacity: 0, translateY: -distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateY: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateY: -distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inLeft: {\n      initial: { scale: 0, opacity: 0, translateX: -distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateX: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateX: -distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inRight: {\n      initial: { scale: 0, opacity: 0, translateX: distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateX: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateX: distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n\n    // OUT\n    out: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outUp: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateY: -distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outDown: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateY: distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outLeft: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateX: -distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outRight: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateX: distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n  };\n};"
                    },
                    "sourceLanguage": "TypeScript"
                  },
                  "contextRegion": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 3319,
                    "snippet": {
                      "text": "import { VariantsType } from '../types';\nimport { varTranExit, varTranEnter } from './transition';\n\n// ----------------------------------------------------------------------\n\nexport const varZoom = (props?: VariantsType) => {\n  const distance = props?.distance || 720;\n  const durationIn = props?.durationIn;\n  const durationOut = props?.durationOut;\n  const easeIn = props?.easeIn;\n  const easeOut = props?.easeOut;\n\n  return {\n    // IN\n    in: {\n      initial: { scale: 0, opacity: 0 },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inUp: {\n      initial: { scale: 0, opacity: 0, translateY: distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateY: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateY: distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inDown: {\n      initial: { scale: 0, opacity: 0, translateY: -distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateY: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateY: -distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inLeft: {\n      initial: { scale: 0, opacity: 0, translateX: -distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateX: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateX: -distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inRight: {\n      initial: { scale: 0, opacity: 0, translateX: distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateX: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateX: distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n\n    // OUT\n    out: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outUp: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateY: -distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outDown: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateY: distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outLeft: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateX: -distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outRight: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateX: distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n  };\n};"
                    },
                    "sourceLanguage": "TypeScript"
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "Micro-Service-Ticketing",
                    "kind": "module"
                  }
                ]
              },
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "apps/frontend/admin/src/components/animate/variants/zoom.ts",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 99,
                    "snippet": {
                      "text": "import { VariantsType } from '../types';\nimport { varTranExit, varTranEnter } from './transition';\n"
                    },
                    "sourceLanguage": "TypeScript"
                  },
                  "contextRegion": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 99,
                    "snippet": {
                      "text": "import { VariantsType } from '../types';\nimport { varTranExit, varTranEnter } from './transition';\n"
                    },
                    "sourceLanguage": "TypeScript"
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "Micro-Service-Ticketing",
                    "kind": "module"
                  }
                ]
              },
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "apps/frontend/clientv2/src/components/animate/variants/zoom.ts",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 3319,
                    "snippet": {
                      "text": "import { VariantsType } from '../types';\nimport { varTranExit, varTranEnter } from './transition';\n\n// ----------------------------------------------------------------------\n\nexport const varZoom = (props?: VariantsType) => {\n  const distance = props?.distance || 720;\n  const durationIn = props?.durationIn;\n  const durationOut = props?.durationOut;\n  const easeIn = props?.easeIn;\n  const easeOut = props?.easeOut;\n\n  return {\n    // IN\n    in: {\n      initial: { scale: 0, opacity: 0 },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inUp: {\n      initial: { scale: 0, opacity: 0, translateY: distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateY: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateY: distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inDown: {\n      initial: { scale: 0, opacity: 0, translateY: -distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateY: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateY: -distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inLeft: {\n      initial: { scale: 0, opacity: 0, translateX: -distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateX: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateX: -distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inRight: {\n      initial: { scale: 0, opacity: 0, translateX: distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateX: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateX: distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n\n    // OUT\n    out: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outUp: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateY: -distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outDown: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateY: distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outLeft: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateX: -distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outRight: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateX: distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n  };\n};"
                    },
                    "sourceLanguage": "TypeScript"
                  },
                  "contextRegion": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 3319,
                    "snippet": {
                      "text": "import { VariantsType } from '../types';\nimport { varTranExit, varTranEnter } from './transition';\n\n// ----------------------------------------------------------------------\n\nexport const varZoom = (props?: VariantsType) => {\n  const distance = props?.distance || 720;\n  const durationIn = props?.durationIn;\n  const durationOut = props?.durationOut;\n  const easeIn = props?.easeIn;\n  const easeOut = props?.easeOut;\n\n  return {\n    // IN\n    in: {\n      initial: { scale: 0, opacity: 0 },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inUp: {\n      initial: { scale: 0, opacity: 0, translateY: distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateY: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateY: distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inDown: {\n      initial: { scale: 0, opacity: 0, translateY: -distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateY: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateY: -distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inLeft: {\n      initial: { scale: 0, opacity: 0, translateX: -distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateX: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateX: -distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n    inRight: {\n      initial: { scale: 0, opacity: 0, translateX: distance },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        translateX: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n      exit: {\n        scale: 0,\n        opacity: 0,\n        translateX: distance,\n        transition: varTranExit({ durationOut, easeOut }),\n      },\n    },\n\n    // OUT\n    out: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outUp: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateY: -distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outDown: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateY: distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outLeft: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateX: -distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n    outRight: {\n      initial: { scale: 1, opacity: 1 },\n      animate: {\n        scale: 0,\n        opacity: 0,\n        translateX: distance,\n        transition: varTranEnter({ durationIn, easeIn }),\n      },\n    },\n  };\n};"
                    },
                    "sourceLanguage": "TypeScript"
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "Micro-Service-Ticketing",
                    "kind": "module"
                  }
                ]
              },
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "apps/frontend/clientv2/src/components/animate/variants/zoom.ts",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 99,
                    "snippet": {
                      "text": "import { VariantsType } from '../types';\nimport { varTranExit, varTranEnter } from './transition';\n"
                    },
                    "sourceLanguage": "TypeScript"
                  },
                  "contextRegion": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 99,
                    "snippet": {
                      "text": "import { VariantsType } from '../types';\nimport { varTranExit, varTranEnter } from './transition';\n"
                    },
                    "sourceLanguage": "TypeScript"
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "Micro-Service-Ticketing",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "4f3117bdf30fe23f5809a7ba6983385b961603ae3d6b333f9cf2a5bb412cde43"
            },
            "properties": {
              "ideaSeverity": "WEAK WARNING",
              "qodanaSeverity": "Moderate"
            }
          },
          {
            "ruleId": "DuplicatedCode",
            "kind": "fail",
            "level": "note",
            "message": {
              "text": "Duplicated code",
              "markdown": "Duplicated code"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "apps/frontend/admin/cypress/support/commands.js",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 72,
                    "snippet": {
                      "text": "/// <reference types=\"cypress\" />\n\nconst host = 'http://localhost:3000';"
                    },
                    "sourceLanguage": "JavaScript"
                  },
                  "contextRegion": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 72,
                    "snippet": {
                      "text": "/// <reference types=\"cypress\" />\n\nconst host = 'http://localhost:3000';"
                    },
                    "sourceLanguage": "JavaScript"
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "Micro-Service-Ticketing",
                    "kind": "module"
                  }
                ]
              },
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "apps/frontend/clientv2/cypress/support/commands.js",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 72,
                    "snippet": {
                      "text": "/// <reference types=\"cypress\" />\n\nconst host = 'http://localhost:3000';"
                    },
                    "sourceLanguage": "JavaScript"
                  },
                  "contextRegion": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 72,
                    "snippet": {
                      "text": "/// <reference types=\"cypress\" />\n\nconst host = 'http://localhost:3000';"
                    },
                    "sourceLanguage": "JavaScript"
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "Micro-Service-Ticketing",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "7676d44d293e50bd6ecfc2a72f17a417f5bc2c9ecd18ae90e9792f14b6972d70"
            },
            "properties": {
              "ideaSeverity": "WEAK WARNING",
              "qodanaSeverity": "Moderate"
            }
          },
          {
            "ruleId": "DuplicatedCode",
            "kind": "fail",
            "level": "note",
            "message": {
              "text": "Duplicated code",
              "markdown": "Duplicated code"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "apps/frontend/admin/src/hooks/use-off-set-top.ts",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 110,
                    "snippet": {
                      "text": "import { useScroll } from 'framer-motion';\nimport { useMemo, useState, useEffect, useCallback } from 'react';\n"
                    },
                    "sourceLanguage": "TypeScript"
                  },
                  "contextRegion": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 110,
                    "snippet": {
                      "text": "import { useScroll } from 'framer-motion';\nimport { useMemo, useState, useEffect, useCallback } from 'react';\n"
                    },
                    "sourceLanguage": "TypeScript"
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "Micro-Service-Ticketing",
                    "kind": "module"
                  }
                ]
              },
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "apps/frontend/clientv2/src/hooks/use-off-set-top.ts",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 110,
                    "snippet": {
                      "text": "import { useScroll } from 'framer-motion';\nimport { useMemo, useState, useEffect, useCallback } from 'react';\n"
                    },
                    "sourceLanguage": "TypeScript"
                  },
                  "contextRegion": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 110,
                    "snippet": {
                      "text": "import { useScroll } from 'framer-motion';\nimport { useMemo, useState, useEffect, useCallback } from 'react';\n"
                    },
                    "sourceLanguage": "TypeScript"
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "Micro-Service-Ticketing",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "7da02ae4a15d573b8f8da941c8508c133dd571e0c35a3a622eb83c5c59884079"
            },
            "properties": {
              "ideaSeverity": "WEAK WARNING",
              "qodanaSeverity": "Moderate"
            }
          },
          {
            "ruleId": "DuplicatedCode",
            "kind": "fail",
            "level": "note",
            "message": {
              "text": "Duplicated code",
              "markdown": "Duplicated code"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "apps/frontend/admin/src/assets/illustrations/upgrade-storage-illustration.tsx",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 79,
                    "snippet": {
                      "text": "import { memo } from 'react';\n\nimport { useTheme } from '@mui/material/styles';"
                    },
                    "sourceLanguage": "TypeScript JSX"
                  },
                  "contextRegion": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 79,
                    "snippet": {
                      "text": "import { memo } from 'react';\n\nimport { useTheme } from '@mui/material/styles';"
                    },
                    "sourceLanguage": "TypeScript JSX"
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "Micro-Service-Ticketing",
                    "kind": "module"
                  }
                ]
              },
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "apps/frontend/clientv2/src/assets/illustrations/upgrade-storage-illustration.tsx",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 79,
                    "snippet": {
                      "text": "import { memo } from 'react';\n\nimport { useTheme } from '@mui/material/styles';"
                    },
                    "sourceLanguage": "TypeScript JSX"
                  },
                  "contextRegion": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 79,
                    "snippet": {
                      "text": "import { memo } from 'react';\n\nimport { useTheme } from '@mui/material/styles';"
                    },
                    "sourceLanguage": "TypeScript JSX"
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "Micro-Service-Ticketing",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "f68932293d4e73a8ea94aea0af4fbe4a6ff211cf81eb38aa632c7ce1fd03a2fc"
            },
            "properties": {
              "ideaSeverity": "WEAK WARNING",
              "qodanaSeverity": "Moderate"
            }
          },
          {
            "ruleId": "DuplicatedCode",
            "kind": "fail",
            "level": "note",
            "message": {
              "text": "Duplicated code",
              "markdown": "Duplicated code"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "apps/frontend/admin/src/layouts/dashboard/nav-horizontal.tsx",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 73,
                    "snippet": {
                      "text": "import { memo } from 'react';\n\nimport AppBar from '@mui/material/AppBar';"
                    },
                    "sourceLanguage": "TypeScript JSX"
                  },
                  "contextRegion": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 73,
                    "snippet": {
                      "text": "import { memo } from 'react';\n\nimport AppBar from '@mui/material/AppBar';"
                    },
                    "sourceLanguage": "TypeScript JSX"
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "Micro-Service-Ticketing",
                    "kind": "module"
                  }
                ]
              },
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "apps/frontend/clientv2/src/layouts/dashboard/nav-horizontal.tsx",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 73,
                    "snippet": {
                      "text": "import { memo } from 'react';\n\nimport AppBar from '@mui/material/AppBar';"
                    },
                    "sourceLanguage": "TypeScript JSX"
                  },
                  "contextRegion": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 73,
                    "snippet": {
                      "text": "import { memo } from 'react';\n\nimport AppBar from '@mui/material/AppBar';"
                    },
                    "sourceLanguage": "TypeScript JSX"
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "Micro-Service-Ticketing",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "fd68217741ab852074c66a5c064d992b95e0d761207be0b96f97bb2ec26fe5f4"
            },
            "properties": {
              "ideaSeverity": "WEAK WARNING",
              "qodanaSeverity": "Moderate"
            }
          },
          {
            "ruleId": "TrivialConditionalJS",
            "kind": "fail",
            "level": "warning",
            "message": {
              "text": "'subIdArray.length > 0 ? false : true' can be simplified to 'subIdArray.length<=0'",
              "markdown": "'subIdArray.length \\> 0 ? false : true' can be simplified to 'subIdArray.length\\<=0'"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/index.js",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 295,
                    "startColumn": 17,
                    "charOffset": 7400,
                    "charLength": 36,
                    "snippet": {
                      "text": "subIdArray.length > 0 ? false : true"
                    },
                    "sourceLanguage": "ECMAScript 6"
                  },
                  "contextRegion": {
                    "startLine": 293,
                    "startColumn": 1,
                    "charOffset": 7370,
                    "charLength": 115,
                    "snippet": {
                      "text": "\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdisabled={subIdArray.length > 0 ? false : true}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"success\""
                    },
                    "sourceLanguage": "JavaScript"
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "Micro-Service-Ticketing",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "6d2cf1389008b68968483893ca74b1a3ec8747d94668832f48fd911eccc1cbd9"
            },
            "properties": {
              "ideaSeverity": "WARNING",
              "qodanaSeverity": "High"
            }
          },
          {
            "ruleId": "TrivialConditionalJS",
            "kind": "fail",
            "level": "warning",
            "message": {
              "text": "'subIdArray.length > 1 ? false : true' can be simplified to 'subIdArray.length<=1'",
              "markdown": "'subIdArray.length \\> 1 ? false : true' can be simplified to 'subIdArray.length\\<=1'"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "apps/frontend/client(obsolete)/pages/organization/[id]/subscribers/index.js",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 286,
                    "startColumn": 17,
                    "charOffset": 7194,
                    "charLength": 36,
                    "snippet": {
                      "text": "subIdArray.length > 1 ? false : true"
                    },
                    "sourceLanguage": "ECMAScript 6"
                  },
                  "contextRegion": {
                    "startLine": 284,
                    "startColumn": 1,
                    "charOffset": 7159,
                    "charLength": 118,
                    "snippet": {
                      "text": "\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdisabled={subIdArray.length > 1 ? false : true}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"error\""
                    },
                    "sourceLanguage": "JavaScript"
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "Micro-Service-Ticketing",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "c534b908e423cc5c5a12b534ba7ec2b8dea5a0a7efac44c7cef67c4151742253"
            },
            "properties": {
              "ideaSeverity": "WARNING",
              "qodanaSeverity": "High"
            }
          }
        ],
        "configProfile": "starter",
        "deviceId": "200820300000000-21e9-6721-ca73-45a8a9c37011",
        "qodanaNewResultSummary": {
          "moderate": 109,
          "high": 241,
          "total": 350
        }
      }
    }
  ]
}